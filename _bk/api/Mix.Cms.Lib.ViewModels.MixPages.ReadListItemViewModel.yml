### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  id: ReadListItemViewModel
  parent: Mix.Cms.Lib.ViewModels.MixPages
  children:
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.#ctor
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Childs
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Content
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedBy
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedDateTime
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CssClass
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.DetailsUrl
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Domain
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Excerpt
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Fields
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Icon
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Id
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Image
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ImageUrl
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.IsActived
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.LastModified
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Layout
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Level
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ModifiedBy
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Name
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.PageSize
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoDescription
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoKeywords
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoName
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoTitle
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.StaticUrl
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Status
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Tags
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Template
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Title
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalArticle
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalProduct
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Type
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedBy
  - Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedDateTime
  langs:
  - csharp
  - vb
  name: ReadListItemViewModel
  nameWithType: ReadListItemViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  type: Class
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: 'public class ReadListItemViewModel : ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>, IViewModel'
    content.vb: >-
      Public Class ReadListItemViewModel
          Inherits ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel)
          Implements IViewModel
  inheritance:
  - System.Object
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  implements:
  - Mix.Domain.Data.ViewModels.IViewModel
  inheritedMembers:
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Repository
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.InitModel
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ExpandViewAsync(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.InitViewAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ParseViewAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixPage,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.CloneSubModels(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Exception
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.IsClone
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.IsLazyLoad
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Cultures
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Mapper
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Model
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ModelMapper
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Priority
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Specificulture
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Errors
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.IsValid
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.#ctor
  commentId: M:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: ReadListItemViewModel()
  nameWithType: ReadListItemViewModel.ReadListItemViewModel()
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ReadListItemViewModel()
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public ReadListItemViewModel()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: '#ctor(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)'
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: ReadListItemViewModel(MixPage, MixCmsContext, IDbContextTransaction)
  nameWithType: ReadListItemViewModel.ReadListItemViewModel(MixPage, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ReadListItemViewModel(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public ReadListItemViewModel(MixPage model, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: model
      type: Mix.Cms.Lib.Models.Cms.MixPage
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Sub New(model As MixPage, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: ExpandView(MixCmsContext, IDbContextTransaction)
  nameWithType: ReadListItemViewModel.ExpandView(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public override void ExpandView(MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Overrides Sub ExpandView(_context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overridden: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Id
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Id
  id: Id
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ReadListItemViewModel.Id
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Id
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Name
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Name
  id: Name
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ReadListItemViewModel.Name
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Name
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Content
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Content
  id: Content
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: ReadListItemViewModel.Content
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Content
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Content As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Layout
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Layout
  id: Layout
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Layout
  nameWithType: ReadListItemViewModel.Layout
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Layout
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Layout { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Layout As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Layout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Template
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Template
  id: Template
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Template
  nameWithType: ReadListItemViewModel.Template
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Template
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Template { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Template As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Template*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Title
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Title
  id: Title
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ReadListItemViewModel.Title
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Title
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Fields
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Fields
  id: Fields
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: ReadListItemViewModel.Fields
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Fields
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Fields { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Fields As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Fields*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Type
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Type
  id: Type
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ReadListItemViewModel.Type
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Type
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public MixEnums.MixPageType Type { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.MixEnums.MixPageType
    content.vb: Public Property Type As MixEnums.MixPageType
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Status
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Status
  id: Status
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ReadListItemViewModel.Status
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Status
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public MixEnums.MixContentStatus Status { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.MixEnums.MixContentStatus
    content.vb: Public Property Status As MixEnums.MixContentStatus
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Icon
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Icon
  id: Icon
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: ReadListItemViewModel.Icon
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Icon
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Icon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Icon As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Icon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CssClass
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CssClass
  id: CssClass
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: CssClass
  nameWithType: ReadListItemViewModel.CssClass
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CssClass
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string CssClass { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CssClass As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CssClass*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.StaticUrl
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.StaticUrl
  id: StaticUrl
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: StaticUrl
  nameWithType: ReadListItemViewModel.StaticUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.StaticUrl
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string StaticUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StaticUrl As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.StaticUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Excerpt
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Excerpt
  id: Excerpt
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Excerpt
  nameWithType: ReadListItemViewModel.Excerpt
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Excerpt
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Excerpt { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Excerpt As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Excerpt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Image
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Image
  id: Image
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: ReadListItemViewModel.Image
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Image
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Image { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Image As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Image*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoName
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoName
  id: SeoName
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: SeoName
  nameWithType: ReadListItemViewModel.SeoName
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoName
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string SeoName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoName As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoDescription
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoDescription
  id: SeoDescription
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: SeoDescription
  nameWithType: ReadListItemViewModel.SeoDescription
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoDescription
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string SeoDescription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoDescription As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoDescription*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoKeywords
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoKeywords
  id: SeoKeywords
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: SeoKeywords
  nameWithType: ReadListItemViewModel.SeoKeywords
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoKeywords
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string SeoKeywords { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoKeywords As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoKeywords*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoTitle
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoTitle
  id: SeoTitle
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: SeoTitle
  nameWithType: ReadListItemViewModel.SeoTitle
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoTitle
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string SeoTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoTitle As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoTitle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Level
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Level
  id: Level
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: ReadListItemViewModel.Level
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Level
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public Nullable<int> Level { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Level As Nullable(Of Integer)
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Level*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.PageSize
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.PageSize
  id: PageSize
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: PageSize
  nameWithType: ReadListItemViewModel.PageSize
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.PageSize
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public int PageSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PageSize As Integer
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.PageSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.LastModified
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.LastModified
  id: LastModified
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: ReadListItemViewModel.LastModified
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.LastModified
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public DateTime LastModified { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property LastModified As DateTime
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.LastModified*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedDateTime
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: ReadListItemViewModel.CreatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedDateTime
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDateTime As DateTime
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedDateTime
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedDateTime
  id: UpdatedDateTime
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: UpdatedDateTime
  nameWithType: ReadListItemViewModel.UpdatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedDateTime
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public Nullable<DateTime> UpdatedDateTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property UpdatedDateTime As Nullable(Of DateTime)
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedBy
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedBy
  id: CreatedBy
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: ReadListItemViewModel.CreatedBy
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedBy
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CreatedBy As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedBy
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedBy
  id: UpdatedBy
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: UpdatedBy
  nameWithType: ReadListItemViewModel.UpdatedBy
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedBy
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string UpdatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UpdatedBy As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ModifiedBy
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ModifiedBy
  id: ModifiedBy
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: ModifiedBy
  nameWithType: ReadListItemViewModel.ModifiedBy
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ModifiedBy
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string ModifiedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModifiedBy As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ModifiedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Tags
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Tags
  id: Tags
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: ReadListItemViewModel.Tags
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Tags
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Tags { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Tags As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Domain
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Domain
  id: Domain
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: ReadListItemViewModel.Domain
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Domain
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string Domain { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Domain As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Domain*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ImageUrl
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ImageUrl
  id: ImageUrl
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: ImageUrl
  nameWithType: ReadListItemViewModel.ImageUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ImageUrl
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string ImageUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ImageUrl As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ImageUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Childs
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Childs
  id: Childs
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: Childs
  nameWithType: ReadListItemViewModel.Childs
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Childs
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public List<ReadListItemViewModel> Childs { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
    content.vb: Public Property Childs As List(Of ReadListItemViewModel)
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Childs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalArticle
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalArticle
  id: TotalArticle
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: TotalArticle
  nameWithType: ReadListItemViewModel.TotalArticle
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalArticle
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public int TotalArticle { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TotalArticle As Integer
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalArticle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalProduct
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalProduct
  id: TotalProduct
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: TotalProduct
  nameWithType: ReadListItemViewModel.TotalProduct
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalProduct
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public int TotalProduct { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TotalProduct As Integer
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalProduct*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.IsActived
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.IsActived
  id: IsActived
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: IsActived
  nameWithType: ReadListItemViewModel.IsActived
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.IsActived
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public bool IsActived { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActived As Boolean
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.IsActived*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.DetailsUrl
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.DetailsUrl
  id: DetailsUrl
  parent: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  langs:
  - csharp
  - vb
  name: DetailsUrl
  nameWithType: ReadListItemViewModel.DetailsUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.DetailsUrl
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public string DetailsUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DetailsUrl As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.DetailsUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Lib.ViewModels.MixPages
  commentId: N:Mix.Cms.Lib.ViewModels.MixPages
  isExternal: true
  name: Mix.Cms.Lib.ViewModels.MixPages
  nameWithType: Mix.Cms.Lib.ViewModels.MixPages
  fullName: Mix.Cms.Lib.ViewModels.MixPages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  commentId: T:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  parent: Mix.Domain.Data.ViewModels
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3
  name: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel)
  name.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.IViewModel
  commentId: T:Mix.Domain.Data.ViewModels.IViewModel
  parent: Mix.Domain.Data.ViewModels
  isExternal: true
  name: IViewModel
  nameWithType: IViewModel
  fullName: Mix.Domain.Data.ViewModels.IViewModel
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Repository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Repository
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  name: Repository
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Repository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Repository
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Repository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Repository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.InitModel
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.InitModel
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  name: InitModel()
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.InitModel()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.InitModel()
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).InitModel()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).InitModel()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseModel(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ParseModel(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ParseModel(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Validate(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Validate(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Validate(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ExpandViewAsync(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ExpandViewAsync(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandViewAsync(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ExpandViewAsync(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ExpandViewAsync(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ExpandViewAsync(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ExpandViewAsync(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandViewAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ExpandViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ExpandViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandViewAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ExpandViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ExpandViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.InitViewAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.InitViewAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitViewAsync(MixPage, Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.InitViewAsync(MixPage, Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.InitViewAsync(Mix.Cms.Lib.Models.Cms.MixPage, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).InitViewAsync(MixPage, Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).InitViewAsync(Mix.Cms.Lib.Models.Cms.MixPage, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitViewAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.InitViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.InitViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitViewAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).InitViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).InitViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ParseViewAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ParseViewAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseViewAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ParseViewAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ParseViewAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ParseViewAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ParseViewAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseViewAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ParseViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ParseViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseViewAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ParseViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ParseViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneAsync(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.CloneAsync(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.CloneAsync(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).CloneAsync(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).CloneAsync(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModelsAsync(ReadListItemViewModel, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.CloneSubModelsAsync(ReadListItemViewModel, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.CloneSubModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).CloneSubModelsAsync(ReadListItemViewModel, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).CloneSubModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(ReadListItemViewModel, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.RemoveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).RemoveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModelsAsync(ReadListItemViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.RemoveRelatedModelsAsync(ReadListItemViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).RemoveRelatedModelsAsync(ReadListItemViewModel, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.SaveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).SaveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModelsAsync(MixPage, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.SaveSubModelsAsync(MixPage, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).SaveSubModelsAsync(MixPage, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixPage,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixPage,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitView(MixPage, Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.InitView(MixPage, Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.InitView(Mix.Cms.Lib.Models.Cms.MixPage, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).InitView(MixPage, Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).InitView(Mix.Cms.Lib.Models.Cms.MixPage, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ParseView(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ParseView(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandView(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ExpandView(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ExpandView(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Clone(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Clone(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Clone(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Clone(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Clone(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.CloneSubModels(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.CloneSubModels(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModels(ReadListItemViewModel, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.CloneSubModels(ReadListItemViewModel, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.CloneSubModels(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).CloneSubModels(ReadListItemViewModel, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).CloneSubModels(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(ReadListItemViewModel, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.RemoveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).RemoveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModels(ReadListItemViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.RemoveRelatedModels(ReadListItemViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).RemoveRelatedModels(ReadListItemViewModel, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.SaveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).SaveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModels(MixPage, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.SaveSubModels(MixPage, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).SaveSubModels(MixPage, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).SaveSubModels(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Exception
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Exception
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Exception
  name: Exception
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Exception
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Exception
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Exception
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Exception
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.IsClone
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.IsClone
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  name: IsClone
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.IsClone
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.IsClone
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).IsClone
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).IsClone
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.IsLazyLoad
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.IsLazyLoad
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  name: IsLazyLoad
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.IsLazyLoad
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).IsLazyLoad
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).IsLazyLoad
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Cultures
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Cultures
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Cultures
  name: Cultures
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Cultures
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Cultures
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Cultures
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Cultures
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Mapper
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Mapper
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  name: Mapper
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Mapper
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Mapper
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Mapper
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Mapper
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Model
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Model
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  name: Model
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Model
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Model
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Model
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Model
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ModelMapper
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.ModelMapper
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  name: ModelMapper
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.ModelMapper
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.ModelMapper
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).ModelMapper
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).ModelMapper
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Priority
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Priority
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Priority
  name: Priority
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Priority
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Priority
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Priority
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Priority
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Specificulture
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Specificulture
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  name: Specificulture
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Specificulture
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Specificulture
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Specificulture
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Specificulture
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Errors
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.Errors
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  name: Errors
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.Errors
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.Errors
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).Errors
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).Errors
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.IsValid
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}.IsValid
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  name: IsValid
  nameWithType: ViewModelBase<MixCmsContext, MixPage, ReadListItemViewModel>.IsValid
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>.IsValid
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, ReadListItemViewModel).IsValid
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel).IsValid
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
  commentId: T:Mix.Domain.Data.ViewModels.ViewModelBase`3
  isExternal: true
  name: ViewModelBase<TDbContext, TModel, TView>
  nameWithType: ViewModelBase<TDbContext, TModel, TView>
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView)
  name.vb: ViewModelBase(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels
  commentId: N:Mix.Domain.Data.ViewModels
  isExternal: true
  name: Mix.Domain.Data.ViewModels
  nameWithType: Mix.Domain.Data.ViewModels
  fullName: Mix.Domain.Data.ViewModels
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  isExternal: true
  name: Repository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Repository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Repository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Repository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Repository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  isExternal: true
  name: InitModel()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseModel(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Validate(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandViewAsync(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandViewAsync(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandViewAsync(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandViewAsync(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandViewAsync(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandViewAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandViewAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitViewAsync(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitViewAsync(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitViewAsync(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitViewAsync(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitViewAsync(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitViewAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitViewAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseViewAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseViewAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseViewAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseViewAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseViewAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseViewAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseViewAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseView(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandView(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Exception
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Exception
  isExternal: true
  name: Exception
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Exception
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Exception
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Exception
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Exception
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  isExternal: true
  name: IsClone
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsClone
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsClone
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsClone
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsClone
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  isExternal: true
  name: IsLazyLoad
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Cultures
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Cultures
  isExternal: true
  name: Cultures
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Cultures
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Cultures
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Cultures
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Cultures
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  isExternal: true
  name: Mapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Mapper
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Mapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Mapper
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Mapper
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  isExternal: true
  name: Model
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Model
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Model
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Model
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Model
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  isExternal: true
  name: ModelMapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Priority
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Priority
  isExternal: true
  name: Priority
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Priority
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Priority
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Priority
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Priority
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  isExternal: true
  name: Specificulture
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Specificulture
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Specificulture
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Specificulture
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Specificulture
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  isExternal: true
  name: Errors
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Errors
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Errors
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Errors
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Errors
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsValid
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsValid
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsValid
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsValid
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.#ctor*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.#ctor
  isExternal: true
  name: ReadListItemViewModel
  nameWithType: ReadListItemViewModel.ReadListItemViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ReadListItemViewModel
- uid: Mix.Cms.Lib.Models.Cms.MixPage
  commentId: T:Mix.Cms.Lib.Models.Cms.MixPage
  parent: Mix.Cms.Lib.Models.Cms
  isExternal: true
  name: MixPage
  nameWithType: MixPage
  fullName: Mix.Cms.Lib.Models.Cms.MixPage
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  isExternal: true
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  isExternal: true
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ExpandView*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ExpandView
  isExternal: true
  name: ExpandView
  nameWithType: ReadListItemViewModel.ExpandView
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ExpandView
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Id*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Id
  isExternal: true
  name: Id
  nameWithType: ReadListItemViewModel.Id
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Name*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Name
  isExternal: true
  name: Name
  nameWithType: ReadListItemViewModel.Name
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Content*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Content
  isExternal: true
  name: Content
  nameWithType: ReadListItemViewModel.Content
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Content
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Layout*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Layout
  isExternal: true
  name: Layout
  nameWithType: ReadListItemViewModel.Layout
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Layout
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Template*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Template
  isExternal: true
  name: Template
  nameWithType: ReadListItemViewModel.Template
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Template
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Title*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Title
  isExternal: true
  name: Title
  nameWithType: ReadListItemViewModel.Title
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Title
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Fields*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Fields
  isExternal: true
  name: Fields
  nameWithType: ReadListItemViewModel.Fields
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Fields
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Type*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Type
  isExternal: true
  name: Type
  nameWithType: ReadListItemViewModel.Type
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Type
- uid: Mix.Cms.Lib.MixEnums.MixPageType
  commentId: T:Mix.Cms.Lib.MixEnums.MixPageType
  parent: Mix.Cms.Lib
  isExternal: true
  name: MixEnums.MixPageType
  nameWithType: MixEnums.MixPageType
  fullName: Mix.Cms.Lib.MixEnums.MixPageType
- uid: Mix.Cms.Lib
  commentId: N:Mix.Cms.Lib
  isExternal: true
  name: Mix.Cms.Lib
  nameWithType: Mix.Cms.Lib
  fullName: Mix.Cms.Lib
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Status*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Status
  isExternal: true
  name: Status
  nameWithType: ReadListItemViewModel.Status
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Status
- uid: Mix.Cms.Lib.MixEnums.MixContentStatus
  commentId: T:Mix.Cms.Lib.MixEnums.MixContentStatus
  parent: Mix.Cms.Lib
  isExternal: true
  name: MixEnums.MixContentStatus
  nameWithType: MixEnums.MixContentStatus
  fullName: Mix.Cms.Lib.MixEnums.MixContentStatus
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Icon*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Icon
  isExternal: true
  name: Icon
  nameWithType: ReadListItemViewModel.Icon
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Icon
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CssClass*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CssClass
  isExternal: true
  name: CssClass
  nameWithType: ReadListItemViewModel.CssClass
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CssClass
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.StaticUrl*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.StaticUrl
  isExternal: true
  name: StaticUrl
  nameWithType: ReadListItemViewModel.StaticUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.StaticUrl
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Excerpt*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Excerpt
  isExternal: true
  name: Excerpt
  nameWithType: ReadListItemViewModel.Excerpt
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Excerpt
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Image*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Image
  isExternal: true
  name: Image
  nameWithType: ReadListItemViewModel.Image
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Image
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoName*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoName
  isExternal: true
  name: SeoName
  nameWithType: ReadListItemViewModel.SeoName
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoName
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoDescription*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoDescription
  isExternal: true
  name: SeoDescription
  nameWithType: ReadListItemViewModel.SeoDescription
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoDescription
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoKeywords*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoKeywords
  isExternal: true
  name: SeoKeywords
  nameWithType: ReadListItemViewModel.SeoKeywords
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoKeywords
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoTitle*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoTitle
  isExternal: true
  name: SeoTitle
  nameWithType: ReadListItemViewModel.SeoTitle
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.SeoTitle
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Level*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Level
  isExternal: true
  name: Level
  nameWithType: ReadListItemViewModel.Level
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Level
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.PageSize*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.PageSize
  isExternal: true
  name: PageSize
  nameWithType: ReadListItemViewModel.PageSize
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.PageSize
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.LastModified*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.LastModified
  isExternal: true
  name: LastModified
  nameWithType: ReadListItemViewModel.LastModified
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.LastModified
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedDateTime*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedDateTime
  isExternal: true
  name: CreatedDateTime
  nameWithType: ReadListItemViewModel.CreatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedDateTime
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedDateTime*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedDateTime
  isExternal: true
  name: UpdatedDateTime
  nameWithType: ReadListItemViewModel.UpdatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedDateTime
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedBy*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedBy
  isExternal: true
  name: CreatedBy
  nameWithType: ReadListItemViewModel.CreatedBy
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.CreatedBy
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedBy*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedBy
  isExternal: true
  name: UpdatedBy
  nameWithType: ReadListItemViewModel.UpdatedBy
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.UpdatedBy
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ModifiedBy*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ModifiedBy
  isExternal: true
  name: ModifiedBy
  nameWithType: ReadListItemViewModel.ModifiedBy
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ModifiedBy
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Tags*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Tags
  isExternal: true
  name: Tags
  nameWithType: ReadListItemViewModel.Tags
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Tags
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Domain*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Domain
  isExternal: true
  name: Domain
  nameWithType: ReadListItemViewModel.Domain
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Domain
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ImageUrl*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ImageUrl
  isExternal: true
  name: ImageUrl
  nameWithType: ReadListItemViewModel.ImageUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.ImageUrl
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Childs*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Childs
  isExternal: true
  name: Childs
  nameWithType: ReadListItemViewModel.Childs
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.Childs
- uid: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  commentId: '!:System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}'
  definition: System.Collections.Generic.List`1
  name: List<ReadListItemViewModel>
  nameWithType: List<ReadListItemViewModel>
  fullName: System.Collections.Generic.List<Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>
  nameWithType.vb: List(Of ReadListItemViewModel)
  fullName.vb: System.Collections.Generic.List(Of Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel)
  name.vb: List(Of ReadListItemViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalArticle*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalArticle
  isExternal: true
  name: TotalArticle
  nameWithType: ReadListItemViewModel.TotalArticle
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalArticle
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalProduct*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalProduct
  isExternal: true
  name: TotalProduct
  nameWithType: ReadListItemViewModel.TotalProduct
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.TotalProduct
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.IsActived*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.IsActived
  isExternal: true
  name: IsActived
  nameWithType: ReadListItemViewModel.IsActived
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.IsActived
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.DetailsUrl*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.DetailsUrl
  isExternal: true
  name: DetailsUrl
  nameWithType: ReadListItemViewModel.DetailsUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel.DetailsUrl
