### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Services.MixService
  commentId: T:Mix.Cms.Lib.Services.MixService
  id: MixService
  parent: Mix.Cms.Lib.Services
  children:
  - Mix.Cms.Lib.Services.MixService.#ctor
  - Mix.Cms.Lib.Services.MixService.DecryptString(System.String,System.String)
  - Mix.Cms.Lib.Services.MixService.DecryptStringFromBytes_Aes(System.String,System.Byte[],System.Byte[])
  - Mix.Cms.Lib.Services.MixService.EncryptString(System.String,System.String)
  - Mix.Cms.Lib.Services.MixService.EncryptStringToBytes_Aes(System.String,System.Byte[],System.Byte[])
  - Mix.Cms.Lib.Services.MixService.GetAuthConfig``1(System.String)
  - Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String)
  - Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String,System.String)
  - Mix.Cms.Lib.Services.MixService.GetConnectionString(System.String)
  - Mix.Cms.Lib.Services.MixService.GetGlobalSetting
  - Mix.Cms.Lib.Services.MixService.GetLocalSettings(System.String)
  - Mix.Cms.Lib.Services.MixService.GetTranslator(System.String)
  - Mix.Cms.Lib.Services.MixService.Instance
  - Mix.Cms.Lib.Services.MixService.LoadFromDatabase(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.Services.MixService.Reload
  - Mix.Cms.Lib.Services.MixService.Save
  - Mix.Cms.Lib.Services.MixService.SetAuthConfig``1(System.String,``0)
  - Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,``0)
  - Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,System.String,``0)
  - Mix.Cms.Lib.Services.MixService.SetConnectionString(System.String,System.String)
  - Mix.Cms.Lib.Services.MixService.Translate``1(System.String,System.String)
  langs:
  - csharp
  - vb
  name: MixService
  nameWithType: MixService
  fullName: Mix.Cms.Lib.Services.MixService
  type: Class
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: 'public class MixService : Object'
    content.vb: >-
      Public Class MixService
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Services.MixService.#ctor
  commentId: M:Mix.Cms.Lib.Services.MixService.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: MixService()
  nameWithType: MixService.MixService()
  fullName: Mix.Cms.Lib.Services.MixService.MixService()
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public MixService()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.Services.MixService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Services.MixService.GetConnectionString(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetConnectionString(System.String)
  id: GetConnectionString(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetConnectionString(String)
  nameWithType: MixService.GetConnectionString(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetConnectionString(System.String)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static string GetConnectionString(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetConnectionString(name As String) As String
  overload: Mix.Cms.Lib.Services.MixService.GetConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.SetConnectionString(System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.SetConnectionString(System.String,System.String)
  id: SetConnectionString(System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SetConnectionString(String, String)
  nameWithType: MixService.SetConnectionString(String, String)
  fullName: Mix.Cms.Lib.Services.MixService.SetConnectionString(System.String, System.String)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SetConnectionString(string name, string value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.String
    content.vb: Public Shared Sub SetConnectionString(name As String, value As String)
  overload: Mix.Cms.Lib.Services.MixService.SetConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.GetAuthConfig``1(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetAuthConfig``1(System.String)
  id: GetAuthConfig``1(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetAuthConfig<T>(String)
  nameWithType: MixService.GetAuthConfig<T>(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetAuthConfig<T>(System.String)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T GetAuthConfig<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetAuthConfig(Of T)(name As String) As T
  overload: Mix.Cms.Lib.Services.MixService.GetAuthConfig*
  nameWithType.vb: MixService.GetAuthConfig(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.GetAuthConfig(Of T)(System.String)
  name.vb: GetAuthConfig(Of T)(String)
- uid: Mix.Cms.Lib.Services.MixService.SetAuthConfig``1(System.String,``0)
  commentId: M:Mix.Cms.Lib.Services.MixService.SetAuthConfig``1(System.String,``0)
  id: SetAuthConfig``1(System.String,``0)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SetAuthConfig<T>(String, T)
  nameWithType: MixService.SetAuthConfig<T>(String, T)
  fullName: Mix.Cms.Lib.Services.MixService.SetAuthConfig<T>(System.String, T)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SetAuthConfig<T>(string name, T value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SetAuthConfig(Of T)(name As String, value As T)
  overload: Mix.Cms.Lib.Services.MixService.SetAuthConfig*
  nameWithType.vb: MixService.SetAuthConfig(Of T)(String, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.SetAuthConfig(Of T)(System.String, T)
  name.vb: SetAuthConfig(Of T)(String, T)
- uid: Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String)
  id: GetConfig``1(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetConfig<T>(String)
  nameWithType: MixService.GetConfig<T>(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetConfig<T>(System.String)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T GetConfig<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetConfig(Of T)(name As String) As T
  overload: Mix.Cms.Lib.Services.MixService.GetConfig*
  nameWithType.vb: MixService.GetConfig(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.GetConfig(Of T)(System.String)
  name.vb: GetConfig(Of T)(String)
- uid: Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,``0)
  commentId: M:Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,``0)
  id: SetConfig``1(System.String,``0)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SetConfig<T>(String, T)
  nameWithType: MixService.SetConfig<T>(String, T)
  fullName: Mix.Cms.Lib.Services.MixService.SetConfig<T>(System.String, T)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SetConfig<T>(string name, T value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SetConfig(Of T)(name As String, value As T)
  overload: Mix.Cms.Lib.Services.MixService.SetConfig*
  nameWithType.vb: MixService.SetConfig(Of T)(String, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.SetConfig(Of T)(System.String, T)
  name.vb: SetConfig(Of T)(String, T)
- uid: Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String,System.String)
  id: GetConfig``1(System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetConfig<T>(String, String)
  nameWithType: MixService.GetConfig<T>(String, String)
  fullName: Mix.Cms.Lib.Services.MixService.GetConfig<T>(System.String, System.String)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T GetConfig<T>(string name, string culture)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetConfig(Of T)(name As String, culture As String) As T
  overload: Mix.Cms.Lib.Services.MixService.GetConfig*
  nameWithType.vb: MixService.GetConfig(Of T)(String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.GetConfig(Of T)(System.String, System.String)
  name.vb: GetConfig(Of T)(String, String)
- uid: Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,System.String,``0)
  commentId: M:Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,System.String,``0)
  id: SetConfig``1(System.String,System.String,``0)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SetConfig<T>(String, String, T)
  nameWithType: MixService.SetConfig<T>(String, String, T)
  fullName: Mix.Cms.Lib.Services.MixService.SetConfig<T>(System.String, System.String, T)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SetConfig<T>(string name, string culture, T value)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SetConfig(Of T)(name As String, culture As String, value As T)
  overload: Mix.Cms.Lib.Services.MixService.SetConfig*
  nameWithType.vb: MixService.SetConfig(Of T)(String, String, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.SetConfig(Of T)(System.String, System.String, T)
  name.vb: SetConfig(Of T)(String, String, T)
- uid: Mix.Cms.Lib.Services.MixService.Translate``1(System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.Translate``1(System.String,System.String)
  id: Translate``1(System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: Translate<T>(String, String)
  nameWithType: MixService.Translate<T>(String, String)
  fullName: Mix.Cms.Lib.Services.MixService.Translate<T>(System.String, System.String)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T Translate<T>(string name, string culture)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function Translate(Of T)(name As String, culture As String) As T
  overload: Mix.Cms.Lib.Services.MixService.Translate*
  nameWithType.vb: MixService.Translate(Of T)(String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.Translate(Of T)(System.String, System.String)
  name.vb: Translate(Of T)(String, String)
- uid: Mix.Cms.Lib.Services.MixService.GetTranslator(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetTranslator(System.String)
  id: GetTranslator(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetTranslator(String)
  nameWithType: MixService.GetTranslator(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetTranslator(System.String)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static JObject GetTranslator(string culture)
    parameters:
    - id: culture
      type: System.String
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Shared Function GetTranslator(culture As String) As JObject
  overload: Mix.Cms.Lib.Services.MixService.GetTranslator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.GetLocalSettings(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetLocalSettings(System.String)
  id: GetLocalSettings(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetLocalSettings(String)
  nameWithType: MixService.GetLocalSettings(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetLocalSettings(System.String)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static JObject GetLocalSettings(string culture)
    parameters:
    - id: culture
      type: System.String
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Shared Function GetLocalSettings(culture As String) As JObject
  overload: Mix.Cms.Lib.Services.MixService.GetLocalSettings*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.GetGlobalSetting
  commentId: M:Mix.Cms.Lib.Services.MixService.GetGlobalSetting
  id: GetGlobalSetting
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetGlobalSetting()
  nameWithType: MixService.GetGlobalSetting()
  fullName: Mix.Cms.Lib.Services.MixService.GetGlobalSetting()
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static JObject GetGlobalSetting()
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Shared Function GetGlobalSetting As JObject
  overload: Mix.Cms.Lib.Services.MixService.GetGlobalSetting*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.Save
  commentId: M:Mix.Cms.Lib.Services.MixService.Save
  id: Save
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: MixService.Save()
  fullName: Mix.Cms.Lib.Services.MixService.Save()
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static bool Save()
    return:
      type: System.Boolean
    content.vb: Public Shared Function Save As Boolean
  overload: Mix.Cms.Lib.Services.MixService.Save*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.Reload
  commentId: M:Mix.Cms.Lib.Services.MixService.Reload
  id: Reload
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: MixService.Reload()
  fullName: Mix.Cms.Lib.Services.MixService.Reload()
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void Reload()
    content.vb: Public Shared Sub Reload
  overload: Mix.Cms.Lib.Services.MixService.Reload*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.LoadFromDatabase(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.Services.MixService.LoadFromDatabase(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: LoadFromDatabase(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: LoadFromDatabase(MixCmsContext, IDbContextTransaction)
  nameWithType: MixService.LoadFromDatabase(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.Services.MixService.LoadFromDatabase(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void LoadFromDatabase(MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Shared Sub LoadFromDatabase(_context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Mix.Cms.Lib.Services.MixService.LoadFromDatabase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.EncryptStringToBytes_Aes(System.String,System.Byte[],System.Byte[])
  commentId: M:Mix.Cms.Lib.Services.MixService.EncryptStringToBytes_Aes(System.String,System.Byte[],System.Byte[])
  id: EncryptStringToBytes_Aes(System.String,System.Byte[],System.Byte[])
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: EncryptStringToBytes_Aes(String, Byte[], Byte[])
  nameWithType: MixService.EncryptStringToBytes_Aes(String, Byte[], Byte[])
  fullName: Mix.Cms.Lib.Services.MixService.EncryptStringToBytes_Aes(System.String, System.Byte[], System.Byte[])
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static string EncryptStringToBytes_Aes(string plainText, byte[] Key, byte[] IV)
    parameters:
    - id: plainText
      type: System.String
    - id: Key
      type: System.Byte[]
    - id: IV
      type: System.Byte[]
    return:
      type: System.String
    content.vb: Public Shared Function EncryptStringToBytes_Aes(plainText As String, Key As Byte(), IV As Byte()) As String
  overload: Mix.Cms.Lib.Services.MixService.EncryptStringToBytes_Aes*
  nameWithType.vb: MixService.EncryptStringToBytes_Aes(String, Byte(), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.EncryptStringToBytes_Aes(System.String, System.Byte(), System.Byte())
  name.vb: EncryptStringToBytes_Aes(String, Byte(), Byte())
- uid: Mix.Cms.Lib.Services.MixService.DecryptStringFromBytes_Aes(System.String,System.Byte[],System.Byte[])
  commentId: M:Mix.Cms.Lib.Services.MixService.DecryptStringFromBytes_Aes(System.String,System.Byte[],System.Byte[])
  id: DecryptStringFromBytes_Aes(System.String,System.Byte[],System.Byte[])
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: DecryptStringFromBytes_Aes(String, Byte[], Byte[])
  nameWithType: MixService.DecryptStringFromBytes_Aes(String, Byte[], Byte[])
  fullName: Mix.Cms.Lib.Services.MixService.DecryptStringFromBytes_Aes(System.String, System.Byte[], System.Byte[])
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static string DecryptStringFromBytes_Aes(string cipherText, byte[] Key, byte[] IV)
    parameters:
    - id: cipherText
      type: System.String
    - id: Key
      type: System.Byte[]
    - id: IV
      type: System.Byte[]
    return:
      type: System.String
    content.vb: Public Shared Function DecryptStringFromBytes_Aes(cipherText As String, Key As Byte(), IV As Byte()) As String
  overload: Mix.Cms.Lib.Services.MixService.DecryptStringFromBytes_Aes*
  nameWithType.vb: MixService.DecryptStringFromBytes_Aes(String, Byte(), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.DecryptStringFromBytes_Aes(System.String, System.Byte(), System.Byte())
  name.vb: DecryptStringFromBytes_Aes(String, Byte(), Byte())
- uid: Mix.Cms.Lib.Services.MixService.EncryptString(System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.EncryptString(System.String,System.String)
  id: EncryptString(System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: EncryptString(String, String)
  nameWithType: MixService.EncryptString(String, String)
  fullName: Mix.Cms.Lib.Services.MixService.EncryptString(System.String, System.String)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static string EncryptString(string text, string keyString)
    parameters:
    - id: text
      type: System.String
    - id: keyString
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function EncryptString(text As String, keyString As String) As String
  overload: Mix.Cms.Lib.Services.MixService.EncryptString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.DecryptString(System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.DecryptString(System.String,System.String)
  id: DecryptString(System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: DecryptString(String, String)
  nameWithType: MixService.DecryptString(String, String)
  fullName: Mix.Cms.Lib.Services.MixService.DecryptString(System.String, System.String)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static string DecryptString(string cipherText, string keyString)
    parameters:
    - id: cipherText
      type: System.String
    - id: keyString
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function DecryptString(cipherText As String, keyString As String) As String
  overload: Mix.Cms.Lib.Services.MixService.DecryptString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.Instance
  commentId: P:Mix.Cms.Lib.Services.MixService.Instance
  id: Instance
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: MixService.Instance
  fullName: Mix.Cms.Lib.Services.MixService.Instance
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static MixService Instance { get; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Services.MixService
    content.vb: Public Shared ReadOnly Property Instance As MixService
  overload: Mix.Cms.Lib.Services.MixService.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Mix.Cms.Lib.Services
  commentId: N:Mix.Cms.Lib.Services
  isExternal: true
  name: Mix.Cms.Lib.Services
  nameWithType: Mix.Cms.Lib.Services
  fullName: Mix.Cms.Lib.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Services.MixService.#ctor*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.#ctor
  isExternal: true
  name: MixService
  nameWithType: MixService.MixService
  fullName: Mix.Cms.Lib.Services.MixService.MixService
- uid: Mix.Cms.Lib.Services.MixService.GetConnectionString*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetConnectionString
  isExternal: true
  name: GetConnectionString
  nameWithType: MixService.GetConnectionString
  fullName: Mix.Cms.Lib.Services.MixService.GetConnectionString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.Services.MixService.SetConnectionString*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SetConnectionString
  isExternal: true
  name: SetConnectionString
  nameWithType: MixService.SetConnectionString
  fullName: Mix.Cms.Lib.Services.MixService.SetConnectionString
- uid: Mix.Cms.Lib.Services.MixService.GetAuthConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetAuthConfig
  isExternal: true
  name: GetAuthConfig
  nameWithType: MixService.GetAuthConfig
  fullName: Mix.Cms.Lib.Services.MixService.GetAuthConfig
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mix.Cms.Lib.Services.MixService.SetAuthConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SetAuthConfig
  isExternal: true
  name: SetAuthConfig
  nameWithType: MixService.SetAuthConfig
  fullName: Mix.Cms.Lib.Services.MixService.SetAuthConfig
- uid: Mix.Cms.Lib.Services.MixService.GetConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetConfig
  isExternal: true
  name: GetConfig
  nameWithType: MixService.GetConfig
  fullName: Mix.Cms.Lib.Services.MixService.GetConfig
- uid: Mix.Cms.Lib.Services.MixService.SetConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SetConfig
  isExternal: true
  name: SetConfig
  nameWithType: MixService.SetConfig
  fullName: Mix.Cms.Lib.Services.MixService.SetConfig
- uid: Mix.Cms.Lib.Services.MixService.Translate*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.Translate
  isExternal: true
  name: Translate
  nameWithType: MixService.Translate
  fullName: Mix.Cms.Lib.Services.MixService.Translate
- uid: Mix.Cms.Lib.Services.MixService.GetTranslator*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetTranslator
  isExternal: true
  name: GetTranslator
  nameWithType: MixService.GetTranslator
  fullName: Mix.Cms.Lib.Services.MixService.GetTranslator
- uid: Newtonsoft.Json.Linq.JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Mix.Cms.Lib.Services.MixService.GetLocalSettings*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetLocalSettings
  isExternal: true
  name: GetLocalSettings
  nameWithType: MixService.GetLocalSettings
  fullName: Mix.Cms.Lib.Services.MixService.GetLocalSettings
- uid: Mix.Cms.Lib.Services.MixService.GetGlobalSetting*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetGlobalSetting
  isExternal: true
  name: GetGlobalSetting
  nameWithType: MixService.GetGlobalSetting
  fullName: Mix.Cms.Lib.Services.MixService.GetGlobalSetting
- uid: Mix.Cms.Lib.Services.MixService.Save*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.Save
  isExternal: true
  name: Save
  nameWithType: MixService.Save
  fullName: Mix.Cms.Lib.Services.MixService.Save
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Cms.Lib.Services.MixService.Reload*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.Reload
  isExternal: true
  name: Reload
  nameWithType: MixService.Reload
  fullName: Mix.Cms.Lib.Services.MixService.Reload
- uid: Mix.Cms.Lib.Services.MixService.LoadFromDatabase*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.LoadFromDatabase
  isExternal: true
  name: LoadFromDatabase
  nameWithType: MixService.LoadFromDatabase
  fullName: Mix.Cms.Lib.Services.MixService.LoadFromDatabase
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  isExternal: true
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  isExternal: true
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Mix.Cms.Lib.Services.MixService.EncryptStringToBytes_Aes*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.EncryptStringToBytes_Aes
  isExternal: true
  name: EncryptStringToBytes_Aes
  nameWithType: MixService.EncryptStringToBytes_Aes
  fullName: Mix.Cms.Lib.Services.MixService.EncryptStringToBytes_Aes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Mix.Cms.Lib.Services.MixService.DecryptStringFromBytes_Aes*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.DecryptStringFromBytes_Aes
  isExternal: true
  name: DecryptStringFromBytes_Aes
  nameWithType: MixService.DecryptStringFromBytes_Aes
  fullName: Mix.Cms.Lib.Services.MixService.DecryptStringFromBytes_Aes
- uid: Mix.Cms.Lib.Services.MixService.EncryptString*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.EncryptString
  isExternal: true
  name: EncryptString
  nameWithType: MixService.EncryptString
  fullName: Mix.Cms.Lib.Services.MixService.EncryptString
- uid: Mix.Cms.Lib.Services.MixService.DecryptString*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.DecryptString
  isExternal: true
  name: DecryptString
  nameWithType: MixService.DecryptString
  fullName: Mix.Cms.Lib.Services.MixService.DecryptString
- uid: Mix.Cms.Lib.Services.MixService.Instance*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.Instance
  isExternal: true
  name: Instance
  nameWithType: MixService.Instance
  fullName: Mix.Cms.Lib.Services.MixService.Instance
- uid: Mix.Cms.Lib.Services.MixService
  commentId: T:Mix.Cms.Lib.Services.MixService
  parent: Mix.Cms.Lib.Services
  isExternal: true
  name: MixService
  nameWithType: MixService
  fullName: Mix.Cms.Lib.Services.MixService
