### YamlMime:ManagedReference
items:
- uid: Swastika.Cms.Lib.Repositories.FileRepository
  commentId: T:Swastika.Cms.Lib.Repositories.FileRepository
  id: FileRepository
  parent: Swastika.Cms.Lib.Repositories
  children:
  - Swastika.Cms.Lib.Repositories.FileRepository.CopyDirectory(System.String,System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.CurrentDirectory
  - Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile(System.String,System.String,System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.DeleteFolder(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile(System.String,System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFolder(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.EmptyFolder(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetFile(System.String,System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel},System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetFile(System.String,System.String,System.String,System.Boolean,System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetFiles(Swastika.Cms.Lib.SWCmsConstants.FileFolder)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetFiles(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetFilesWithContent(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetTopDirectories(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetTopFiles(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFile(System.String,System.String,System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFiles(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetWebFile(System.String,System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.GetWebFiles(System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.Instance
  - Swastika.Cms.Lib.Repositories.FileRepository.SaveFile(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.SaveFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  - Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  - Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  - Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile(System.String,System.String)
  langs:
  - csharp
  - vb
  name: FileRepository
  nameWithType: FileRepository
  fullName: Swastika.Cms.Lib.Repositories.FileRepository
  type: Class
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: 'public class FileRepository : Object'
    content.vb: >-
      Public Class FileRepository
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetFile(System.String,System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel},System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetFile(System.String,System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel},System.String)
  id: GetFile(System.String,System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel},System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetFile(String, List<FileViewModel>, String)
  nameWithType: FileRepository.GetFile(String, List<FileViewModel>, String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetFile(System.String, System.Collections.Generic.List<Swastika.Cms.Lib.ViewModels.FileViewModel>, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public FileViewModel GetFile(string FilePath, List<FileViewModel> Files, string FileFolder)
    parameters:
    - id: FilePath
      type: System.String
    - id: Files
      type: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel}
    - id: FileFolder
      type: System.String
    return:
      type: Swastika.Cms.Lib.ViewModels.FileViewModel
    content.vb: Public Function GetFile(FilePath As String, Files As List(Of FileViewModel), FileFolder As String) As FileViewModel
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetFile*
  nameWithType.vb: FileRepository.GetFile(String, List(Of FileViewModel), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Cms.Lib.Repositories.FileRepository.GetFile(System.String, System.Collections.Generic.List(Of Swastika.Cms.Lib.ViewModels.FileViewModel), System.String)
  name.vb: GetFile(String, List(Of FileViewModel), String)
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetWebFile(System.String,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetWebFile(System.String,System.String)
  id: GetWebFile(System.String,System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetWebFile(String, String)
  nameWithType: FileRepository.GetWebFile(String, String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetWebFile(System.String, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public FileViewModel GetWebFile(string filename, string folder)
    parameters:
    - id: filename
      type: System.String
    - id: folder
      type: System.String
    return:
      type: Swastika.Cms.Lib.ViewModels.FileViewModel
    content.vb: Public Function GetWebFile(filename As String, folder As String) As FileViewModel
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetWebFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile(System.String,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile(System.String,System.String)
  id: DeleteWebFile(System.String,System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: DeleteWebFile(String, String)
  nameWithType: FileRepository.DeleteWebFile(String, String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile(System.String, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool DeleteWebFile(string filename, string folder)
    parameters:
    - id: filename
      type: System.String
    - id: folder
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function DeleteWebFile(filename As String, folder As String) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile(System.String)
  id: DeleteWebFile(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: DeleteWebFile(String)
  nameWithType: FileRepository.DeleteWebFile(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool DeleteWebFile(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function DeleteWebFile(filePath As String) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFolder(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFolder(System.String)
  id: DeleteWebFolder(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: DeleteWebFolder(String)
  nameWithType: FileRepository.DeleteWebFolder(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFolder(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool DeleteWebFolder(string folderPath)
    parameters:
    - id: folderPath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function DeleteWebFolder(folderPath As String) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFile(System.String,System.String,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFile(System.String,System.String,System.String)
  id: GetUploadFile(System.String,System.String,System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetUploadFile(String, String, String)
  nameWithType: FileRepository.GetUploadFile(String, String, String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFile(System.String, System.String, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public FileViewModel GetUploadFile(string name, string ext, string FileFolder)
    parameters:
    - id: name
      type: System.String
    - id: ext
      type: System.String
    - id: FileFolder
      type: System.String
    return:
      type: Swastika.Cms.Lib.ViewModels.FileViewModel
    content.vb: Public Function GetUploadFile(name As String, ext As String, FileFolder As String) As FileViewModel
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetFile(System.String,System.String,System.String,System.Boolean,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetFile(System.String,System.String,System.String,System.Boolean,System.String)
  id: GetFile(System.String,System.String,System.String,System.Boolean,System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetFile(String, String, String, Boolean, String)
  nameWithType: FileRepository.GetFile(String, String, String, Boolean, String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetFile(System.String, System.String, System.String, System.Boolean, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public FileViewModel GetFile(string name, string ext, string FileFolder, bool isCreate = false, string defaultContent = "")
    parameters:
    - id: name
      type: System.String
    - id: ext
      type: System.String
    - id: FileFolder
      type: System.String
    - id: isCreate
      type: System.Boolean
    - id: defaultContent
      type: System.String
    return:
      type: Swastika.Cms.Lib.ViewModels.FileViewModel
    content.vb: Public Function GetFile(name As String, ext As String, FileFolder As String, isCreate As Boolean = False, defaultContent As String = "") As FileViewModel
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile(System.String,System.String,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile(System.String,System.String,System.String)
  id: DeleteFile(System.String,System.String,System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: DeleteFile(String, String, String)
  nameWithType: FileRepository.DeleteFile(String, String, String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile(System.String, System.String, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool DeleteFile(string name, string extension, string FileFolder)
    parameters:
    - id: name
      type: System.String
    - id: extension
      type: System.String
    - id: FileFolder
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function DeleteFile(name As String, extension As String, FileFolder As String) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: DeleteFile(String)
  nameWithType: FileRepository.DeleteFile(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool DeleteFile(string fullPath)
    parameters:
    - id: fullPath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function DeleteFile(fullPath As String) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFolder(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.DeleteFolder(System.String)
  id: DeleteFolder(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: DeleteFolder(String)
  nameWithType: FileRepository.DeleteFolder(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFolder(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool DeleteFolder(string folderPath)
    parameters:
    - id: folderPath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function DeleteFolder(folderPath As String) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.EmptyFolder(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.EmptyFolder(System.String)
  id: EmptyFolder(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: EmptyFolder(String)
  nameWithType: FileRepository.EmptyFolder(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.EmptyFolder(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool EmptyFolder(string folderPath)
    parameters:
    - id: folderPath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function EmptyFolder(folderPath As String) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.EmptyFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.CopyDirectory(System.String,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.CopyDirectory(System.String,System.String)
  id: CopyDirectory(System.String,System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: CopyDirectory(String, String)
  nameWithType: FileRepository.CopyDirectory(String, String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.CopyDirectory(System.String, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool CopyDirectory(string srcPath, string desPath)
    parameters:
    - id: srcPath
      type: System.String
    - id: desPath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function CopyDirectory(srcPath As String, desPath As String) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.CopyDirectory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFiles(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFiles(System.String)
  id: GetUploadFiles(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetUploadFiles(String)
  nameWithType: FileRepository.GetUploadFiles(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFiles(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public List<FileViewModel> GetUploadFiles(string folder)
    parameters:
    - id: folder
      type: System.String
    return:
      type: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel}
    content.vb: Public Function GetUploadFiles(folder As String) As List(Of FileViewModel)
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetTopDirectories(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetTopDirectories(System.String)
  id: GetTopDirectories(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetTopDirectories(String)
  nameWithType: FileRepository.GetTopDirectories(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetTopDirectories(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public List<string> GetTopDirectories(string folder)
    parameters:
    - id: folder
      type: System.String
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Function GetTopDirectories(folder As String) As List(Of String)
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetTopDirectories*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetTopFiles(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetTopFiles(System.String)
  id: GetTopFiles(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetTopFiles(String)
  nameWithType: FileRepository.GetTopFiles(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetTopFiles(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public List<FileViewModel> GetTopFiles(string folder)
    parameters:
    - id: folder
      type: System.String
    return:
      type: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel}
    content.vb: Public Function GetTopFiles(folder As String) As List(Of FileViewModel)
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetTopFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetFilesWithContent(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetFilesWithContent(System.String)
  id: GetFilesWithContent(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetFilesWithContent(String)
  nameWithType: FileRepository.GetFilesWithContent(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetFilesWithContent(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public List<FileViewModel> GetFilesWithContent(string fullPath)
    parameters:
    - id: fullPath
      type: System.String
    return:
      type: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel}
    content.vb: Public Function GetFilesWithContent(fullPath As String) As List(Of FileViewModel)
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetFilesWithContent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetFiles(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetFiles(String)
  nameWithType: FileRepository.GetFiles(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetFiles(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public List<FileViewModel> GetFiles(string fullPath)
    parameters:
    - id: fullPath
      type: System.String
    return:
      type: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel}
    content.vb: Public Function GetFiles(fullPath As String) As List(Of FileViewModel)
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetWebFiles(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetWebFiles(System.String)
  id: GetWebFiles(System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetWebFiles(String)
  nameWithType: FileRepository.GetWebFiles(String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetWebFiles(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public List<FileViewModel> GetWebFiles(string folder)
    parameters:
    - id: folder
      type: System.String
    return:
      type: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel}
    content.vb: Public Function GetWebFiles(folder As String) As List(Of FileViewModel)
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetWebFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetFiles(Swastika.Cms.Lib.SWCmsConstants.FileFolder)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.GetFiles(Swastika.Cms.Lib.SWCmsConstants.FileFolder)
  id: GetFiles(Swastika.Cms.Lib.SWCmsConstants.FileFolder)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: GetFiles(SWCmsConstants.FileFolder)
  nameWithType: FileRepository.GetFiles(SWCmsConstants.FileFolder)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetFiles(Swastika.Cms.Lib.SWCmsConstants.FileFolder)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public List<FileViewModel> GetFiles(SWCmsConstants.FileFolder FileFolder)
    parameters:
    - id: FileFolder
      type: Swastika.Cms.Lib.SWCmsConstants.FileFolder
    return:
      type: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel}
    content.vb: Public Function GetFiles(FileFolder As SWCmsConstants.FileFolder) As List(Of FileViewModel)
  overload: Swastika.Cms.Lib.Repositories.FileRepository.GetFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  id: SaveWebFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: SaveWebFile(FileViewModel)
  nameWithType: FileRepository.SaveWebFile(FileViewModel)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool SaveWebFile(FileViewModel file)
    parameters:
    - id: file
      type: Swastika.Cms.Lib.ViewModels.FileViewModel
    return:
      type: System.Boolean
    content.vb: Public Function SaveWebFile(file As FileViewModel) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.SaveFile(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.SaveFile(Microsoft.AspNetCore.Http.IFormFile,System.String)
  id: SaveFile(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: SaveFile(IFormFile, String)
  nameWithType: FileRepository.SaveFile(IFormFile, String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.SaveFile(Microsoft.AspNetCore.Http.IFormFile, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public string SaveFile(IFormFile file, string fullPath)
    parameters:
    - id: file
      type: Microsoft.AspNetCore.Http.IFormFile
    - id: fullPath
      type: System.String
    return:
      type: System.String
    content.vb: Public Function SaveFile(file As IFormFile, fullPath As String) As String
  overload: Swastika.Cms.Lib.Repositories.FileRepository.SaveFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.SaveFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.SaveFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  id: SaveFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: SaveFile(FileViewModel)
  nameWithType: FileRepository.SaveFile(FileViewModel)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.SaveFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool SaveFile(FileViewModel file)
    parameters:
    - id: file
      type: Swastika.Cms.Lib.ViewModels.FileViewModel
    return:
      type: System.Boolean
    content.vb: Public Function SaveFile(file As FileViewModel) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.SaveFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile(Microsoft.AspNetCore.Http.IFormFile,System.String)
  id: SaveWebFile(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: SaveWebFile(IFormFile, String)
  nameWithType: FileRepository.SaveWebFile(IFormFile, String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile(Microsoft.AspNetCore.Http.IFormFile, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public string SaveWebFile(IFormFile file, string folder)
    parameters:
    - id: file
      type: Microsoft.AspNetCore.Http.IFormFile
    - id: folder
      type: System.String
    return:
      type: System.String
    content.vb: Public Function SaveWebFile(file As IFormFile, folder As String) As String
  overload: Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile(System.String,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile(System.String,System.String)
  id: UnZipFile(System.String,System.String)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: UnZipFile(String, String)
  nameWithType: FileRepository.UnZipFile(String, String)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile(System.String, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public void UnZipFile(string fileName, string folder)
    parameters:
    - id: fileName
      type: System.String
    - id: folder
      type: System.String
    content.vb: Public Sub UnZipFile(fileName As String, folder As String)
  overload: Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  commentId: M:Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  id: UnZipFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: UnZipFile(FileViewModel)
  nameWithType: FileRepository.UnZipFile(FileViewModel)
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile(Swastika.Cms.Lib.ViewModels.FileViewModel)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool UnZipFile(FileViewModel file)
    parameters:
    - id: file
      type: Swastika.Cms.Lib.ViewModels.FileViewModel
    return:
      type: System.Boolean
    content.vb: Public Function UnZipFile(file As FileViewModel) As Boolean
  overload: Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.CurrentDirectory
  commentId: P:Swastika.Cms.Lib.Repositories.FileRepository.CurrentDirectory
  id: CurrentDirectory
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: CurrentDirectory
  nameWithType: FileRepository.CurrentDirectory
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.CurrentDirectory
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public string CurrentDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CurrentDirectory As String
  overload: Swastika.Cms.Lib.Repositories.FileRepository.CurrentDirectory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.FileRepository.Instance
  commentId: P:Swastika.Cms.Lib.Repositories.FileRepository.Instance
  id: Instance
  parent: Swastika.Cms.Lib.Repositories.FileRepository
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: FileRepository.Instance
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.Instance
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public static FileRepository Instance { get; set; }
    parameters: []
    return:
      type: Swastika.Cms.Lib.Repositories.FileRepository
    content.vb: Public Shared Property Instance As FileRepository
  overload: Swastika.Cms.Lib.Repositories.FileRepository.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Swastika.Cms.Lib.Repositories
  commentId: N:Swastika.Cms.Lib.Repositories
  isExternal: true
  name: Swastika.Cms.Lib.Repositories
  nameWithType: Swastika.Cms.Lib.Repositories
  fullName: Swastika.Cms.Lib.Repositories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetFile*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.GetFile
  isExternal: true
  name: GetFile
  nameWithType: FileRepository.GetFile
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel}
  commentId: '!:System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.FileViewModel}'
  definition: System.Collections.Generic.List`1
  name: List<FileViewModel>
  nameWithType: List<FileViewModel>
  fullName: System.Collections.Generic.List<Swastika.Cms.Lib.ViewModels.FileViewModel>
  nameWithType.vb: List(Of FileViewModel)
  fullName.vb: System.Collections.Generic.List(Of Swastika.Cms.Lib.ViewModels.FileViewModel)
  name.vb: List(Of FileViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.FileViewModel
    name: FileViewModel
    nameWithType: FileViewModel
    fullName: Swastika.Cms.Lib.ViewModels.FileViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.FileViewModel
    name: FileViewModel
    nameWithType: FileViewModel
    fullName: Swastika.Cms.Lib.ViewModels.FileViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib.ViewModels.FileViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.FileViewModel
  parent: Swastika.Cms.Lib.ViewModels
  isExternal: true
  name: FileViewModel
  nameWithType: FileViewModel
  fullName: Swastika.Cms.Lib.ViewModels.FileViewModel
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib.ViewModels
  commentId: N:Swastika.Cms.Lib.ViewModels
  isExternal: true
  name: Swastika.Cms.Lib.ViewModels
  nameWithType: Swastika.Cms.Lib.ViewModels
  fullName: Swastika.Cms.Lib.ViewModels
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetWebFile*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.GetWebFile
  isExternal: true
  name: GetWebFile
  nameWithType: FileRepository.GetWebFile
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetWebFile
- uid: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile
  isExternal: true
  name: DeleteWebFile
  nameWithType: FileRepository.DeleteWebFile
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFolder*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFolder
  isExternal: true
  name: DeleteWebFolder
  nameWithType: FileRepository.DeleteWebFolder
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.DeleteWebFolder
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFile*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFile
  isExternal: true
  name: GetUploadFile
  nameWithType: FileRepository.GetUploadFile
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFile
- uid: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile
  isExternal: true
  name: DeleteFile
  nameWithType: FileRepository.DeleteFile
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFile
- uid: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFolder*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.DeleteFolder
  isExternal: true
  name: DeleteFolder
  nameWithType: FileRepository.DeleteFolder
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.DeleteFolder
- uid: Swastika.Cms.Lib.Repositories.FileRepository.EmptyFolder*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.EmptyFolder
  isExternal: true
  name: EmptyFolder
  nameWithType: FileRepository.EmptyFolder
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.EmptyFolder
- uid: Swastika.Cms.Lib.Repositories.FileRepository.CopyDirectory*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.CopyDirectory
  isExternal: true
  name: CopyDirectory
  nameWithType: FileRepository.CopyDirectory
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.CopyDirectory
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFiles*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFiles
  isExternal: true
  name: GetUploadFiles
  nameWithType: FileRepository.GetUploadFiles
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetUploadFiles
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetTopDirectories*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.GetTopDirectories
  isExternal: true
  name: GetTopDirectories
  nameWithType: FileRepository.GetTopDirectories
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetTopDirectories
- uid: System.Collections.Generic.List{System.String}
  commentId: '!:System.Collections.Generic.List{System.String}'
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetTopFiles*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.GetTopFiles
  isExternal: true
  name: GetTopFiles
  nameWithType: FileRepository.GetTopFiles
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetTopFiles
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetFilesWithContent*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.GetFilesWithContent
  isExternal: true
  name: GetFilesWithContent
  nameWithType: FileRepository.GetFilesWithContent
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetFilesWithContent
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetFiles*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.GetFiles
  isExternal: true
  name: GetFiles
  nameWithType: FileRepository.GetFiles
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetFiles
- uid: Swastika.Cms.Lib.Repositories.FileRepository.GetWebFiles*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.GetWebFiles
  isExternal: true
  name: GetWebFiles
  nameWithType: FileRepository.GetWebFiles
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.GetWebFiles
- uid: Swastika.Cms.Lib.SWCmsConstants.FileFolder
  commentId: T:Swastika.Cms.Lib.SWCmsConstants.FileFolder
  parent: Swastika.Cms.Lib
  isExternal: true
  name: SWCmsConstants.FileFolder
  nameWithType: SWCmsConstants.FileFolder
  fullName: Swastika.Cms.Lib.SWCmsConstants.FileFolder
- uid: Swastika.Cms.Lib
  commentId: N:Swastika.Cms.Lib
  isExternal: true
  name: Swastika.Cms.Lib
  nameWithType: Swastika.Cms.Lib
  fullName: Swastika.Cms.Lib
- uid: Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile
  isExternal: true
  name: SaveWebFile
  nameWithType: FileRepository.SaveWebFile
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.SaveWebFile
- uid: Swastika.Cms.Lib.Repositories.FileRepository.SaveFile*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.SaveFile
  isExternal: true
  name: SaveFile
  nameWithType: FileRepository.SaveFile
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.SaveFile
- uid: Microsoft.AspNetCore.Http.IFormFile
  isExternal: true
  name: IFormFile
  nameWithType: IFormFile
  fullName: Microsoft.AspNetCore.Http.IFormFile
- uid: Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile
  isExternal: true
  name: UnZipFile
  nameWithType: FileRepository.UnZipFile
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.UnZipFile
- uid: Swastika.Cms.Lib.Repositories.FileRepository.CurrentDirectory*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.CurrentDirectory
  isExternal: true
  name: CurrentDirectory
  nameWithType: FileRepository.CurrentDirectory
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.CurrentDirectory
- uid: Swastika.Cms.Lib.Repositories.FileRepository.Instance*
  commentId: Overload:Swastika.Cms.Lib.Repositories.FileRepository.Instance
  isExternal: true
  name: Instance
  nameWithType: FileRepository.Instance
  fullName: Swastika.Cms.Lib.Repositories.FileRepository.Instance
- uid: Swastika.Cms.Lib.Repositories.FileRepository
  commentId: T:Swastika.Cms.Lib.Repositories.FileRepository
  parent: Swastika.Cms.Lib.Repositories
  isExternal: true
  name: FileRepository
  nameWithType: FileRepository
  fullName: Swastika.Cms.Lib.Repositories.FileRepository
