### YamlMime:ManagedReference
items:
- uid: Swastka.Cms.Api.Controllers.ApiRoleController
  commentId: T:Swastka.Cms.Api.Controllers.ApiRoleController
  id: ApiRoleController
  parent: Swastka.Cms.Api.Controllers
  children:
  - Swastka.Cms.Api.Controllers.ApiRoleController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Swastika.Identity.Services.IEmailSender,Microsoft.Extensions.Logging.ILogger{Swastka.Cms.Api.Controllers.ApiRoleController})
  - Swastka.Cms.Api.Controllers.ApiRoleController._emailSender
  - Swastka.Cms.Api.Controllers.ApiRoleController._logger
  - Swastka.Cms.Api.Controllers.ApiRoleController._roleManager
  - Swastka.Cms.Api.Controllers.ApiRoleController._signInManager
  - Swastka.Cms.Api.Controllers.ApiRoleController._userManager
  - Swastka.Cms.Api.Controllers.ApiRoleController.Claims
  - Swastka.Cms.Api.Controllers.ApiRoleController.Delete(System.String)
  - Swastka.Cms.Api.Controllers.ApiRoleController.GetList
  - Swastka.Cms.Api.Controllers.ApiRoleController.Save(System.String)
  langs:
  - csharp
  - vb
  name: ApiRoleController
  nameWithType: ApiRoleController
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController
  type: Class
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: 'public class ApiRoleController : BaseApiController'
    content.vb: >-
      Public Class ApiRoleController
          Inherits BaseApiController
  inheritance:
  - System.Object
  - Swastka.Cms.Api.Controllers.BaseApiController
  inheritedMembers:
  - Swastka.Cms.Api.Controllers.BaseApiController._domain
  - Swastka.Cms.Api.Controllers.BaseApiController._lang
  - Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  - Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  - Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  - Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  - Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1({TResult})
  - Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  - Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastka.Cms.Api.Controllers.ApiRoleController._userManager
  commentId: F:Swastka.Cms.Api.Controllers.ApiRoleController._userManager
  id: _userManager
  parent: Swastka.Cms.Api.Controllers.ApiRoleController
  langs:
  - csharp
  - vb
  name: _userManager
  nameWithType: ApiRoleController._userManager
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController._userManager
  type: Field
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected readonly UserManager<ApplicationUser> _userManager
    return:
      type: Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}
    content.vb: Protected ReadOnly _userManager As UserManager(Of ApplicationUser)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Swastka.Cms.Api.Controllers.ApiRoleController._signInManager
  commentId: F:Swastka.Cms.Api.Controllers.ApiRoleController._signInManager
  id: _signInManager
  parent: Swastka.Cms.Api.Controllers.ApiRoleController
  langs:
  - csharp
  - vb
  name: _signInManager
  nameWithType: ApiRoleController._signInManager
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController._signInManager
  type: Field
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected readonly SignInManager<ApplicationUser> _signInManager
    return:
      type: Microsoft.AspNetCore.Identity.SignInManager{Swastika.Identity.Models.ApplicationUser}
    content.vb: Protected ReadOnly _signInManager As SignInManager(Of ApplicationUser)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Swastka.Cms.Api.Controllers.ApiRoleController._roleManager
  commentId: F:Swastka.Cms.Api.Controllers.ApiRoleController._roleManager
  id: _roleManager
  parent: Swastka.Cms.Api.Controllers.ApiRoleController
  langs:
  - csharp
  - vb
  name: _roleManager
  nameWithType: ApiRoleController._roleManager
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController._roleManager
  type: Field
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected readonly RoleManager<IdentityRole> _roleManager
    return:
      type: Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole}
    content.vb: Protected ReadOnly _roleManager As RoleManager(Of IdentityRole)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Swastka.Cms.Api.Controllers.ApiRoleController._emailSender
  commentId: F:Swastka.Cms.Api.Controllers.ApiRoleController._emailSender
  id: _emailSender
  parent: Swastka.Cms.Api.Controllers.ApiRoleController
  langs:
  - csharp
  - vb
  name: _emailSender
  nameWithType: ApiRoleController._emailSender
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController._emailSender
  type: Field
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected readonly IEmailSender _emailSender
    return:
      type: Swastika.Identity.Services.IEmailSender
    content.vb: Protected ReadOnly _emailSender As IEmailSender
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Swastka.Cms.Api.Controllers.ApiRoleController._logger
  commentId: F:Swastka.Cms.Api.Controllers.ApiRoleController._logger
  id: _logger
  parent: Swastka.Cms.Api.Controllers.ApiRoleController
  langs:
  - csharp
  - vb
  name: _logger
  nameWithType: ApiRoleController._logger
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController._logger
  type: Field
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected readonly ILogger _logger
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Protected ReadOnly _logger As ILogger
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Swastka.Cms.Api.Controllers.ApiRoleController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Swastika.Identity.Services.IEmailSender,Microsoft.Extensions.Logging.ILogger{Swastka.Cms.Api.Controllers.ApiRoleController})
  commentId: M:Swastka.Cms.Api.Controllers.ApiRoleController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Swastika.Identity.Services.IEmailSender,Microsoft.Extensions.Logging.ILogger{Swastka.Cms.Api.Controllers.ApiRoleController})
  id: '#ctor(Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Swastika.Identity.Services.IEmailSender,Microsoft.Extensions.Logging.ILogger{Swastka.Cms.Api.Controllers.ApiRoleController})'
  parent: Swastka.Cms.Api.Controllers.ApiRoleController
  langs:
  - csharp
  - vb
  name: ApiRoleController(UserManager<ApplicationUser>, SignInManager<ApplicationUser>, RoleManager<IdentityRole>, IEmailSender, ILogger<ApiRoleController>)
  nameWithType: ApiRoleController.ApiRoleController(UserManager<ApplicationUser>, SignInManager<ApplicationUser>, RoleManager<IdentityRole>, IEmailSender, ILogger<ApiRoleController>)
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController.ApiRoleController(Microsoft.AspNetCore.Identity.UserManager<Swastika.Identity.Models.ApplicationUser>, Microsoft.AspNetCore.Identity.SignInManager<Swastika.Identity.Models.ApplicationUser>, Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>, Swastika.Identity.Services.IEmailSender, Microsoft.Extensions.Logging.ILogger<Swastka.Cms.Api.Controllers.ApiRoleController>)
  type: Constructor
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public ApiRoleController(UserManager<ApplicationUser> userManager, SignInManager<ApplicationUser> signInManager, RoleManager<IdentityRole> roleManager, IEmailSender emailSender, ILogger<ApiRoleController> logger)
    parameters:
    - id: userManager
      type: Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}
    - id: signInManager
      type: Microsoft.AspNetCore.Identity.SignInManager{Swastika.Identity.Models.ApplicationUser}
    - id: roleManager
      type: Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole}
    - id: emailSender
      type: Swastika.Identity.Services.IEmailSender
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Swastka.Cms.Api.Controllers.ApiRoleController}
    content.vb: Public Sub New(userManager As UserManager(Of ApplicationUser), signInManager As SignInManager(Of ApplicationUser), roleManager As RoleManager(Of IdentityRole), emailSender As IEmailSender, logger As ILogger(Of ApiRoleController))
  overload: Swastka.Cms.Api.Controllers.ApiRoleController.#ctor*
  nameWithType.vb: ApiRoleController.ApiRoleController(UserManager(Of ApplicationUser), SignInManager(Of ApplicationUser), RoleManager(Of IdentityRole), IEmailSender, ILogger(Of ApiRoleController))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastka.Cms.Api.Controllers.ApiRoleController.ApiRoleController(Microsoft.AspNetCore.Identity.UserManager(Of Swastika.Identity.Models.ApplicationUser), Microsoft.AspNetCore.Identity.SignInManager(Of Swastika.Identity.Models.ApplicationUser), Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole), Swastika.Identity.Services.IEmailSender, Microsoft.Extensions.Logging.ILogger(Of Swastka.Cms.Api.Controllers.ApiRoleController))
  name.vb: ApiRoleController(UserManager(Of ApplicationUser), SignInManager(Of ApplicationUser), RoleManager(Of IdentityRole), IEmailSender, ILogger(Of ApiRoleController))
- uid: Swastka.Cms.Api.Controllers.ApiRoleController.Claims
  commentId: M:Swastka.Cms.Api.Controllers.ApiRoleController.Claims
  id: Claims
  parent: Swastka.Cms.Api.Controllers.ApiRoleController
  langs:
  - csharp
  - vb
  name: Claims()
  nameWithType: ApiRoleController.Claims()
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController.Claims()
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public object Claims()
    return:
      type: System.Object
    content.vb: Public Function Claims As Object
  overload: Swastka.Cms.Api.Controllers.ApiRoleController.Claims*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiRoleController.GetList
  commentId: M:Swastka.Cms.Api.Controllers.ApiRoleController.GetList
  id: GetList
  parent: Swastka.Cms.Api.Controllers.ApiRoleController
  langs:
  - csharp
  - vb
  name: GetList()
  nameWithType: ApiRoleController.GetList()
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController.GetList()
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<List<RoleViewModel>>> GetList()
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}}}
    content.vb: Public Function GetList As Task(Of RepositoryResponse(Of List(Of RoleViewModel)))
  overload: Swastka.Cms.Api.Controllers.ApiRoleController.GetList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiRoleController.Save(System.String)
  commentId: M:Swastka.Cms.Api.Controllers.ApiRoleController.Save(System.String)
  id: Save(System.String)
  parent: Swastka.Cms.Api.Controllers.ApiRoleController
  langs:
  - csharp
  - vb
  name: Save(String)
  nameWithType: ApiRoleController.Save(String)
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController.Save(System.String)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<IdentityRole>> Save(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Microsoft.AspNetCore.Identity.IdentityRole}}
    content.vb: Public Function Save(name As String) As Task(Of RepositoryResponse(Of IdentityRole))
  overload: Swastka.Cms.Api.Controllers.ApiRoleController.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiRoleController.Delete(System.String)
  commentId: M:Swastka.Cms.Api.Controllers.ApiRoleController.Delete(System.String)
  id: Delete(System.String)
  parent: Swastka.Cms.Api.Controllers.ApiRoleController
  langs:
  - csharp
  - vb
  name: Delete(String)
  nameWithType: ApiRoleController.Delete(String)
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController.Delete(System.String)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<AspNetRoles>> Delete(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.Models.Account.AspNetRoles}}
    content.vb: Public Function Delete(name As String) As Task(Of RepositoryResponse(Of AspNetRoles))
  overload: Swastka.Cms.Api.Controllers.ApiRoleController.Delete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Swastka.Cms.Api.Controllers
  commentId: N:Swastka.Cms.Api.Controllers
  isExternal: true
  name: Swastka.Cms.Api.Controllers
  nameWithType: Swastka.Cms.Api.Controllers
  fullName: Swastka.Cms.Api.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastka.Cms.Api.Controllers.BaseApiController
  commentId: T:Swastka.Cms.Api.Controllers.BaseApiController
  parent: Swastka.Cms.Api.Controllers
  isExternal: true
  name: BaseApiController
  nameWithType: BaseApiController
  fullName: Swastka.Cms.Api.Controllers.BaseApiController
- uid: Swastka.Cms.Api.Controllers.BaseApiController._domain
  commentId: F:Swastka.Cms.Api.Controllers.BaseApiController._domain
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: _domain
  nameWithType: BaseApiController._domain
  fullName: Swastka.Cms.Api.Controllers.BaseApiController._domain
- uid: Swastka.Cms.Api.Controllers.BaseApiController._lang
  commentId: F:Swastka.Cms.Api.Controllers.BaseApiController._lang
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: _lang
  nameWithType: BaseApiController._lang
  fullName: Swastka.Cms.Api.Controllers.BaseApiController._lang
- uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: BadRequest(ModelStateDictionary)
  nameWithType: BaseApiController.BadRequest(ModelStateDictionary)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: BadRequest(Object)
  nameWithType: BaseApiController.BadRequest(Object)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: NotFound(Object)
  nameWithType: BaseApiController.NotFound(Object)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController.NotFound
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController.NotFound
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController.OnActionExecuting(ActionExecutingContext)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController.OnActionExecuting
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController.OnActionExecuting
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: GetErrorResult(String, String)
  nameWithType: BaseApiController.GetErrorResult(String, String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String, System.String)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController.GetErrorResult
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController.GetErrorResult
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: GetLanguage()
  nameWithType: BaseApiController.GetLanguage()
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage()
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController.GetLanguage
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController.GetLanguage
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1({TResult})
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  definition: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController.GetSuccessResult<TResult>(TResult)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>(TResult)
  nameWithType.vb: BaseApiController.GetSuccessResult(Of TResult)(TResult)
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult<TResult>
    nameWithType: BaseApiController.GetSuccessResult<TResult>
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult(Of TResult)
    nameWithType: BaseApiController.GetSuccessResult(Of TResult)
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: ParseRequestPagingDate(RequestPaging)
  nameWithType: BaseApiController.ParseRequestPagingDate(RequestPaging)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
    name: ParseRequestPagingDate
    nameWithType: BaseApiController.ParseRequestPagingDate
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Domain.Core.ViewModels.RequestPaging
    name: RequestPaging
    nameWithType: RequestPaging
    fullName: Swastika.Domain.Core.ViewModels.RequestPaging
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
    name: ParseRequestPagingDate
    nameWithType: BaseApiController.ParseRequestPagingDate
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Domain.Core.ViewModels.RequestPaging
    name: RequestPaging
    nameWithType: RequestPaging
    fullName: Swastika.Domain.Core.ViewModels.RequestPaging
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseApiController.UploadFileAsync(IFormFile, String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseApiController.UploadFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseApiController.UploadFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: UploadListFileAsync(String)
  nameWithType: BaseApiController.UploadListFileAsync(String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseApiController.UploadListFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseApiController.UploadListFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  isExternal: true
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController.GetSuccessResult<TResult>(TResult)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>(TResult)
  nameWithType.vb: BaseApiController.GetSuccessResult(Of TResult)(TResult)
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult<TResult>
    nameWithType: BaseApiController.GetSuccessResult<TResult>
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult(Of TResult)
    nameWithType: BaseApiController.GetSuccessResult(Of TResult)
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}
  commentId: '!:Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}'
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  name: UserManager<ApplicationUser>
  nameWithType: UserManager<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<Swastika.Identity.Models.ApplicationUser>
  nameWithType.vb: UserManager(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of Swastika.Identity.Models.ApplicationUser)
  name.vb: UserManager(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: true
  name: UserManager<>
  nameWithType: UserManager<>
  fullName: Microsoft.AspNetCore.Identity.UserManager<>
  nameWithType.vb: UserManager(Of )
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of )
  name.vb: UserManager(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{Swastika.Identity.Models.ApplicationUser}
  commentId: '!:Microsoft.AspNetCore.Identity.SignInManager{Swastika.Identity.Models.ApplicationUser}'
  definition: Microsoft.AspNetCore.Identity.SignInManager`1
  name: SignInManager<ApplicationUser>
  nameWithType: SignInManager<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.SignInManager<Swastika.Identity.Models.ApplicationUser>
  nameWithType.vb: SignInManager(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of Swastika.Identity.Models.ApplicationUser)
  name.vb: SignInManager(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1
  isExternal: true
  name: SignInManager<>
  nameWithType: SignInManager<>
  fullName: Microsoft.AspNetCore.Identity.SignInManager<>
  nameWithType.vb: SignInManager(Of )
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of )
  name.vb: SignInManager(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole}
  commentId: '!:Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole}'
  definition: Microsoft.AspNetCore.Identity.RoleManager`1
  name: RoleManager<IdentityRole>
  nameWithType: RoleManager<IdentityRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>
  nameWithType.vb: RoleManager(Of IdentityRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole)
  name.vb: RoleManager(Of IdentityRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.IdentityRole
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.IdentityRole
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.RoleManager`1
  isExternal: true
  name: RoleManager<>
  nameWithType: RoleManager<>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<>
  nameWithType.vb: RoleManager(Of )
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of )
  name.vb: RoleManager(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Identity.Services.IEmailSender
  commentId: T:Swastika.Identity.Services.IEmailSender
  parent: Swastika.Identity.Services
  isExternal: true
  name: IEmailSender
  nameWithType: IEmailSender
  fullName: Swastika.Identity.Services.IEmailSender
- uid: Swastika.Identity.Services
  commentId: N:Swastika.Identity.Services
  isExternal: true
  name: Swastika.Identity.Services
  nameWithType: Swastika.Identity.Services
  fullName: Swastika.Identity.Services
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: '!:Microsoft.Extensions.Logging.ILogger'
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Swastka.Cms.Api.Controllers.ApiRoleController.#ctor*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiRoleController.#ctor
  isExternal: true
  name: ApiRoleController
  nameWithType: ApiRoleController.ApiRoleController
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController.ApiRoleController
- uid: Microsoft.Extensions.Logging.ILogger{Swastka.Cms.Api.Controllers.ApiRoleController}
  commentId: '!:Microsoft.Extensions.Logging.ILogger{Swastka.Cms.Api.Controllers.ApiRoleController}'
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<ApiRoleController>
  nameWithType: ILogger<ApiRoleController>
  fullName: Microsoft.Extensions.Logging.ILogger<Swastka.Cms.Api.Controllers.ApiRoleController>
  nameWithType.vb: ILogger(Of ApiRoleController)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Swastka.Cms.Api.Controllers.ApiRoleController)
  name.vb: ILogger(Of ApiRoleController)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastka.Cms.Api.Controllers.ApiRoleController
    name: ApiRoleController
    nameWithType: ApiRoleController
    fullName: Swastka.Cms.Api.Controllers.ApiRoleController
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastka.Cms.Api.Controllers.ApiRoleController
    name: ApiRoleController
    nameWithType: ApiRoleController
    fullName: Swastka.Cms.Api.Controllers.ApiRoleController
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: Microsoft.Extensions.Logging.ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiRoleController.Claims*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiRoleController.Claims
  isExternal: true
  name: Claims
  nameWithType: ApiRoleController.Claims
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController.Claims
- uid: Swastka.Cms.Api.Controllers.ApiRoleController.GetList*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiRoleController.GetList
  isExternal: true
  name: GetList
  nameWithType: ApiRoleController.GetList
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController.GetList
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<List<RoleViewModel>>>
  nameWithType: Task<RepositoryResponse<List<RoleViewModel>>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<System.Collections.Generic.List<Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of List(Of RoleViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of System.Collections.Generic.List(Of Swastika.Cms.Lib.ViewModels.Account.RoleViewModel)))
  name.vb: Task(Of RepositoryResponse(Of List(Of RoleViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiRoleController.Save*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiRoleController.Save
  isExternal: true
  name: Save
  nameWithType: ApiRoleController.Save
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController.Save
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Microsoft.AspNetCore.Identity.IdentityRole}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Microsoft.AspNetCore.Identity.IdentityRole}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<IdentityRole>>
  nameWithType: Task<RepositoryResponse<IdentityRole>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Microsoft.AspNetCore.Identity.IdentityRole>>
  nameWithType.vb: Task(Of RepositoryResponse(Of IdentityRole))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Microsoft.AspNetCore.Identity.IdentityRole))
  name.vb: Task(Of RepositoryResponse(Of IdentityRole))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.IdentityRole
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.IdentityRole
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiRoleController.Delete*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiRoleController.Delete
  isExternal: true
  name: Delete
  nameWithType: ApiRoleController.Delete
  fullName: Swastka.Cms.Api.Controllers.ApiRoleController.Delete
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.Models.Account.AspNetRoles}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.Models.Account.AspNetRoles}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<AspNetRoles>>
  nameWithType: Task<RepositoryResponse<AspNetRoles>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Cms.Lib.Models.Account.AspNetRoles>>
  nameWithType.vb: Task(Of RepositoryResponse(Of AspNetRoles))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Cms.Lib.Models.Account.AspNetRoles))
  name.vb: Task(Of RepositoryResponse(Of AspNetRoles))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
