### YamlMime:ManagedReference
items:
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
  id: RefreshTokenViewModel
  parent: Swastika.Cms.Lib.ViewModels.Account
  children:
  - Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.#ctor
  - Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.#ctor(Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ClientId
  - Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Email
  - Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ExpiresUtc
  - Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Id
  - Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.IssuedUtc
  langs:
  - csharp
  - vb
  name: RefreshTokenViewModel
  nameWithType: RefreshTokenViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
  type: Class
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: 'public class RefreshTokenViewModel : ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>'
    content.vb: >-
      Public Class RefreshTokenViewModel
          Inherits ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel)
  inheritance:
  - System.Object
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  inheritedMembers:
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.IsValid
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.InitContext
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.InitModel
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.InitView(Swastika.Cms.Lib.Models.Account.RefreshTokens,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.RefreshTokens,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Clone(Swastika.Cms.Lib.Models.Account.RefreshTokens,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Repository
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Exception
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.IsClone
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.IsLazyLoad
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ListSupportedCulture
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Mapper
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Model
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ModelMapper
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.PageIndex
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.PageSize
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Priority
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Status
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Specificulture
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Errors
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.#ctor
  commentId: M:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.#ctor
  id: '#ctor'
  parent: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
  langs:
  - csharp
  - vb
  name: RefreshTokenViewModel()
  nameWithType: RefreshTokenViewModel.RefreshTokenViewModel()
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.RefreshTokenViewModel()
  type: Constructor
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public RefreshTokenViewModel()
    content.vb: Public Sub New
  overload: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.#ctor(Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.#ctor(Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: '#ctor(Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)'
  parent: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
  langs:
  - csharp
  - vb
  name: RefreshTokenViewModel(RefreshTokens, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: RefreshTokenViewModel.RefreshTokenViewModel(RefreshTokens, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.RefreshTokenViewModel(Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Constructor
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public RefreshTokenViewModel(RefreshTokens model, SiocCmsAccountContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: model
      type: Swastika.Cms.Lib.Models.Account.RefreshTokens
    - id: _context
      type: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Sub New(model As RefreshTokens, _context As SiocCmsAccountContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Id
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Id
  id: Id
  parent: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: RefreshTokenViewModel.Id
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Id
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ClientId
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ClientId
  id: ClientId
  parent: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: RefreshTokenViewModel.ClientId
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ClientId
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public string ClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientId As String
  overload: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ClientId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Email
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Email
  id: Email
  parent: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: RefreshTokenViewModel.Email
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Email
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Email*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ExpiresUtc
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ExpiresUtc
  id: ExpiresUtc
  parent: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
  langs:
  - csharp
  - vb
  name: ExpiresUtc
  nameWithType: RefreshTokenViewModel.ExpiresUtc
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ExpiresUtc
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public DateTime ExpiresUtc { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property ExpiresUtc As DateTime
  overload: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ExpiresUtc*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.IssuedUtc
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.IssuedUtc
  id: IssuedUtc
  parent: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
  langs:
  - csharp
  - vb
  name: IssuedUtc
  nameWithType: RefreshTokenViewModel.IssuedUtc
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.IssuedUtc
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public DateTime IssuedUtc { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property IssuedUtc As DateTime
  overload: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.IssuedUtc*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Swastika.Cms.Lib.ViewModels.Account
  commentId: N:Swastika.Cms.Lib.ViewModels.Account
  isExternal: true
  name: Swastika.Cms.Lib.ViewModels.Account
  nameWithType: Swastika.Cms.Lib.ViewModels.Account
  fullName: Swastika.Cms.Lib.ViewModels.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  commentId: T:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  parent: Swastika.Domain.Data.ViewModels
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3
  name: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel)
  name.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    name: RefreshTokenViewModel
    nameWithType: RefreshTokenViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    name: RefreshTokenViewModel
    nameWithType: RefreshTokenViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.IsValid
  commentId: F:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.IsValid
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  name: IsValid
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.IsValid
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.IsValid
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).IsValid
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).IsValid
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.InitContext
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.InitContext
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  name: InitContext()
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.InitContext()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.InitContext()
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).InitContext()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).InitContext()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.InitModel
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.InitModel
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  name: InitModel()
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.InitModel()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.InitModel()
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).InitModel()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).InitModel()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.InitView(Swastika.Cms.Lib.Models.Account.RefreshTokens,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.InitView(Swastika.Cms.Lib.Models.Account.RefreshTokens,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitView(RefreshTokens, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.InitView(RefreshTokens, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.InitView(Swastika.Cms.Lib.Models.Account.RefreshTokens, System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).InitView(RefreshTokens, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).InitView(Swastika.Cms.Lib.Models.Account.RefreshTokens, System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.ParseView(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).ParseView(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Validate(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Validate(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Validate(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.RefreshTokens,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.RefreshTokens,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneAsync(RefreshTokens, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.CloneAsync(RefreshTokens, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.CloneAsync(Swastika.Cms.Lib.Models.Account.RefreshTokens, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).CloneAsync(RefreshTokens, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).CloneAsync(Swastika.Cms.Lib.Models.Account.RefreshTokens, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(RefreshTokens, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModelsAsync(RefreshTokenViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.CloneSubModelsAsync(RefreshTokenViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).CloneSubModelsAsync(RefreshTokenViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(RefreshTokenViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    name: RefreshTokenViewModel
    nameWithType: RefreshTokenViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    name: RefreshTokenViewModel
    nameWithType: RefreshTokenViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.RemoveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).RemoveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModelsAsync(RefreshTokenViewModel, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.RemoveRelatedModelsAsync(RefreshTokenViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).RemoveRelatedModelsAsync(RefreshTokenViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    name: RefreshTokenViewModel
    nameWithType: RefreshTokenViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    name: RefreshTokenViewModel
    nameWithType: RefreshTokenViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.SaveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).SaveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModelsAsync(RefreshTokens, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.SaveSubModelsAsync(RefreshTokens, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).SaveSubModelsAsync(RefreshTokens, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Clone(Swastika.Cms.Lib.Models.Account.RefreshTokens,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Clone(Swastika.Cms.Lib.Models.Account.RefreshTokens,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Clone(RefreshTokens, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Clone(RefreshTokens, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Clone(Swastika.Cms.Lib.Models.Account.RefreshTokens, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Clone(RefreshTokens, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Clone(Swastika.Cms.Lib.Models.Account.RefreshTokens, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(RefreshTokens, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModels(RefreshTokenViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.CloneSubModels(RefreshTokenViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).CloneSubModels(RefreshTokenViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(RefreshTokenViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    name: RefreshTokenViewModel
    nameWithType: RefreshTokenViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    name: RefreshTokenViewModel
    nameWithType: RefreshTokenViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.RemoveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).RemoveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModels(RefreshTokenViewModel, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.RemoveRelatedModels(RefreshTokenViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).RemoveRelatedModels(RefreshTokenViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    name: RefreshTokenViewModel
    nameWithType: RefreshTokenViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    name: RefreshTokenViewModel
    nameWithType: RefreshTokenViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.SaveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).SaveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModels(RefreshTokens, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.SaveSubModels(RefreshTokens, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.SaveSubModels(Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).SaveSubModels(RefreshTokens, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).SaveSubModels(Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Repository
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Repository
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  name: Repository
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Repository
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Repository
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Repository
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Repository
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Exception
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Exception
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  name: Exception
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Exception
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Exception
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Exception
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Exception
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.IsClone
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.IsClone
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  name: IsClone
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.IsClone
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.IsClone
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).IsClone
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).IsClone
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.IsLazyLoad
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.IsLazyLoad
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  name: IsLazyLoad
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.IsLazyLoad
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).IsLazyLoad
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).IsLazyLoad
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ListSupportedCulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ListSupportedCulture
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  name: ListSupportedCulture
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.ListSupportedCulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.ListSupportedCulture
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).ListSupportedCulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).ListSupportedCulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Mapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Mapper
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  name: Mapper
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Mapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Mapper
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Mapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Mapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Model
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Model
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  name: Model
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Model
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Model
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Model
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Model
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ModelMapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.ModelMapper
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  name: ModelMapper
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.ModelMapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.ModelMapper
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).ModelMapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).ModelMapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.PageIndex
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.PageIndex
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  name: PageIndex
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.PageIndex
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.PageIndex
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).PageIndex
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).PageIndex
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.PageSize
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.PageSize
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  name: PageSize
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.PageSize
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.PageSize
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).PageSize
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).PageSize
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Priority
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Priority
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  name: Priority
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Priority
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Priority
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Priority
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Priority
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Status
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Status
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  name: Status
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Status
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Status
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Status
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Status
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Specificulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Specificulture
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  name: Specificulture
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Specificulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Specificulture
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Specificulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Specificulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Errors
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}.Errors
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.RefreshTokens,Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  name: Errors
  nameWithType: ViewModelBase<SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel>.Errors
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel>.Errors
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, RefreshTokens, RefreshTokenViewModel).Errors
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.RefreshTokens, Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel).Errors
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
  commentId: T:Swastika.Domain.Data.ViewModels.ViewModelBase`3
  isExternal: true
  name: ViewModelBase<TDbContext, TModel, TView>
  nameWithType: ViewModelBase<TDbContext, TModel, TView>
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView)
  name.vb: ViewModelBase(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels
  commentId: N:Swastika.Domain.Data.ViewModels
  isExternal: true
  name: Swastika.Domain.Data.ViewModels
  nameWithType: Swastika.Domain.Data.ViewModels
  fullName: Swastika.Domain.Data.ViewModels
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  commentId: F:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsValid
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsValid
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsValid
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsValid
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandView(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  isExternal: true
  name: InitContext()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  isExternal: true
  name: InitModel()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseModel(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseView(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Validate(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  isExternal: true
  name: Repository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Repository
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Repository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Repository
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Repository
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  isExternal: true
  name: Exception
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Exception
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Exception
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Exception
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Exception
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  isExternal: true
  name: IsClone
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsClone
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsClone
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsClone
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsClone
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  isExternal: true
  name: IsLazyLoad
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  isExternal: true
  name: ListSupportedCulture
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ListSupportedCulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ListSupportedCulture
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ListSupportedCulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ListSupportedCulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  isExternal: true
  name: Mapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Mapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Mapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Mapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Mapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  isExternal: true
  name: Model
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Model
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Model
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Model
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Model
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  isExternal: true
  name: ModelMapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  isExternal: true
  name: PageIndex
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.PageIndex
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.PageIndex
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).PageIndex
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).PageIndex
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  isExternal: true
  name: PageSize
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.PageSize
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.PageSize
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).PageSize
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).PageSize
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  isExternal: true
  name: Priority
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Priority
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Priority
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Priority
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Priority
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  isExternal: true
  name: Status
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Status
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Status
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Status
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Status
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  isExternal: true
  name: Specificulture
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Specificulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Specificulture
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Specificulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Specificulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  isExternal: true
  name: Errors
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Errors
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Errors
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Errors
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Errors
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.#ctor*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.#ctor
  isExternal: true
  name: RefreshTokenViewModel
  nameWithType: RefreshTokenViewModel.RefreshTokenViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.RefreshTokenViewModel
- uid: Swastika.Cms.Lib.Models.Account.RefreshTokens
  commentId: T:Swastika.Cms.Lib.Models.Account.RefreshTokens
  parent: Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: RefreshTokens
  nameWithType: RefreshTokens
  fullName: Swastika.Cms.Lib.Models.Account.RefreshTokens
- uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
  commentId: T:Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
  parent: Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: SiocCmsAccountContext
  nameWithType: SiocCmsAccountContext
  fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Swastika.Cms.Lib.Models.Account
  commentId: N:Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: Swastika.Cms.Lib.Models.Account
  nameWithType: Swastika.Cms.Lib.Models.Account
  fullName: Swastika.Cms.Lib.Models.Account
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Id*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Id
  isExternal: true
  name: Id
  nameWithType: RefreshTokenViewModel.Id
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ClientId*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ClientId
  isExternal: true
  name: ClientId
  nameWithType: RefreshTokenViewModel.ClientId
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ClientId
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Email*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Email
  isExternal: true
  name: Email
  nameWithType: RefreshTokenViewModel.Email
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.Email
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ExpiresUtc*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ExpiresUtc
  isExternal: true
  name: ExpiresUtc
  nameWithType: RefreshTokenViewModel.ExpiresUtc
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.ExpiresUtc
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.IssuedUtc*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.IssuedUtc
  isExternal: true
  name: IssuedUtc
  nameWithType: RefreshTokenViewModel.IssuedUtc
  fullName: Swastika.Cms.Lib.ViewModels.Account.RefreshTokenViewModel.IssuedUtc
