### YamlMime:ManagedReference
items:
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController
  commentId: T:Swastka.Cms.Api.Controllers.ApiCustomerController
  id: ApiCustomerController
  parent: Swastka.Cms.Api.Controllers
  children:
  - Swastka.Cms.Api.Controllers.ApiCustomerController.#ctor
  - Swastka.Cms.Api.Controllers.ApiCustomerController.Delete(System.String)
  - Swastka.Cms.Api.Controllers.ApiCustomerController.Details(System.String,System.String)
  - Swastka.Cms.Api.Controllers.ApiCustomerController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging)
  - Swastka.Cms.Api.Controllers.ApiCustomerController.Post(Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel)
  langs:
  - csharp
  - vb
  name: ApiCustomerController
  nameWithType: ApiCustomerController
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController
  type: Class
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: 'public class ApiCustomerController : BaseApiController'
    content.vb: >-
      Public Class ApiCustomerController
          Inherits BaseApiController
  inheritance:
  - System.Object
  - Swastka.Cms.Api.Controllers.BaseApiController
  inheritedMembers:
  - Swastka.Cms.Api.Controllers.BaseApiController._domain
  - Swastka.Cms.Api.Controllers.BaseApiController._lang
  - Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  - Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  - Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  - Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  - Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1({TResult})
  - Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  - Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController.#ctor
  commentId: M:Swastka.Cms.Api.Controllers.ApiCustomerController.#ctor
  id: '#ctor'
  parent: Swastka.Cms.Api.Controllers.ApiCustomerController
  langs:
  - csharp
  - vb
  name: ApiCustomerController()
  nameWithType: ApiCustomerController.ApiCustomerController()
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController.ApiCustomerController()
  type: Constructor
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public ApiCustomerController()
    content.vb: Public Sub New
  overload: Swastka.Cms.Api.Controllers.ApiCustomerController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController.Details(System.String,System.String)
  commentId: M:Swastka.Cms.Api.Controllers.ApiCustomerController.Details(System.String,System.String)
  id: Details(System.String,System.String)
  parent: Swastka.Cms.Api.Controllers.ApiCustomerController
  langs:
  - csharp
  - vb
  name: Details(String, String)
  nameWithType: ApiCustomerController.Details(String, String)
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController.Details(System.String, System.String)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<JObject> Details(string viewType, string id = null)
    parameters:
    - id: viewType
      type: System.String
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Newtonsoft.Json.Linq.JObject}
    content.vb: Public Function Details(viewType As String, id As String = Nothing) As Task(Of JObject)
  overload: Swastka.Cms.Api.Controllers.ApiCustomerController.Details*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController.Delete(System.String)
  commentId: M:Swastka.Cms.Api.Controllers.ApiCustomerController.Delete(System.String)
  id: Delete(System.String)
  parent: Swastka.Cms.Api.Controllers.ApiCustomerController
  langs:
  - csharp
  - vb
  name: Delete(String)
  nameWithType: ApiCustomerController.Delete(String)
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController.Delete(System.String)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<SiocCustomer>> Delete(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.Models.Cms.SiocCustomer}}
    content.vb: Public Function Delete(id As String) As Task(Of RepositoryResponse(Of SiocCustomer))
  overload: Swastka.Cms.Api.Controllers.ApiCustomerController.Delete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController.Post(Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel)
  commentId: M:Swastka.Cms.Api.Controllers.ApiCustomerController.Post(Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel)
  id: Post(Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel)
  parent: Swastka.Cms.Api.Controllers.ApiCustomerController
  langs:
  - csharp
  - vb
  name: Post(ApiCustomerViewModel)
  nameWithType: ApiCustomerController.Post(ApiCustomerViewModel)
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController.Post(Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<ApiCustomerViewModel>> Post(ApiCustomerViewModel model)
    parameters:
    - id: model
      type: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel}}
    content.vb: Public Function Post(model As ApiCustomerViewModel) As Task(Of RepositoryResponse(Of ApiCustomerViewModel))
  overload: Swastka.Cms.Api.Controllers.ApiCustomerController.Post*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging)
  commentId: M:Swastka.Cms.Api.Controllers.ApiCustomerController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging)
  id: GetList(Swastika.Domain.Core.ViewModels.RequestPaging)
  parent: Swastka.Cms.Api.Controllers.ApiCustomerController
  langs:
  - csharp
  - vb
  name: GetList(RequestPaging)
  nameWithType: ApiCustomerController.GetList(RequestPaging)
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<PaginationModel<ApiCustomerViewModel>>> GetList(RequestPaging request)
    parameters:
    - id: request
      type: Swastika.Domain.Core.ViewModels.RequestPaging
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel}}}
    content.vb: Public Function GetList(request As RequestPaging) As Task(Of RepositoryResponse(Of PaginationModel(Of ApiCustomerViewModel)))
  overload: Swastka.Cms.Api.Controllers.ApiCustomerController.GetList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Swastka.Cms.Api.Controllers
  commentId: N:Swastka.Cms.Api.Controllers
  isExternal: true
  name: Swastka.Cms.Api.Controllers
  nameWithType: Swastka.Cms.Api.Controllers
  fullName: Swastka.Cms.Api.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastka.Cms.Api.Controllers.BaseApiController
  commentId: T:Swastka.Cms.Api.Controllers.BaseApiController
  parent: Swastka.Cms.Api.Controllers
  isExternal: true
  name: BaseApiController
  nameWithType: BaseApiController
  fullName: Swastka.Cms.Api.Controllers.BaseApiController
- uid: Swastka.Cms.Api.Controllers.BaseApiController._domain
  commentId: F:Swastka.Cms.Api.Controllers.BaseApiController._domain
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: _domain
  nameWithType: BaseApiController._domain
  fullName: Swastka.Cms.Api.Controllers.BaseApiController._domain
- uid: Swastka.Cms.Api.Controllers.BaseApiController._lang
  commentId: F:Swastka.Cms.Api.Controllers.BaseApiController._lang
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: _lang
  nameWithType: BaseApiController._lang
  fullName: Swastka.Cms.Api.Controllers.BaseApiController._lang
- uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: BadRequest(ModelStateDictionary)
  nameWithType: BaseApiController.BadRequest(ModelStateDictionary)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: BadRequest(Object)
  nameWithType: BaseApiController.BadRequest(Object)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: NotFound(Object)
  nameWithType: BaseApiController.NotFound(Object)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController.NotFound
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController.NotFound
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController.OnActionExecuting(ActionExecutingContext)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController.OnActionExecuting
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController.OnActionExecuting
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: GetErrorResult(String, String)
  nameWithType: BaseApiController.GetErrorResult(String, String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String, System.String)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController.GetErrorResult
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController.GetErrorResult
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: GetLanguage()
  nameWithType: BaseApiController.GetLanguage()
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage()
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController.GetLanguage
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController.GetLanguage
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1({TResult})
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  definition: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController.GetSuccessResult<TResult>(TResult)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>(TResult)
  nameWithType.vb: BaseApiController.GetSuccessResult(Of TResult)(TResult)
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult<TResult>
    nameWithType: BaseApiController.GetSuccessResult<TResult>
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult(Of TResult)
    nameWithType: BaseApiController.GetSuccessResult(Of TResult)
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: ParseRequestPagingDate(RequestPaging)
  nameWithType: BaseApiController.ParseRequestPagingDate(RequestPaging)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
    name: ParseRequestPagingDate
    nameWithType: BaseApiController.ParseRequestPagingDate
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Domain.Core.ViewModels.RequestPaging
    name: RequestPaging
    nameWithType: RequestPaging
    fullName: Swastika.Domain.Core.ViewModels.RequestPaging
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
    name: ParseRequestPagingDate
    nameWithType: BaseApiController.ParseRequestPagingDate
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Domain.Core.ViewModels.RequestPaging
    name: RequestPaging
    nameWithType: RequestPaging
    fullName: Swastika.Domain.Core.ViewModels.RequestPaging
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseApiController.UploadFileAsync(IFormFile, String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseApiController.UploadFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseApiController.UploadFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: UploadListFileAsync(String)
  nameWithType: BaseApiController.UploadListFileAsync(String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseApiController.UploadListFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseApiController.UploadListFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  isExternal: true
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController.GetSuccessResult<TResult>(TResult)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>(TResult)
  nameWithType.vb: BaseApiController.GetSuccessResult(Of TResult)(TResult)
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult<TResult>
    nameWithType: BaseApiController.GetSuccessResult<TResult>
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult(Of TResult)
    nameWithType: BaseApiController.GetSuccessResult(Of TResult)
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController.#ctor*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiCustomerController.#ctor
  isExternal: true
  name: ApiCustomerController
  nameWithType: ApiCustomerController.ApiCustomerController
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController.ApiCustomerController
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController.Details*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiCustomerController.Details
  isExternal: true
  name: Details
  nameWithType: ApiCustomerController.Details
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController.Details
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Newtonsoft.Json.Linq.JObject}
  commentId: '!:System.Threading.Tasks.Task{Newtonsoft.Json.Linq.JObject}'
  definition: System.Threading.Tasks.Task`1
  name: Task<JObject>
  nameWithType: Task<JObject>
  fullName: System.Threading.Tasks.Task<Newtonsoft.Json.Linq.JObject>
  nameWithType.vb: Task(Of JObject)
  fullName.vb: System.Threading.Tasks.Task(Of Newtonsoft.Json.Linq.JObject)
  name.vb: Task(Of JObject)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController.Delete*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiCustomerController.Delete
  isExternal: true
  name: Delete
  nameWithType: ApiCustomerController.Delete
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController.Delete
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.Models.Cms.SiocCustomer}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.Models.Cms.SiocCustomer}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<SiocCustomer>>
  nameWithType: Task<RepositoryResponse<SiocCustomer>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Cms.Lib.Models.Cms.SiocCustomer>>
  nameWithType.vb: Task(Of RepositoryResponse(Of SiocCustomer))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Cms.Lib.Models.Cms.SiocCustomer))
  name.vb: Task(Of RepositoryResponse(Of SiocCustomer))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.Models.Cms.SiocCustomer
    name: SiocCustomer
    nameWithType: SiocCustomer
    fullName: Swastika.Cms.Lib.Models.Cms.SiocCustomer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.Models.Cms.SiocCustomer
    name: SiocCustomer
    nameWithType: SiocCustomer
    fullName: Swastika.Cms.Lib.Models.Cms.SiocCustomer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController.Post*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiCustomerController.Post
  isExternal: true
  name: Post
  nameWithType: ApiCustomerController.Post
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController.Post
- uid: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
  parent: Swastika.Cms.Lib.ViewModels.Api
  isExternal: true
  name: ApiCustomerViewModel
  nameWithType: ApiCustomerViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<ApiCustomerViewModel>>
  nameWithType: Task<RepositoryResponse<ApiCustomerViewModel>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel>>
  nameWithType.vb: Task(Of RepositoryResponse(Of ApiCustomerViewModel))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel))
  name.vb: Task(Of RepositoryResponse(Of ApiCustomerViewModel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
    name: ApiCustomerViewModel
    nameWithType: ApiCustomerViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
    name: ApiCustomerViewModel
    nameWithType: ApiCustomerViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib.ViewModels.Api
  commentId: N:Swastika.Cms.Lib.ViewModels.Api
  isExternal: true
  name: Swastika.Cms.Lib.ViewModels.Api
  nameWithType: Swastika.Cms.Lib.ViewModels.Api
  fullName: Swastika.Cms.Lib.ViewModels.Api
- uid: Swastka.Cms.Api.Controllers.ApiCustomerController.GetList*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiCustomerController.GetList
  isExternal: true
  name: GetList
  nameWithType: ApiCustomerController.GetList
  fullName: Swastka.Cms.Api.Controllers.ApiCustomerController.GetList
- uid: Swastika.Domain.Core.ViewModels.RequestPaging
  commentId: T:Swastika.Domain.Core.ViewModels.RequestPaging
  parent: Swastika.Domain.Core.ViewModels
  isExternal: true
  name: RequestPaging
  nameWithType: RequestPaging
  fullName: Swastika.Domain.Core.ViewModels.RequestPaging
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel}}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel}}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<PaginationModel<ApiCustomerViewModel>>>
  nameWithType: Task<RepositoryResponse<PaginationModel<ApiCustomerViewModel>>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Domain.Core.ViewModels.PaginationModel<Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of PaginationModel(Of ApiCustomerViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Domain.Core.ViewModels.PaginationModel(Of Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel)))
  name.vb: Task(Of RepositoryResponse(Of PaginationModel(Of ApiCustomerViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Swastika.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
    name: ApiCustomerViewModel
    nameWithType: ApiCustomerViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Swastika.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
    name: ApiCustomerViewModel
    nameWithType: ApiCustomerViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Api.ApiCustomerViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels
  commentId: N:Swastika.Domain.Core.ViewModels
  isExternal: true
  name: Swastika.Domain.Core.ViewModels
  nameWithType: Swastika.Domain.Core.ViewModels
  fullName: Swastika.Domain.Core.ViewModels
