### YamlMime:ManagedReference
items:
- uid: Swastika.UI.Core.Controllers.ApiHubController`4
  commentId: T:Swastika.UI.Core.Controllers.ApiHubController`4
  id: ApiHubController`4
  parent: Swastika.UI.Core.Controllers
  children:
  - Swastika.UI.Core.Controllers.ApiHubController`4.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{`0})
  - Swastika.UI.Core.Controllers.ApiHubController`4.Clients
  - Swastika.UI.Core.Controllers.ApiHubController`4.Groups
  langs:
  - csharp
  - vb
  name: ApiHubController<THub, TDbContext, TModel, TView>
  nameWithType: ApiHubController<THub, TDbContext, TModel, TView>
  fullName: Swastika.UI.Core.Controllers.ApiHubController<THub, TDbContext, TModel, TView>
  type: Class
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.UI.Core.Controllers
  syntax:
    content: 'public abstract class ApiHubController<THub, TDbContext, TModel, TView> : BaseApiController<TDbContext, TModel, TView> where THub : BaseSignalRHub where TDbContext : DbContext where TModel : class where TView : ViewModelBase<TDbContext, TModel, TView>'
    typeParameters:
    - id: THub
    - id: TDbContext
    - id: TModel
    - id: TView
    content.vb: >-
      Public MustInherit Class ApiHubController(Of THub As BaseSignalRHub, TDbContext As DbContext, TModel As Class, TView As ViewModelBase(Of TDbContext, TModel, TView))
          Inherits BaseApiController(Of TDbContext, TModel, TView)
  inheritance:
  - System.Object
  - Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  inheritedMembers:
  - Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}._repo
  - Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}._lang
  - Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.BadRequest(System.Object)
  - Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.NotFound(System.Object)
  - Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.GetErrorResult(System.String,System.String)
  - Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.GetLanguage
  - Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.GetSuccessResult``1({TResult})
  nameWithType.vb: ApiHubController(Of THub, TDbContext, TModel, TView)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Swastika.UI.Core.Controllers.ApiHubController(Of THub, TDbContext, TModel, TView)
  name.vb: ApiHubController(Of THub, TDbContext, TModel, TView)
- uid: Swastika.UI.Core.Controllers.ApiHubController`4.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{`0})
  commentId: M:Swastika.UI.Core.Controllers.ApiHubController`4.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{`0})
  id: '#ctor(Microsoft.AspNetCore.SignalR.IHubContext{`0})'
  parent: Swastika.UI.Core.Controllers.ApiHubController`4
  langs:
  - csharp
  - vb
  name: ApiHubController(IHubContext<THub>)
  nameWithType: ApiHubController<THub, TDbContext, TModel, TView>.ApiHubController(IHubContext<THub>)
  fullName: Swastika.UI.Core.Controllers.ApiHubController<THub, TDbContext, TModel, TView>.ApiHubController(Microsoft.AspNetCore.SignalR.IHubContext<THub>)
  type: Constructor
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.UI.Core.Controllers
  syntax:
    content: protected ApiHubController(IHubContext<THub> hub)
    parameters:
    - id: hub
      type: Microsoft.AspNetCore.SignalR.IHubContext{{THub}}
    content.vb: Protected Sub New(hub As IHubContext(Of THub))
  overload: Swastika.UI.Core.Controllers.ApiHubController`4.#ctor*
  nameWithType.vb: ApiHubController(Of THub, TDbContext, TModel, TView).ApiHubController(IHubContext(Of THub))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Swastika.UI.Core.Controllers.ApiHubController(Of THub, TDbContext, TModel, TView).ApiHubController(Microsoft.AspNetCore.SignalR.IHubContext(Of THub))
  name.vb: ApiHubController(IHubContext(Of THub))
- uid: Swastika.UI.Core.Controllers.ApiHubController`4.Clients
  commentId: P:Swastika.UI.Core.Controllers.ApiHubController`4.Clients
  id: Clients
  parent: Swastika.UI.Core.Controllers.ApiHubController`4
  langs:
  - csharp
  - vb
  name: Clients
  nameWithType: ApiHubController<THub, TDbContext, TModel, TView>.Clients
  fullName: Swastika.UI.Core.Controllers.ApiHubController<THub, TDbContext, TModel, TView>.Clients
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.UI.Core.Controllers
  syntax:
    content: public IHubClients Clients { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.SignalR.IHubClients
    content.vb: Public ReadOnly Property Clients As IHubClients
  overload: Swastika.UI.Core.Controllers.ApiHubController`4.Clients*
  nameWithType.vb: ApiHubController(Of THub, TDbContext, TModel, TView).Clients
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Swastika.UI.Core.Controllers.ApiHubController(Of THub, TDbContext, TModel, TView).Clients
- uid: Swastika.UI.Core.Controllers.ApiHubController`4.Groups
  commentId: P:Swastika.UI.Core.Controllers.ApiHubController`4.Groups
  id: Groups
  parent: Swastika.UI.Core.Controllers.ApiHubController`4
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: ApiHubController<THub, TDbContext, TModel, TView>.Groups
  fullName: Swastika.UI.Core.Controllers.ApiHubController<THub, TDbContext, TModel, TView>.Groups
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.UI.Core.Controllers
  syntax:
    content: public IGroupManager Groups { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.SignalR.IGroupManager
    content.vb: Public ReadOnly Property Groups As IGroupManager
  overload: Swastika.UI.Core.Controllers.ApiHubController`4.Groups*
  nameWithType.vb: ApiHubController(Of THub, TDbContext, TModel, TView).Groups
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Swastika.UI.Core.Controllers.ApiHubController(Of THub, TDbContext, TModel, TView).Groups
references:
- uid: Swastika.UI.Core.Controllers
  commentId: N:Swastika.UI.Core.Controllers
  isExternal: true
  name: Swastika.UI.Core.Controllers
  nameWithType: Swastika.UI.Core.Controllers
  fullName: Swastika.UI.Core.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  commentId: T:Swastika.Api.Controllers.BaseApiController{`1,`2,`3}
  parent: Swastika.Api.Controllers
  definition: Swastika.Api.Controllers.BaseApiController`3
  name: BaseApiController<TDbContext, TModel, TView>
  nameWithType: BaseApiController<TDbContext, TModel, TView>
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView)
  name.vb: BaseApiController(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3
    name: BaseApiController
    nameWithType: BaseApiController
    fullName: Swastika.Api.Controllers.BaseApiController
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3
    name: BaseApiController
    nameWithType: BaseApiController
    fullName: Swastika.Api.Controllers.BaseApiController
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}._repo
  commentId: F:Swastika.Api.Controllers.BaseApiController{`1,`2,`3}._repo
  parent: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  definition: Swastika.Api.Controllers.BaseApiController`3._repo
  name: _repo
  nameWithType: BaseApiController<TDbContext, TModel, TView>._repo
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>._repo
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView)._repo
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView)._repo
- uid: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}._lang
  commentId: F:Swastika.Api.Controllers.BaseApiController{`1,`2,`3}._lang
  parent: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  definition: Swastika.Api.Controllers.BaseApiController`3._lang
  name: _lang
  nameWithType: BaseApiController<TDbContext, TModel, TView>._lang
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>._lang
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView)._lang
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView)._lang
- uid: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Swastika.Api.Controllers.BaseApiController{`1,`2,`3}.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  definition: Swastika.Api.Controllers.BaseApiController`3.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  name: BadRequest(ModelStateDictionary)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest(ModelStateDictionary)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).BadRequest(ModelStateDictionary)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.BadRequest(System.Object)
  commentId: M:Swastika.Api.Controllers.BaseApiController{`1,`2,`3}.BadRequest(System.Object)
  parent: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  definition: Swastika.Api.Controllers.BaseApiController`3.BadRequest(System.Object)
  name: BadRequest(Object)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest(Object)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest(System.Object)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).BadRequest(Object)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest(System.Object)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.NotFound(System.Object)
  commentId: M:Swastika.Api.Controllers.BaseApiController{`1,`2,`3}.NotFound(System.Object)
  parent: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  definition: Swastika.Api.Controllers.BaseApiController`3.NotFound(System.Object)
  name: NotFound(Object)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.NotFound(Object)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.NotFound(System.Object)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).NotFound(Object)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).NotFound(System.Object)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController<TDbContext, TModel, TView>.NotFound
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).NotFound
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastika.Api.Controllers.BaseApiController{`1,`2,`3}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  definition: Swastika.Api.Controllers.BaseApiController`3.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.OnActionExecuting(ActionExecutingContext)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting(ActionExecutingContext)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController<TDbContext, TModel, TView>.OnActionExecuting
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.GetErrorResult(System.String,System.String)
  commentId: M:Swastika.Api.Controllers.BaseApiController{`1,`2,`3}.GetErrorResult(System.String,System.String)
  parent: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  definition: Swastika.Api.Controllers.BaseApiController`3.GetErrorResult(System.String,System.String)
  name: GetErrorResult(String, String)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetErrorResult(String, String)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetErrorResult(System.String, System.String)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetErrorResult(String, String)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetErrorResult(System.String, System.String)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController<TDbContext, TModel, TView>.GetErrorResult
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).GetErrorResult
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.GetLanguage
  commentId: M:Swastika.Api.Controllers.BaseApiController{`1,`2,`3}.GetLanguage
  parent: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  definition: Swastika.Api.Controllers.BaseApiController`3.GetLanguage
  name: GetLanguage()
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetLanguage()
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetLanguage()
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetLanguage()
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetLanguage()
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController<TDbContext, TModel, TView>.GetLanguage
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).GetLanguage
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}.GetSuccessResult``1({TResult})
  commentId: M:Swastika.Api.Controllers.BaseApiController{`1,`2,`3}.GetSuccessResult``1(``0)
  parent: Swastika.Api.Controllers.BaseApiController{{TDbContext},{TModel},{TView}}
  definition: Swastika.Api.Controllers.BaseApiController`3.GetSuccessResult``1(``0)
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetSuccessResult<TResult>(TResult)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetSuccessResult<TResult>(TResult)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult(Of TResult)(TResult)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetSuccessResult``1(``0)
    name: GetSuccessResult<TResult>
    nameWithType: BaseApiController<TDbContext, TModel, TView>.GetSuccessResult<TResult>
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetSuccessResult<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetSuccessResult``1(``0)
    name: GetSuccessResult(Of TResult)
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult(Of TResult)
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Api.Controllers.BaseApiController`3
  commentId: T:Swastika.Api.Controllers.BaseApiController`3
  isExternal: true
  name: BaseApiController<TDbContext, TModel, TView>
  nameWithType: BaseApiController<TDbContext, TModel, TView>
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView)
  name.vb: BaseApiController(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3
    name: BaseApiController
    nameWithType: BaseApiController
    fullName: Swastika.Api.Controllers.BaseApiController
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3
    name: BaseApiController
    nameWithType: BaseApiController
    fullName: Swastika.Api.Controllers.BaseApiController
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers
  commentId: N:Swastika.Api.Controllers
  isExternal: true
  name: Swastika.Api.Controllers
  nameWithType: Swastika.Api.Controllers
  fullName: Swastika.Api.Controllers
- uid: Swastika.Api.Controllers.BaseApiController`3._repo
  commentId: F:Swastika.Api.Controllers.BaseApiController`3._repo
  isExternal: true
  name: _repo
  nameWithType: BaseApiController<TDbContext, TModel, TView>._repo
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>._repo
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView)._repo
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView)._repo
- uid: Swastika.Api.Controllers.BaseApiController`3._lang
  commentId: F:Swastika.Api.Controllers.BaseApiController`3._lang
  isExternal: true
  name: _lang
  nameWithType: BaseApiController<TDbContext, TModel, TView>._lang
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>._lang
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView)._lang
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView)._lang
- uid: Swastika.Api.Controllers.BaseApiController`3.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Swastika.Api.Controllers.BaseApiController`3.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  isExternal: true
  name: BadRequest(ModelStateDictionary)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest(ModelStateDictionary)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).BadRequest(ModelStateDictionary)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`3.BadRequest(System.Object)
  commentId: M:Swastika.Api.Controllers.BaseApiController`3.BadRequest(System.Object)
  isExternal: true
  name: BadRequest(Object)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest(Object)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest(System.Object)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).BadRequest(Object)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest(System.Object)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`3.NotFound(System.Object)
  commentId: M:Swastika.Api.Controllers.BaseApiController`3.NotFound(System.Object)
  isExternal: true
  name: NotFound(Object)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.NotFound(Object)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.NotFound(System.Object)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).NotFound(Object)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).NotFound(System.Object)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController<TDbContext, TModel, TView>.NotFound
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).NotFound
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`3.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastika.Api.Controllers.BaseApiController`3.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  isExternal: true
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.OnActionExecuting(ActionExecutingContext)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting(ActionExecutingContext)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController<TDbContext, TModel, TView>.OnActionExecuting
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`3.GetErrorResult(System.String,System.String)
  commentId: M:Swastika.Api.Controllers.BaseApiController`3.GetErrorResult(System.String,System.String)
  isExternal: true
  name: GetErrorResult(String, String)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetErrorResult(String, String)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetErrorResult(System.String, System.String)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetErrorResult(String, String)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetErrorResult(System.String, System.String)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController<TDbContext, TModel, TView>.GetErrorResult
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).GetErrorResult
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`3.GetLanguage
  commentId: M:Swastika.Api.Controllers.BaseApiController`3.GetLanguage
  isExternal: true
  name: GetLanguage()
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetLanguage()
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetLanguage()
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetLanguage()
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetLanguage()
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController<TDbContext, TModel, TView>.GetLanguage
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).GetLanguage
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`3.GetSuccessResult``1(``0)
  commentId: M:Swastika.Api.Controllers.BaseApiController`3.GetSuccessResult``1(``0)
  isExternal: true
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetSuccessResult<TResult>(TResult)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetSuccessResult<TResult>(TResult)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult(Of TResult)(TResult)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetSuccessResult``1(``0)
    name: GetSuccessResult<TResult>
    nameWithType: BaseApiController<TDbContext, TModel, TView>.GetSuccessResult<TResult>
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetSuccessResult<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`3.GetSuccessResult``1(``0)
    name: GetSuccessResult(Of TResult)
    nameWithType: BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult(Of TResult)
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.UI.Core.Controllers.ApiHubController`4.#ctor*
  commentId: Overload:Swastika.UI.Core.Controllers.ApiHubController`4.#ctor
  isExternal: true
  name: ApiHubController
  nameWithType: ApiHubController<THub, TDbContext, TModel, TView>.ApiHubController
  fullName: Swastika.UI.Core.Controllers.ApiHubController<THub, TDbContext, TModel, TView>.ApiHubController
  nameWithType.vb: ApiHubController(Of THub, TDbContext, TModel, TView).ApiHubController
  fullName.vb: Swastika.UI.Core.Controllers.ApiHubController(Of THub, TDbContext, TModel, TView).ApiHubController
- uid: Microsoft.AspNetCore.SignalR.IHubContext{{THub}}
  commentId: '!:Microsoft.AspNetCore.SignalR.IHubContext{`0}'
  definition: Microsoft.AspNetCore.SignalR.IHubContext`1
  name: IHubContext<THub>
  nameWithType: IHubContext<THub>
  fullName: Microsoft.AspNetCore.SignalR.IHubContext<THub>
  nameWithType.vb: IHubContext(Of THub)
  fullName.vb: Microsoft.AspNetCore.SignalR.IHubContext(Of THub)
  name.vb: IHubContext(Of THub)
  spec.csharp:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: THub
    nameWithType: THub
    fullName: THub
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: THub
    nameWithType: THub
    fullName: THub
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.SignalR.IHubContext`1
  isExternal: true
  name: IHubContext<>
  nameWithType: IHubContext<>
  fullName: Microsoft.AspNetCore.SignalR.IHubContext<>
  nameWithType.vb: IHubContext(Of )
  fullName.vb: Microsoft.AspNetCore.SignalR.IHubContext(Of )
  name.vb: IHubContext(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.UI.Core.Controllers.ApiHubController`4.Clients*
  commentId: Overload:Swastika.UI.Core.Controllers.ApiHubController`4.Clients
  isExternal: true
  name: Clients
  nameWithType: ApiHubController<THub, TDbContext, TModel, TView>.Clients
  fullName: Swastika.UI.Core.Controllers.ApiHubController<THub, TDbContext, TModel, TView>.Clients
  nameWithType.vb: ApiHubController(Of THub, TDbContext, TModel, TView).Clients
  fullName.vb: Swastika.UI.Core.Controllers.ApiHubController(Of THub, TDbContext, TModel, TView).Clients
- uid: Microsoft.AspNetCore.SignalR.IHubClients
  isExternal: true
  name: IHubClients
  nameWithType: IHubClients
  fullName: Microsoft.AspNetCore.SignalR.IHubClients
- uid: Swastika.UI.Core.Controllers.ApiHubController`4.Groups*
  commentId: Overload:Swastika.UI.Core.Controllers.ApiHubController`4.Groups
  isExternal: true
  name: Groups
  nameWithType: ApiHubController<THub, TDbContext, TModel, TView>.Groups
  fullName: Swastika.UI.Core.Controllers.ApiHubController<THub, TDbContext, TModel, TView>.Groups
  nameWithType.vb: ApiHubController(Of THub, TDbContext, TModel, TView).Groups
  fullName.vb: Swastika.UI.Core.Controllers.ApiHubController(Of THub, TDbContext, TModel, TView).Groups
- uid: Microsoft.AspNetCore.SignalR.IGroupManager
  isExternal: true
  name: IGroupManager
  nameWithType: IGroupManager
  fullName: Microsoft.AspNetCore.SignalR.IGroupManager
