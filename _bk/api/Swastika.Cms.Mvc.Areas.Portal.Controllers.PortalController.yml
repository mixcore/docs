### YamlMime:ManagedReference
items:
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  commentId: T:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  id: PortalController
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers
  children:
  - Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole})
  - Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index
  - Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init
  - Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search(System.String,Swastika.Cms.Lib.SWCmsConstants.SearchType)
  langs:
  - csharp
  - vb
  name: PortalController
  nameWithType: PortalController
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  type: Class
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: 'public class PortalController : BaseController'
    content.vb: >-
      Public Class PortalController
          Inherits BaseController
  inheritance:
  - System.Object
  - Swastika.Cms.Mvc.Controllers.BaseController
  inheritedMembers:
  - Swastika.Cms.Mvc.Controllers.BaseController.ROUTE_CULTURE_NAME
  - Swastika.Cms.Mvc.Controllers.BaseController.ROUTE_DEFAULT_CULTURE
  - Swastika.Cms.Mvc.Controllers.BaseController._domain
  - Swastika.Cms.Mvc.Controllers.BaseController._configuration
  - Swastika.Cms.Mvc.Controllers.BaseController._env
  - Swastika.Cms.Mvc.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Swastika.Cms.Mvc.Controllers.BaseController.GetLanguage
  - Swastika.Cms.Mvc.Controllers.BaseController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Swastika.Cms.Mvc.Controllers.BaseController.UploadListFileAsync(System.String)
  - Swastika.Cms.Mvc.Controllers.BaseController.ViewContext
  - Swastika.Cms.Mvc.Controllers.BaseController.CurrentLanguage
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole})
  commentId: M:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole})
  id: '#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole})'
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  langs:
  - csharp
  - vb
  name: PortalController(IHostingEnvironment, IConfiguration, UserManager<ApplicationUser>, RoleManager<IdentityRole>)
  nameWithType: PortalController.PortalController(IHostingEnvironment, IConfiguration, UserManager<ApplicationUser>, RoleManager<IdentityRole>)
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.PortalController(Microsoft.AspNetCore.Hosting.IHostingEnvironment, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.AspNetCore.Identity.UserManager<Swastika.Identity.Models.ApplicationUser>, Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>)
  type: Constructor
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: public PortalController(IHostingEnvironment env, IConfiguration configuration, UserManager<ApplicationUser> userManager, RoleManager<IdentityRole> roleManager)
    parameters:
    - id: env
      type: Microsoft.AspNetCore.Hosting.IHostingEnvironment
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
    - id: userManager
      type: Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}
    - id: roleManager
      type: Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole}
    content.vb: Public Sub New(env As IHostingEnvironment, configuration As IConfiguration, userManager As UserManager(Of ApplicationUser), roleManager As RoleManager(Of IdentityRole))
  overload: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor*
  nameWithType.vb: PortalController.PortalController(IHostingEnvironment, IConfiguration, UserManager(Of ApplicationUser), RoleManager(Of IdentityRole))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.PortalController(Microsoft.AspNetCore.Hosting.IHostingEnvironment, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.AspNetCore.Identity.UserManager(Of Swastika.Identity.Models.ApplicationUser), Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole))
  name.vb: PortalController(IHostingEnvironment, IConfiguration, UserManager(Of ApplicationUser), RoleManager(Of IdentityRole))
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index
  commentId: M:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index
  id: Index
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  langs:
  - csharp
  - vb
  name: Index()
  nameWithType: PortalController.Index()
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index()
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: public IActionResult Index()
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Public Function Index As IActionResult
  overload: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init
  commentId: M:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init
  id: Init
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: PortalController.Init()
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init()
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: public IActionResult Init()
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Public Function Init As IActionResult
  overload: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search(System.String,Swastika.Cms.Lib.SWCmsConstants.SearchType)
  commentId: M:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search(System.String,Swastika.Cms.Lib.SWCmsConstants.SearchType)
  id: Search(System.String,Swastika.Cms.Lib.SWCmsConstants.SearchType)
  parent: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
  langs:
  - csharp
  - vb
  name: Search(String, SWCmsConstants.SearchType)
  nameWithType: PortalController.Search(String, SWCmsConstants.SearchType)
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search(System.String, Swastika.Cms.Lib.SWCmsConstants.SearchType)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: Swastika.Cms.Mvc.Areas.Portal.Controllers
  syntax:
    content: public Task<IActionResult> Search(string keyword, SWCmsConstants.SearchType searchType)
    parameters:
    - id: keyword
      type: System.String
    - id: searchType
      type: Swastika.Cms.Lib.SWCmsConstants.SearchType
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function Search(keyword As String, searchType As SWCmsConstants.SearchType) As Task(Of IActionResult)
  overload: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers
  commentId: N:Swastika.Cms.Mvc.Areas.Portal.Controllers
  isExternal: true
  name: Swastika.Cms.Mvc.Areas.Portal.Controllers
  nameWithType: Swastika.Cms.Mvc.Areas.Portal.Controllers
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastika.Cms.Mvc.Controllers.BaseController
  commentId: T:Swastika.Cms.Mvc.Controllers.BaseController
  parent: Swastika.Cms.Mvc.Controllers
  isExternal: true
  name: BaseController
  nameWithType: BaseController
  fullName: Swastika.Cms.Mvc.Controllers.BaseController
- uid: Swastika.Cms.Mvc.Controllers.BaseController.ROUTE_CULTURE_NAME
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController.ROUTE_CULTURE_NAME
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: ROUTE_CULTURE_NAME
  nameWithType: BaseController.ROUTE_CULTURE_NAME
  fullName: Swastika.Cms.Mvc.Controllers.BaseController.ROUTE_CULTURE_NAME
- uid: Swastika.Cms.Mvc.Controllers.BaseController.ROUTE_DEFAULT_CULTURE
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController.ROUTE_DEFAULT_CULTURE
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: ROUTE_DEFAULT_CULTURE
  nameWithType: BaseController.ROUTE_DEFAULT_CULTURE
  fullName: Swastika.Cms.Mvc.Controllers.BaseController.ROUTE_DEFAULT_CULTURE
- uid: Swastika.Cms.Mvc.Controllers.BaseController._domain
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController._domain
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: _domain
  nameWithType: BaseController._domain
  fullName: Swastika.Cms.Mvc.Controllers.BaseController._domain
- uid: Swastika.Cms.Mvc.Controllers.BaseController._configuration
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController._configuration
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: _configuration
  nameWithType: BaseController._configuration
  fullName: Swastika.Cms.Mvc.Controllers.BaseController._configuration
- uid: Swastika.Cms.Mvc.Controllers.BaseController._env
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController._env
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: _env
  nameWithType: BaseController._env
  fullName: Swastika.Cms.Mvc.Controllers.BaseController._env
- uid: Swastika.Cms.Mvc.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseController.OnActionExecuting(ActionExecutingContext)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseController.OnActionExecuting
    fullName: Swastika.Cms.Mvc.Controllers.BaseController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseController.OnActionExecuting
    fullName: Swastika.Cms.Mvc.Controllers.BaseController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController.GetLanguage
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController.GetLanguage
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: GetLanguage()
  nameWithType: BaseController.GetLanguage()
  fullName: Swastika.Cms.Mvc.Controllers.BaseController.GetLanguage()
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController.GetLanguage
    name: GetLanguage
    nameWithType: BaseController.GetLanguage
    fullName: Swastika.Cms.Mvc.Controllers.BaseController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController.GetLanguage
    name: GetLanguage
    nameWithType: BaseController.GetLanguage
    fullName: Swastika.Cms.Mvc.Controllers.BaseController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseController.UploadFileAsync(IFormFile, String)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseController.UploadFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseController.UploadFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController.UploadListFileAsync(System.String)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController.UploadListFileAsync(System.String)
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: UploadListFileAsync(String)
  nameWithType: BaseController.UploadListFileAsync(String)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController.UploadListFileAsync(System.String)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseController.UploadListFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseController.UploadListFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController.ViewContext
  commentId: P:Swastika.Cms.Mvc.Controllers.BaseController.ViewContext
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: ViewContext
  nameWithType: BaseController.ViewContext
  fullName: Swastika.Cms.Mvc.Controllers.BaseController.ViewContext
- uid: Swastika.Cms.Mvc.Controllers.BaseController.CurrentLanguage
  commentId: P:Swastika.Cms.Mvc.Controllers.BaseController.CurrentLanguage
  parent: Swastika.Cms.Mvc.Controllers.BaseController
  isExternal: true
  name: CurrentLanguage
  nameWithType: BaseController.CurrentLanguage
  fullName: Swastika.Cms.Mvc.Controllers.BaseController.CurrentLanguage
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Cms.Mvc.Controllers
  commentId: N:Swastika.Cms.Mvc.Controllers
  isExternal: true
  name: Swastika.Cms.Mvc.Controllers
  nameWithType: Swastika.Cms.Mvc.Controllers
  fullName: Swastika.Cms.Mvc.Controllers
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor*
  commentId: Overload:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.#ctor
  isExternal: true
  name: PortalController
  nameWithType: PortalController.PortalController
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.PortalController
- uid: Microsoft.AspNetCore.Hosting.IHostingEnvironment
  isExternal: true
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IHostingEnvironment
- uid: Microsoft.Extensions.Configuration.IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}
  commentId: '!:Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}'
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  name: UserManager<ApplicationUser>
  nameWithType: UserManager<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<Swastika.Identity.Models.ApplicationUser>
  nameWithType.vb: UserManager(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of Swastika.Identity.Models.ApplicationUser)
  name.vb: UserManager(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole}
  commentId: '!:Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole}'
  definition: Microsoft.AspNetCore.Identity.RoleManager`1
  name: RoleManager<IdentityRole>
  nameWithType: RoleManager<IdentityRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>
  nameWithType.vb: RoleManager(Of IdentityRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole)
  name.vb: RoleManager(Of IdentityRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.IdentityRole
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.IdentityRole
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: true
  name: UserManager<>
  nameWithType: UserManager<>
  fullName: Microsoft.AspNetCore.Identity.UserManager<>
  nameWithType.vb: UserManager(Of )
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of )
  name.vb: UserManager(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.RoleManager`1
  isExternal: true
  name: RoleManager<>
  nameWithType: RoleManager<>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<>
  nameWithType.vb: RoleManager(Of )
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of )
  name.vb: RoleManager(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index*
  commentId: Overload:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index
  isExternal: true
  name: Index
  nameWithType: PortalController.Index
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Index
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  isExternal: true
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init*
  commentId: Overload:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init
  isExternal: true
  name: Init
  nameWithType: PortalController.Init
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Init
- uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search*
  commentId: Overload:Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search
  isExternal: true
  name: Search
  nameWithType: PortalController.Search
  fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController.Search
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Swastika.Cms.Lib.SWCmsConstants.SearchType
  commentId: T:Swastika.Cms.Lib.SWCmsConstants.SearchType
  parent: Swastika.Cms.Lib
  isExternal: true
  name: SWCmsConstants.SearchType
  nameWithType: SWCmsConstants.SearchType
  fullName: Swastika.Cms.Lib.SWCmsConstants.SearchType
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
  commentId: '!:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}'
  definition: System.Threading.Tasks.Task`1
  name: Task<IActionResult>
  nameWithType: Task<IActionResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>
  nameWithType.vb: Task(Of IActionResult)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.IActionResult)
  name.vb: Task(Of IActionResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.IActionResult
    name: IActionResult
    nameWithType: IActionResult
    fullName: Microsoft.AspNetCore.Mvc.IActionResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.IActionResult
    name: IActionResult
    nameWithType: IActionResult
    fullName: Microsoft.AspNetCore.Mvc.IActionResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib
  commentId: N:Swastika.Cms.Lib
  isExternal: true
  name: Swastika.Cms.Lib
  nameWithType: Swastika.Cms.Lib
  fullName: Swastika.Cms.Lib
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
