### YamlMime:ManagedReference
items:
- uid: Swastika.Domain.Core.Interfaces.IUser
  commentId: T:Swastika.Domain.Core.Interfaces.IUser
  id: IUser
  parent: Swastika.Domain.Core.Interfaces
  children:
  - Swastika.Domain.Core.Interfaces.IUser.GetClaimsIdentity
  - Swastika.Domain.Core.Interfaces.IUser.IsAuthenticated
  - Swastika.Domain.Core.Interfaces.IUser.Name
  langs:
  - csharp
  - vb
  name: IUser
  nameWithType: IUser
  fullName: Swastika.Domain.Core.Interfaces.IUser
  type: Interface
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.Interfaces
  syntax:
    content: public interface IUser
    content.vb: Public Interface IUser
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Swastika.Domain.Core.Interfaces.IUser.IsAuthenticated
  commentId: M:Swastika.Domain.Core.Interfaces.IUser.IsAuthenticated
  id: IsAuthenticated
  parent: Swastika.Domain.Core.Interfaces.IUser
  langs:
  - csharp
  - vb
  name: IsAuthenticated()
  nameWithType: IUser.IsAuthenticated()
  fullName: Swastika.Domain.Core.Interfaces.IUser.IsAuthenticated()
  type: Method
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.Interfaces
  syntax:
    content: bool IsAuthenticated()
    return:
      type: System.Boolean
    content.vb: Function IsAuthenticated As Boolean
  overload: Swastika.Domain.Core.Interfaces.IUser.IsAuthenticated*
- uid: Swastika.Domain.Core.Interfaces.IUser.GetClaimsIdentity
  commentId: M:Swastika.Domain.Core.Interfaces.IUser.GetClaimsIdentity
  id: GetClaimsIdentity
  parent: Swastika.Domain.Core.Interfaces.IUser
  langs:
  - csharp
  - vb
  name: GetClaimsIdentity()
  nameWithType: IUser.GetClaimsIdentity()
  fullName: Swastika.Domain.Core.Interfaces.IUser.GetClaimsIdentity()
  type: Method
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.Interfaces
  syntax:
    content: IEnumerable<Claim> GetClaimsIdentity()
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
    content.vb: Function GetClaimsIdentity As IEnumerable(Of Claim)
  overload: Swastika.Domain.Core.Interfaces.IUser.GetClaimsIdentity*
- uid: Swastika.Domain.Core.Interfaces.IUser.Name
  commentId: P:Swastika.Domain.Core.Interfaces.IUser.Name
  id: Name
  parent: Swastika.Domain.Core.Interfaces.IUser
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IUser.Name
  fullName: Swastika.Domain.Core.Interfaces.IUser.Name
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.Interfaces
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Swastika.Domain.Core.Interfaces.IUser.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Swastika.Domain.Core.Interfaces
  commentId: N:Swastika.Domain.Core.Interfaces
  isExternal: true
  name: Swastika.Domain.Core.Interfaces
  nameWithType: Swastika.Domain.Core.Interfaces
  fullName: Swastika.Domain.Core.Interfaces
- uid: Swastika.Domain.Core.Interfaces.IUser.IsAuthenticated*
  commentId: Overload:Swastika.Domain.Core.Interfaces.IUser.IsAuthenticated
  isExternal: true
  name: IsAuthenticated
  nameWithType: IUser.IsAuthenticated
  fullName: Swastika.Domain.Core.Interfaces.IUser.IsAuthenticated
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Domain.Core.Interfaces.IUser.GetClaimsIdentity*
  commentId: Overload:Swastika.Domain.Core.Interfaces.IUser.GetClaimsIdentity
  isExternal: true
  name: GetClaimsIdentity
  nameWithType: IUser.GetClaimsIdentity
  fullName: Swastika.Domain.Core.Interfaces.IUser.GetClaimsIdentity
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  commentId: '!:System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  nameWithType.vb: IEnumerable(Of Claim)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)
  name.vb: IEnumerable(Of Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.Interfaces.IUser.Name*
  commentId: Overload:Swastika.Domain.Core.Interfaces.IUser.Name
  isExternal: true
  name: Name
  nameWithType: IUser.Name
  fullName: Swastika.Domain.Core.Interfaces.IUser.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
