### YamlMime:ManagedReference
items:
- uid: Swastka.Cms.Api.Controllers.BaseApiController
  commentId: T:Swastka.Cms.Api.Controllers.BaseApiController
  id: BaseApiController
  parent: Swastka.Cms.Api.Controllers
  children:
  - Swastka.Cms.Api.Controllers.BaseApiController.#ctor
  - Swastka.Cms.Api.Controllers.BaseApiController._domain
  - Swastka.Cms.Api.Controllers.BaseApiController._lang
  - Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  - Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  - Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  - Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  - Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  - Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  - Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  langs:
  - csharp
  - vb
  name: BaseApiController
  nameWithType: BaseApiController
  fullName: Swastka.Cms.Api.Controllers.BaseApiController
  type: Class
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: 'public class BaseApiController : Controller'
    content.vb: >-
      Public Class BaseApiController
          Inherits Controller
  inheritance:
  - System.Object
  derivedClasses:
  - Swastika.Cms.Api.Controllers.ApiAccountController
  - Swastka.Cms.Api.Controllers.ApiArticleController
  - Swastka.Cms.Api.Controllers.ApiCategoryController
  - Swastka.Cms.Api.Controllers.ApiConfigurationController
  - Swastka.Cms.Api.Controllers.ApiCultureController
  - Swastka.Cms.Api.Controllers.ApiCustomerController
  - Swastka.Cms.Api.Controllers.ApiFileController
  - Swastka.Cms.Api.Controllers.ApiLanguageController
  - Swastka.Cms.Api.Controllers.ApiMediaController
  - Swastka.Cms.Api.Controllers.ApiModuleController
  - Swastka.Cms.Api.Controllers.ApiModuleDataController
  - Swastka.Cms.Api.Controllers.ApiNavigationController
  - Swastka.Cms.Api.Controllers.ApiPortalController
  - Swastka.Cms.Api.Controllers.ApiProductController
  - Swastka.Cms.Api.Controllers.ApiRoleController
  - Swastka.Cms.Api.Controllers.ApiTemplateController
  - Swastka.Cms.Api.Controllers.ApiThemeController
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastka.Cms.Api.Controllers.BaseApiController._domain
  commentId: F:Swastka.Cms.Api.Controllers.BaseApiController._domain
  id: _domain
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: _domain
  nameWithType: BaseApiController._domain
  fullName: Swastka.Cms.Api.Controllers.BaseApiController._domain
  type: Field
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected string _domain
    return:
      type: System.String
    content.vb: Protected _domain As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Swastka.Cms.Api.Controllers.BaseApiController._lang
  commentId: F:Swastka.Cms.Api.Controllers.BaseApiController._lang
  id: _lang
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: _lang
  nameWithType: BaseApiController._lang
  fullName: Swastka.Cms.Api.Controllers.BaseApiController._lang
  type: Field
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected string _lang
    return:
      type: System.String
    content.vb: Protected _lang As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Swastka.Cms.Api.Controllers.BaseApiController.#ctor
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.#ctor
  id: '#ctor'
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: BaseApiController()
  nameWithType: BaseApiController.BaseApiController()
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BaseApiController()
  type: Constructor
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public BaseApiController()
    content.vb: Public Sub New
  overload: Swastka.Cms.Api.Controllers.BaseApiController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  id: BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: BadRequest(ModelStateDictionary)
  nameWithType: BaseApiController.BadRequest(ModelStateDictionary)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public override BadRequestObjectResult BadRequest(ModelStateDictionary modelState)
    parameters:
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    return:
      type: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
    content.vb: Public Overrides Function BadRequest(modelState As ModelStateDictionary) As BadRequestObjectResult
  overload: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  id: BadRequest(System.Object)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: BadRequest(Object)
  nameWithType: BaseApiController.BadRequest(Object)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public override BadRequestObjectResult BadRequest(object error)
    parameters:
    - id: error
      type: System.Object
    return:
      type: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
    content.vb: Public Overrides Function BadRequest(error As Object) As BadRequestObjectResult
  overload: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  id: NotFound(System.Object)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: NotFound(Object)
  nameWithType: BaseApiController.NotFound(Object)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public override NotFoundObjectResult NotFound(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: Microsoft.AspNetCore.Mvc.NotFoundObjectResult
    content.vb: Public Overrides Function NotFound(value As Object) As NotFoundObjectResult
  overload: Swastka.Cms.Api.Controllers.BaseApiController.NotFound*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  id: OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController.OnActionExecuting(ActionExecutingContext)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public override void OnActionExecuting(ActionExecutingContext context)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    content.vb: Public Overrides Sub OnActionExecuting(context As ActionExecutingContext)
  overload: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  id: GetErrorResult(System.String,System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: GetErrorResult(String, String)
  nameWithType: BaseApiController.GetErrorResult(String, String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String, System.String)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected IActionResult GetErrorResult(string responseKey, string errorMsg)
    parameters:
    - id: responseKey
      type: System.String
    - id: errorMsg
      type: System.String
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Protected Function GetErrorResult(responseKey As String, errorMsg As String) As IActionResult
  overload: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  id: GetLanguage
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: GetLanguage()
  nameWithType: BaseApiController.GetLanguage()
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage()
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected void GetLanguage()
    content.vb: Protected Sub GetLanguage
  overload: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  id: GetSuccessResult``1(``0)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController.GetSuccessResult<TResult>(TResult)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>(TResult)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected IActionResult GetSuccessResult<TResult>(TResult data)
    parameters:
    - id: data
      type: '{TResult}'
    typeParameters:
    - id: TResult
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Protected Function GetSuccessResult(Of TResult)(data As TResult) As IActionResult
  overload: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult*
  nameWithType.vb: BaseApiController.GetSuccessResult(Of TResult)(TResult)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
- uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  id: ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: ParseRequestPagingDate(RequestPaging)
  nameWithType: BaseApiController.ParseRequestPagingDate(RequestPaging)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected void ParseRequestPagingDate(RequestPaging request)
    parameters:
    - id: request
      type: Swastika.Domain.Core.ViewModels.RequestPaging
    content.vb: Protected Sub ParseRequestPagingDate(request As RequestPaging)
  overload: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  id: UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseApiController.UploadFileAsync(IFormFile, String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected Task<string> UploadFileAsync(IFormFile file, string folderPath)
    parameters:
    - id: file
      type: Microsoft.AspNetCore.Http.IFormFile
    - id: folderPath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Protected Function UploadFileAsync(file As IFormFile, folderPath As String) As Task(Of String)
  overload: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  id: UploadListFileAsync(System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  langs:
  - csharp
  - vb
  name: UploadListFileAsync(String)
  nameWithType: BaseApiController.UploadListFileAsync(String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected Task<List<string>> UploadListFileAsync(string folderPath)
    parameters:
    - id: folderPath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
    content.vb: Protected Function UploadListFileAsync(folderPath As String) As Task(Of List(Of String))
  overload: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Swastka.Cms.Api.Controllers
  commentId: N:Swastka.Cms.Api.Controllers
  isExternal: true
  name: Swastka.Cms.Api.Controllers
  nameWithType: Swastka.Cms.Api.Controllers
  fullName: Swastka.Cms.Api.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Swastka.Cms.Api.Controllers.BaseApiController.#ctor*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController.#ctor
  isExternal: true
  name: BaseApiController
  nameWithType: BaseApiController.BaseApiController
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BaseApiController
- uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
  isExternal: true
  name: BadRequest
  nameWithType: BaseApiController.BadRequest
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  isExternal: true
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
- uid: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
  isExternal: true
  name: BadRequestObjectResult
  nameWithType: BadRequestObjectResult
  fullName: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
- uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController.NotFound
  isExternal: true
  name: NotFound
  nameWithType: BaseApiController.NotFound
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound
- uid: Microsoft.AspNetCore.Mvc.NotFoundObjectResult
  isExternal: true
  name: NotFoundObjectResult
  nameWithType: NotFoundObjectResult
  fullName: Microsoft.AspNetCore.Mvc.NotFoundObjectResult
- uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting
  isExternal: true
  name: OnActionExecuting
  nameWithType: BaseApiController.OnActionExecuting
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting
- uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
  isExternal: true
  name: ActionExecutingContext
  nameWithType: ActionExecutingContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult
  isExternal: true
  name: GetErrorResult
  nameWithType: BaseApiController.GetErrorResult
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  isExternal: true
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  isExternal: true
  name: GetLanguage
  nameWithType: BaseApiController.GetLanguage
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult
  isExternal: true
  name: GetSuccessResult
  nameWithType: BaseApiController.GetSuccessResult
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate
  isExternal: true
  name: ParseRequestPagingDate
  nameWithType: BaseApiController.ParseRequestPagingDate
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate
- uid: Swastika.Domain.Core.ViewModels.RequestPaging
  commentId: T:Swastika.Domain.Core.ViewModels.RequestPaging
  parent: Swastika.Domain.Core.ViewModels
  isExternal: true
  name: RequestPaging
  nameWithType: RequestPaging
  fullName: Swastika.Domain.Core.ViewModels.RequestPaging
- uid: Swastika.Domain.Core.ViewModels
  commentId: N:Swastika.Domain.Core.ViewModels
  isExternal: true
  name: Swastika.Domain.Core.ViewModels
  nameWithType: Swastika.Domain.Core.ViewModels
  fullName: Swastika.Domain.Core.ViewModels
- uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync
  isExternal: true
  name: UploadFileAsync
  nameWithType: BaseApiController.UploadFileAsync
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync
- uid: Microsoft.AspNetCore.Http.IFormFile
  isExternal: true
  name: IFormFile
  nameWithType: IFormFile
  fullName: Microsoft.AspNetCore.Http.IFormFile
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync
  isExternal: true
  name: UploadListFileAsync
  nameWithType: BaseApiController.UploadListFileAsync
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
  commentId: '!:System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<List<String>>
  nameWithType: Task<List<String>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<System.String>>
  nameWithType.vb: Task(Of List(Of String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of System.String))
  name.vb: Task(Of List(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
