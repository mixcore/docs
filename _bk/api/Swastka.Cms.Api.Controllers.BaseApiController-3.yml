### YamlMime:ManagedReference
items:
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3
  commentId: T:Swastka.Cms.Api.Controllers.BaseApiController`3
  id: BaseApiController`3
  parent: Swastka.Cms.Api.Controllers
  children:
  - Swastka.Cms.Api.Controllers.BaseApiController`3.#ctor
  - Swastka.Cms.Api.Controllers.BaseApiController`3._lang
  - Swastka.Cms.Api.Controllers.BaseApiController`3._repo
  - Swastka.Cms.Api.Controllers.BaseApiController`3.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Swastka.Cms.Api.Controllers.BaseApiController`3.BadRequest(System.Object)
  - Swastka.Cms.Api.Controllers.BaseApiController`3.GetErrorResult(System.String,System.String)
  - Swastka.Cms.Api.Controllers.BaseApiController`3.GetLanguage
  - Swastka.Cms.Api.Controllers.BaseApiController`3.GetSuccessResult``1(``0)
  - Swastka.Cms.Api.Controllers.BaseApiController`3.NotFound(System.Object)
  - Swastka.Cms.Api.Controllers.BaseApiController`3.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Swastka.Cms.Api.Controllers.BaseApiController`3.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  langs:
  - csharp
  - vb
  name: BaseApiController<TDbContext, TModel, TView>
  nameWithType: BaseApiController<TDbContext, TModel, TView>
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>
  type: Class
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: 'public class BaseApiController<TDbContext, TModel, TView> : Controller where TDbContext : DbContext where TModel : class where TView : ViewModelBase<TDbContext, TModel, TView>'
    typeParameters:
    - id: TDbContext
    - id: TModel
    - id: TView
    content.vb: >-
      Public Class BaseApiController(Of TDbContext As DbContext, TModel As Class, TView As ViewModelBase(Of TDbContext, TModel, TView))
          Inherits Controller
  inheritance:
  - System.Object
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView)
  name.vb: BaseApiController(Of TDbContext, TModel, TView)
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3._repo
  commentId: F:Swastka.Cms.Api.Controllers.BaseApiController`3._repo
  id: _repo
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: _repo
  nameWithType: BaseApiController<TDbContext, TModel, TView>._repo
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>._repo
  type: Field
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected readonly DefaultRepository<TDbContext, TModel, TView> _repo
    return:
      type: Swastika.Domain.Data.Repository.DefaultRepository{{TDbContext},{TModel},{TView}}
    content.vb: Protected ReadOnly _repo As DefaultRepository(Of TDbContext, TModel, TView)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView)._repo
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView)._repo
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3._lang
  commentId: F:Swastka.Cms.Api.Controllers.BaseApiController`3._lang
  id: _lang
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: _lang
  nameWithType: BaseApiController<TDbContext, TModel, TView>._lang
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>._lang
  type: Field
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected string _lang
    return:
      type: System.String
    content.vb: Protected _lang As String
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView)._lang
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView)._lang
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.#ctor
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController`3.#ctor
  id: '#ctor'
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: BaseApiController()
  nameWithType: BaseApiController<TDbContext, TModel, TView>.BaseApiController()
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BaseApiController()
  type: Constructor
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public BaseApiController()
    content.vb: Public Sub New
  overload: Swastka.Cms.Api.Controllers.BaseApiController`3.#ctor*
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).BaseApiController()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BaseApiController()
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController`3.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  id: BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: BadRequest(ModelStateDictionary)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest(ModelStateDictionary)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public override BadRequestObjectResult BadRequest(ModelStateDictionary modelState)
    parameters:
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    return:
      type: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
    content.vb: Public Overrides Function BadRequest(modelState As ModelStateDictionary) As BadRequestObjectResult
  overload: Swastka.Cms.Api.Controllers.BaseApiController`3.BadRequest*
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).BadRequest(ModelStateDictionary)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.BadRequest(System.Object)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController`3.BadRequest(System.Object)
  id: BadRequest(System.Object)
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: BadRequest(Object)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest(Object)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest(System.Object)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public override BadRequestObjectResult BadRequest(object error)
    parameters:
    - id: error
      type: System.Object
    return:
      type: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
    content.vb: Public Overrides Function BadRequest(error As Object) As BadRequestObjectResult
  overload: Swastka.Cms.Api.Controllers.BaseApiController`3.BadRequest*
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).BadRequest(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest(System.Object)
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.NotFound(System.Object)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController`3.NotFound(System.Object)
  id: NotFound(System.Object)
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: NotFound(Object)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.NotFound(Object)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.NotFound(System.Object)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public override NotFoundObjectResult NotFound(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: Microsoft.AspNetCore.Mvc.NotFoundObjectResult
    content.vb: Public Overrides Function NotFound(value As Object) As NotFoundObjectResult
  overload: Swastka.Cms.Api.Controllers.BaseApiController`3.NotFound*
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).NotFound(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).NotFound(System.Object)
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController`3.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  id: OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.OnActionExecuting(ActionExecutingContext)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public override void OnActionExecuting(ActionExecutingContext context)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    content.vb: Public Overrides Sub OnActionExecuting(context As ActionExecutingContext)
  overload: Swastka.Cms.Api.Controllers.BaseApiController`3.OnActionExecuting*
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting(ActionExecutingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.GetErrorResult(System.String,System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController`3.GetErrorResult(System.String,System.String)
  id: GetErrorResult(System.String,System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: GetErrorResult(String, String)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetErrorResult(String, String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetErrorResult(System.String, System.String)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected IActionResult GetErrorResult(string responseKey, string errorMsg)
    parameters:
    - id: responseKey
      type: System.String
    - id: errorMsg
      type: System.String
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Protected Function GetErrorResult(responseKey As String, errorMsg As String) As IActionResult
  overload: Swastka.Cms.Api.Controllers.BaseApiController`3.GetErrorResult*
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetErrorResult(String, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetErrorResult(System.String, System.String)
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.GetLanguage
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController`3.GetLanguage
  id: GetLanguage
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: GetLanguage()
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetLanguage()
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetLanguage()
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected void GetLanguage()
    content.vb: Protected Sub GetLanguage
  overload: Swastka.Cms.Api.Controllers.BaseApiController`3.GetLanguage*
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetLanguage()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetLanguage()
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.GetSuccessResult``1(``0)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController`3.GetSuccessResult``1(``0)
  id: GetSuccessResult``1(``0)
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetSuccessResult<TResult>(TResult)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetSuccessResult<TResult>(TResult)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected IActionResult GetSuccessResult<TResult>(TResult data)
    parameters:
    - id: data
      type: '{TResult}'
    typeParameters:
    - id: TResult
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Protected Function GetSuccessResult(Of TResult)(data As TResult) As IActionResult
  overload: Swastka.Cms.Api.Controllers.BaseApiController`3.GetSuccessResult*
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult(Of TResult)(TResult)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController`3.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  id: ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  parent: Swastka.Cms.Api.Controllers.BaseApiController`3
  langs:
  - csharp
  - vb
  name: ParseRequestPagingDate(RequestPaging)
  nameWithType: BaseApiController<TDbContext, TModel, TView>.ParseRequestPagingDate(RequestPaging)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: protected void ParseRequestPagingDate(RequestPaging request)
    parameters:
    - id: request
      type: Swastika.Domain.Core.ViewModels.RequestPaging
    content.vb: Protected Sub ParseRequestPagingDate(request As RequestPaging)
  overload: Swastka.Cms.Api.Controllers.BaseApiController`3.ParseRequestPagingDate*
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).ParseRequestPagingDate(RequestPaging)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
references:
- uid: Swastka.Cms.Api.Controllers
  commentId: N:Swastka.Cms.Api.Controllers
  isExternal: true
  name: Swastka.Cms.Api.Controllers
  nameWithType: Swastka.Cms.Api.Controllers
  fullName: Swastka.Cms.Api.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Domain.Data.Repository.DefaultRepository{{TDbContext},{TModel},{TView}}
  commentId: T:Swastika.Domain.Data.Repository.DefaultRepository{`0,`1,`2}
  parent: Swastika.Domain.Data.Repository
  definition: Swastika.Domain.Data.Repository.DefaultRepository`3
  name: DefaultRepository<TDbContext, TModel, TView>
  nameWithType: DefaultRepository<TDbContext, TModel, TView>
  fullName: Swastika.Domain.Data.Repository.DefaultRepository<TDbContext, TModel, TView>
  nameWithType.vb: DefaultRepository(Of TDbContext, TModel, TView)
  fullName.vb: Swastika.Domain.Data.Repository.DefaultRepository(Of TDbContext, TModel, TView)
  name.vb: DefaultRepository(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Swastika.Domain.Data.Repository.DefaultRepository`3
    name: DefaultRepository
    nameWithType: DefaultRepository
    fullName: Swastika.Domain.Data.Repository.DefaultRepository
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Data.Repository.DefaultRepository`3
    name: DefaultRepository
    nameWithType: DefaultRepository
    fullName: Swastika.Domain.Data.Repository.DefaultRepository
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.Repository.DefaultRepository`3
  commentId: T:Swastika.Domain.Data.Repository.DefaultRepository`3
  parent: Swastika.Domain.Data.Repository
  isExternal: true
  name: DefaultRepository<TDbContext, TModel, TView>
  nameWithType: DefaultRepository<TDbContext, TModel, TView>
  fullName: Swastika.Domain.Data.Repository.DefaultRepository<TDbContext, TModel, TView>
  nameWithType.vb: DefaultRepository(Of TDbContext, TModel, TView)
  fullName.vb: Swastika.Domain.Data.Repository.DefaultRepository(Of TDbContext, TModel, TView)
  name.vb: DefaultRepository(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Swastika.Domain.Data.Repository.DefaultRepository`3
    name: DefaultRepository
    nameWithType: DefaultRepository
    fullName: Swastika.Domain.Data.Repository.DefaultRepository
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Data.Repository.DefaultRepository`3
    name: DefaultRepository
    nameWithType: DefaultRepository
    fullName: Swastika.Domain.Data.Repository.DefaultRepository
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.Repository
  commentId: N:Swastika.Domain.Data.Repository
  isExternal: true
  name: Swastika.Domain.Data.Repository
  nameWithType: Swastika.Domain.Data.Repository
  fullName: Swastika.Domain.Data.Repository
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.#ctor*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController`3.#ctor
  isExternal: true
  name: BaseApiController
  nameWithType: BaseApiController<TDbContext, TModel, TView>.BaseApiController
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BaseApiController
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).BaseApiController
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BaseApiController
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.BadRequest*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController`3.BadRequest
  isExternal: true
  name: BadRequest
  nameWithType: BaseApiController<TDbContext, TModel, TView>.BadRequest
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.BadRequest
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).BadRequest
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).BadRequest
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  isExternal: true
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
- uid: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
  isExternal: true
  name: BadRequestObjectResult
  nameWithType: BadRequestObjectResult
  fullName: Microsoft.AspNetCore.Mvc.BadRequestObjectResult
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.NotFound*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController`3.NotFound
  isExternal: true
  name: NotFound
  nameWithType: BaseApiController<TDbContext, TModel, TView>.NotFound
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.NotFound
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).NotFound
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).NotFound
- uid: Microsoft.AspNetCore.Mvc.NotFoundObjectResult
  isExternal: true
  name: NotFoundObjectResult
  nameWithType: NotFoundObjectResult
  fullName: Microsoft.AspNetCore.Mvc.NotFoundObjectResult
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.OnActionExecuting*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController`3.OnActionExecuting
  isExternal: true
  name: OnActionExecuting
  nameWithType: BaseApiController<TDbContext, TModel, TView>.OnActionExecuting
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.OnActionExecuting
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).OnActionExecuting
- uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
  isExternal: true
  name: ActionExecutingContext
  nameWithType: ActionExecutingContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.GetErrorResult*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController`3.GetErrorResult
  isExternal: true
  name: GetErrorResult
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetErrorResult
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetErrorResult
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetErrorResult
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetErrorResult
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  isExternal: true
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.GetLanguage*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController`3.GetLanguage
  isExternal: true
  name: GetLanguage
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetLanguage
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetLanguage
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetLanguage
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetLanguage
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.GetSuccessResult*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController`3.GetSuccessResult
  isExternal: true
  name: GetSuccessResult
  nameWithType: BaseApiController<TDbContext, TModel, TView>.GetSuccessResult
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.GetSuccessResult
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).GetSuccessResult
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Swastka.Cms.Api.Controllers.BaseApiController`3.ParseRequestPagingDate*
  commentId: Overload:Swastka.Cms.Api.Controllers.BaseApiController`3.ParseRequestPagingDate
  isExternal: true
  name: ParseRequestPagingDate
  nameWithType: BaseApiController<TDbContext, TModel, TView>.ParseRequestPagingDate
  fullName: Swastka.Cms.Api.Controllers.BaseApiController<TDbContext, TModel, TView>.ParseRequestPagingDate
  nameWithType.vb: BaseApiController(Of TDbContext, TModel, TView).ParseRequestPagingDate
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController(Of TDbContext, TModel, TView).ParseRequestPagingDate
- uid: Swastika.Domain.Core.ViewModels.RequestPaging
  commentId: T:Swastika.Domain.Core.ViewModels.RequestPaging
  parent: Swastika.Domain.Core.ViewModels
  isExternal: true
  name: RequestPaging
  nameWithType: RequestPaging
  fullName: Swastika.Domain.Core.ViewModels.RequestPaging
- uid: Swastika.Domain.Core.ViewModels
  commentId: N:Swastika.Domain.Core.ViewModels
  isExternal: true
  name: Swastika.Domain.Core.ViewModels
  nameWithType: Swastika.Domain.Core.ViewModels
  fullName: Swastika.Domain.Core.ViewModels
