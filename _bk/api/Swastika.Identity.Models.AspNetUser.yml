### YamlMime:ManagedReference
items:
- uid: Swastika.Identity.Models.AspNetUser
  commentId: T:Swastika.Identity.Models.AspNetUser
  id: AspNetUser
  parent: Swastika.Identity.Models
  children:
  - Swastika.Identity.Models.AspNetUser.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)
  - Swastika.Identity.Models.AspNetUser.GetClaimsIdentity
  - Swastika.Identity.Models.AspNetUser.IsAuthenticated
  - Swastika.Identity.Models.AspNetUser.Name
  langs:
  - csharp
  - vb
  name: AspNetUser
  nameWithType: AspNetUser
  fullName: Swastika.Identity.Models.AspNetUser
  type: Class
  source:
    path: Swastika.Identity
    isExternal: true
  assemblies:
  - Swastika.Identity
  namespace: Swastika.Identity.Models
  syntax:
    content: 'public class AspNetUser : Object, IUser'
    content.vb: >-
      Public Class AspNetUser
          Inherits Object
          Implements IUser
  inheritance:
  - System.Object
  implements:
  - Swastika.Identity.Interfaces.IUser
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastika.Identity.Models.AspNetUser.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)
  commentId: M:Swastika.Identity.Models.AspNetUser.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)
  id: '#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)'
  parent: Swastika.Identity.Models.AspNetUser
  langs:
  - csharp
  - vb
  name: AspNetUser(IHttpContextAccessor)
  nameWithType: AspNetUser.AspNetUser(IHttpContextAccessor)
  fullName: Swastika.Identity.Models.AspNetUser.AspNetUser(Microsoft.AspNetCore.Http.IHttpContextAccessor)
  type: Constructor
  source:
    path: Swastika.Identity
    isExternal: true
  assemblies:
  - Swastika.Identity
  namespace: Swastika.Identity.Models
  syntax:
    content: public AspNetUser(IHttpContextAccessor accessor)
    parameters:
    - id: accessor
      type: Microsoft.AspNetCore.Http.IHttpContextAccessor
    content.vb: Public Sub New(accessor As IHttpContextAccessor)
  overload: Swastika.Identity.Models.AspNetUser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Identity.Models.AspNetUser.IsAuthenticated
  commentId: M:Swastika.Identity.Models.AspNetUser.IsAuthenticated
  id: IsAuthenticated
  parent: Swastika.Identity.Models.AspNetUser
  langs:
  - csharp
  - vb
  name: IsAuthenticated()
  nameWithType: AspNetUser.IsAuthenticated()
  fullName: Swastika.Identity.Models.AspNetUser.IsAuthenticated()
  type: Method
  source:
    path: Swastika.Identity
    isExternal: true
  assemblies:
  - Swastika.Identity
  namespace: Swastika.Identity.Models
  syntax:
    content: public bool IsAuthenticated()
    return:
      type: System.Boolean
    content.vb: Public Function IsAuthenticated As Boolean
  overload: Swastika.Identity.Models.AspNetUser.IsAuthenticated*
  implements:
  - Swastika.Identity.Interfaces.IUser.IsAuthenticated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Identity.Models.AspNetUser.GetClaimsIdentity
  commentId: M:Swastika.Identity.Models.AspNetUser.GetClaimsIdentity
  id: GetClaimsIdentity
  parent: Swastika.Identity.Models.AspNetUser
  langs:
  - csharp
  - vb
  name: GetClaimsIdentity()
  nameWithType: AspNetUser.GetClaimsIdentity()
  fullName: Swastika.Identity.Models.AspNetUser.GetClaimsIdentity()
  type: Method
  source:
    path: Swastika.Identity
    isExternal: true
  assemblies:
  - Swastika.Identity
  namespace: Swastika.Identity.Models
  syntax:
    content: public IEnumerable<Claim> GetClaimsIdentity()
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
    content.vb: Public Function GetClaimsIdentity As IEnumerable(Of Claim)
  overload: Swastika.Identity.Models.AspNetUser.GetClaimsIdentity*
  implements:
  - Swastika.Identity.Interfaces.IUser.GetClaimsIdentity
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Identity.Models.AspNetUser.Name
  commentId: P:Swastika.Identity.Models.AspNetUser.Name
  id: Name
  parent: Swastika.Identity.Models.AspNetUser
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AspNetUser.Name
  fullName: Swastika.Identity.Models.AspNetUser.Name
  type: Property
  source:
    path: Swastika.Identity
    isExternal: true
  assemblies:
  - Swastika.Identity
  namespace: Swastika.Identity.Models
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Swastika.Identity.Models.AspNetUser.Name*
  implements:
  - Swastika.Identity.Interfaces.IUser.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Swastika.Identity.Models
  commentId: N:Swastika.Identity.Models
  isExternal: true
  name: Swastika.Identity.Models
  nameWithType: Swastika.Identity.Models
  fullName: Swastika.Identity.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastika.Identity.Interfaces.IUser
  commentId: T:Swastika.Identity.Interfaces.IUser
  parent: Swastika.Identity.Interfaces
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Swastika.Identity.Interfaces.IUser
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Identity.Interfaces
  commentId: N:Swastika.Identity.Interfaces
  isExternal: true
  name: Swastika.Identity.Interfaces
  nameWithType: Swastika.Identity.Interfaces
  fullName: Swastika.Identity.Interfaces
- uid: Swastika.Identity.Models.AspNetUser.#ctor*
  commentId: Overload:Swastika.Identity.Models.AspNetUser.#ctor
  isExternal: true
  name: AspNetUser
  nameWithType: AspNetUser.AspNetUser
  fullName: Swastika.Identity.Models.AspNetUser.AspNetUser
- uid: Microsoft.AspNetCore.Http.IHttpContextAccessor
  commentId: '!:Microsoft.AspNetCore.Http.IHttpContextAccessor'
  isExternal: true
  name: IHttpContextAccessor
  nameWithType: IHttpContextAccessor
  fullName: Microsoft.AspNetCore.Http.IHttpContextAccessor
- uid: Swastika.Identity.Models.AspNetUser.IsAuthenticated*
  commentId: Overload:Swastika.Identity.Models.AspNetUser.IsAuthenticated
  isExternal: true
  name: IsAuthenticated
  nameWithType: AspNetUser.IsAuthenticated
  fullName: Swastika.Identity.Models.AspNetUser.IsAuthenticated
- uid: Swastika.Identity.Interfaces.IUser.IsAuthenticated
  commentId: M:Swastika.Identity.Interfaces.IUser.IsAuthenticated
  parent: Swastika.Identity.Interfaces.IUser
  isExternal: true
  name: IsAuthenticated()
  nameWithType: IUser.IsAuthenticated()
  fullName: Swastika.Identity.Interfaces.IUser.IsAuthenticated()
  spec.csharp:
  - uid: Swastika.Identity.Interfaces.IUser.IsAuthenticated
    name: IsAuthenticated
    nameWithType: IUser.IsAuthenticated
    fullName: Swastika.Identity.Interfaces.IUser.IsAuthenticated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Identity.Interfaces.IUser.IsAuthenticated
    name: IsAuthenticated
    nameWithType: IUser.IsAuthenticated
    fullName: Swastika.Identity.Interfaces.IUser.IsAuthenticated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Swastika.Identity.Models.AspNetUser.GetClaimsIdentity*
  commentId: Overload:Swastika.Identity.Models.AspNetUser.GetClaimsIdentity
  isExternal: true
  name: GetClaimsIdentity
  nameWithType: AspNetUser.GetClaimsIdentity
  fullName: Swastika.Identity.Models.AspNetUser.GetClaimsIdentity
- uid: Swastika.Identity.Interfaces.IUser.GetClaimsIdentity
  commentId: M:Swastika.Identity.Interfaces.IUser.GetClaimsIdentity
  parent: Swastika.Identity.Interfaces.IUser
  isExternal: true
  name: GetClaimsIdentity()
  nameWithType: IUser.GetClaimsIdentity()
  fullName: Swastika.Identity.Interfaces.IUser.GetClaimsIdentity()
  spec.csharp:
  - uid: Swastika.Identity.Interfaces.IUser.GetClaimsIdentity
    name: GetClaimsIdentity
    nameWithType: IUser.GetClaimsIdentity
    fullName: Swastika.Identity.Interfaces.IUser.GetClaimsIdentity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Identity.Interfaces.IUser.GetClaimsIdentity
    name: GetClaimsIdentity
    nameWithType: IUser.GetClaimsIdentity
    fullName: Swastika.Identity.Interfaces.IUser.GetClaimsIdentity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  commentId: '!:System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  nameWithType.vb: IEnumerable(Of Claim)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)
  name.vb: IEnumerable(Of Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Identity.Models.AspNetUser.Name*
  commentId: Overload:Swastika.Identity.Models.AspNetUser.Name
  isExternal: true
  name: Name
  nameWithType: AspNetUser.Name
  fullName: Swastika.Identity.Models.AspNetUser.Name
- uid: Swastika.Identity.Interfaces.IUser.Name
  commentId: P:Swastika.Identity.Interfaces.IUser.Name
  parent: Swastika.Identity.Interfaces.IUser
  isExternal: true
  name: Name
  nameWithType: IUser.Name
  fullName: Swastika.Identity.Interfaces.IUser.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
