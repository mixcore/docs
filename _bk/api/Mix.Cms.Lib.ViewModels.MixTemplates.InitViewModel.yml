### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  id: InitViewModel
  parent: Mix.Cms.Lib.ViewModels.MixTemplates
  children:
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.#ctor
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.AssetFolder
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Content
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.CreatedDateTime
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Extension
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileFolder
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileName
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FolderType
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Id
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.LastModified
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Layout
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.MobileContent
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ModifiedBy
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Scripts
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SpaContent
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Styles
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplateFolder
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplatePath
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeId
  - Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeName
  langs:
  - csharp
  - vb
  name: InitViewModel
  nameWithType: InitViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  type: Class
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: 'public class InitViewModel : ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>, IViewModel'
    content.vb: >-
      Public Class InitViewModel
          Inherits ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel)
          Implements IViewModel
  inheritance:
  - System.Object
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  implements:
  - Mix.Domain.Data.ViewModels.IViewModel
  inheritedMembers:
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Repository
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.InitModel
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ExpandViewAsync(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.InitViewAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ParseViewAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.CloneSubModels(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Exception
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.IsClone
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.IsLazyLoad
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Cultures
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Mapper
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Model
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ModelMapper
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Priority
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Specificulture
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Errors
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.IsValid
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.#ctor
  commentId: M:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: InitViewModel()
  nameWithType: InitViewModel.InitViewModel()
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.InitViewModel()
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public InitViewModel()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: '#ctor(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)'
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: InitViewModel(MixTemplate, MixCmsContext, IDbContextTransaction)
  nameWithType: InitViewModel.InitViewModel(MixTemplate, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.InitViewModel(Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public InitViewModel(MixTemplate model, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: model
      type: Mix.Cms.Lib.Models.Cms.MixTemplate
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Sub New(model As MixTemplate, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: ExpandView(MixCmsContext, IDbContextTransaction)
  nameWithType: InitViewModel.ExpandView(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public override void ExpandView(MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Overrides Sub ExpandView(_context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overridden: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: ParseModel(MixCmsContext, IDbContextTransaction)
  nameWithType: InitViewModel.ParseModel(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public override MixTemplate ParseModel(MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: Mix.Cms.Lib.Models.Cms.MixTemplate
    content.vb: Public Overrides Function ParseModel(_context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As MixTemplate
  overridden: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ParseModel*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: InitViewModel.RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public override RepositoryResponse<MixTemplate> RemoveModel(bool isRemoveRelatedModels = false, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: isRemoveRelatedModels
      type: System.Boolean
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.Models.Cms.MixTemplate}
    content.vb: Public Overrides Function RemoveModel(isRemoveRelatedModels As Boolean = False, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As RepositoryResponse(Of MixTemplate)
  overridden: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModel*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: SaveSubModels(MixTemplate, MixCmsContext, IDbContextTransaction)
  nameWithType: InitViewModel.SaveSubModels(MixTemplate, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public override RepositoryResponse<bool> SaveSubModels(MixTemplate parent, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: parent
      type: Mix.Cms.Lib.Models.Cms.MixTemplate
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
    content.vb: Public Overrides Function SaveSubModels(parent As MixTemplate, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As RepositoryResponse(Of Boolean)
  overridden: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModels*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: InitViewModel.RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public override Task<RepositoryResponse<MixTemplate>> RemoveModelAsync(bool isRemoveRelatedModels = false, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: isRemoveRelatedModels
      type: System.Boolean
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.Models.Cms.MixTemplate}}
    content.vb: Public Overrides Function RemoveModelAsync(isRemoveRelatedModels As Boolean = False, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of MixTemplate))
  overridden: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModelAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: SaveSubModelsAsync(MixTemplate, MixCmsContext, IDbContextTransaction)
  nameWithType: InitViewModel.SaveSubModelsAsync(MixTemplate, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public override Task<RepositoryResponse<bool>> SaveSubModelsAsync(MixTemplate parent, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: parent
      type: Mix.Cms.Lib.Models.Cms.MixTemplate
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
    content.vb: Public Overrides Function SaveSubModelsAsync(parent As MixTemplate, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of Boolean))
  overridden: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModelsAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Id
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Id
  id: Id
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: InitViewModel.Id
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Id
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeId
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeId
  id: ThemeId
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: ThemeId
  nameWithType: InitViewModel.ThemeId
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeId
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public int ThemeId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ThemeId As Integer
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeName
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeName
  id: ThemeName
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: ThemeName
  nameWithType: InitViewModel.ThemeName
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeName
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string ThemeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ThemeName As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FolderType
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FolderType
  id: FolderType
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: FolderType
  nameWithType: InitViewModel.FolderType
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FolderType
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string FolderType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FolderType As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FolderType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileFolder
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileFolder
  id: FileFolder
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: FileFolder
  nameWithType: InitViewModel.FileFolder
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileFolder
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string FileFolder { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileFolder As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileFolder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileName
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileName
  id: FileName
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: InitViewModel.FileName
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileName
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string FileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileName As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Extension
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Extension
  id: Extension
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: InitViewModel.Extension
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Extension
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string Extension { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Extension As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Extension*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Content
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Content
  id: Content
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: InitViewModel.Content
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Content
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Content As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.MobileContent
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.MobileContent
  id: MobileContent
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: MobileContent
  nameWithType: InitViewModel.MobileContent
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.MobileContent
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string MobileContent { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MobileContent As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.MobileContent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SpaContent
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SpaContent
  id: SpaContent
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: SpaContent
  nameWithType: InitViewModel.SpaContent
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SpaContent
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string SpaContent { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SpaContent As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SpaContent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Scripts
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Scripts
  id: Scripts
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: Scripts
  nameWithType: InitViewModel.Scripts
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Scripts
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string Scripts { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Scripts As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Scripts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Styles
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Styles
  id: Styles
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: Styles
  nameWithType: InitViewModel.Styles
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Styles
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string Styles { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Styles As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Styles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.CreatedDateTime
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: InitViewModel.CreatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.CreatedDateTime
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDateTime As DateTime
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.CreatedDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.LastModified
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.LastModified
  id: LastModified
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: InitViewModel.LastModified
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.LastModified
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public Nullable<DateTime> LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property LastModified As Nullable(Of DateTime)
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.LastModified*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ModifiedBy
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ModifiedBy
  id: ModifiedBy
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: ModifiedBy
  nameWithType: InitViewModel.ModifiedBy
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ModifiedBy
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string ModifiedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModifiedBy As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ModifiedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Layout
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Layout
  id: Layout
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: Layout
  nameWithType: InitViewModel.Layout
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Layout
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string Layout { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Layout As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Layout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.AssetFolder
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.AssetFolder
  id: AssetFolder
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: AssetFolder
  nameWithType: InitViewModel.AssetFolder
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.AssetFolder
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string AssetFolder { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AssetFolder As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.AssetFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplateFolder
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplateFolder
  id: TemplateFolder
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: TemplateFolder
  nameWithType: InitViewModel.TemplateFolder
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplateFolder
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string TemplateFolder { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TemplateFolder As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplateFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplatePath
  commentId: P:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplatePath
  id: TemplatePath
  parent: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
  langs:
  - csharp
  - vb
  name: TemplatePath
  nameWithType: InitViewModel.TemplatePath
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplatePath
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixTemplates
  syntax:
    content: public string TemplatePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TemplatePath As String
  overload: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplatePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Mix.Cms.Lib.ViewModels.MixTemplates
  commentId: N:Mix.Cms.Lib.ViewModels.MixTemplates
  isExternal: true
  name: Mix.Cms.Lib.ViewModels.MixTemplates
  nameWithType: Mix.Cms.Lib.ViewModels.MixTemplates
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  commentId: T:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  parent: Mix.Domain.Data.ViewModels
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3
  name: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel)
  name.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    name: InitViewModel
    nameWithType: InitViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    name: InitViewModel
    nameWithType: InitViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.IViewModel
  commentId: T:Mix.Domain.Data.ViewModels.IViewModel
  parent: Mix.Domain.Data.ViewModels
  isExternal: true
  name: IViewModel
  nameWithType: IViewModel
  fullName: Mix.Domain.Data.ViewModels.IViewModel
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Repository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Repository
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  name: Repository
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Repository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Repository
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Repository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Repository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.InitModel
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.InitModel
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  name: InitModel()
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.InitModel()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.InitModel()
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).InitModel()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).InitModel()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseModel(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ParseModel(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ParseModel(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Validate(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Validate(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Validate(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ExpandViewAsync(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ExpandViewAsync(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandViewAsync(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ExpandViewAsync(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ExpandViewAsync(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ExpandViewAsync(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ExpandViewAsync(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandViewAsync
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ExpandViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ExpandViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandViewAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ExpandViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ExpandViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.InitViewAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.InitViewAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitViewAsync(MixTemplate, Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.InitViewAsync(MixTemplate, Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.InitViewAsync(Mix.Cms.Lib.Models.Cms.MixTemplate, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).InitViewAsync(MixTemplate, Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).InitViewAsync(Mix.Cms.Lib.Models.Cms.MixTemplate, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitViewAsync
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.InitViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.InitViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitViewAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).InitViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).InitViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ParseViewAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ParseViewAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseViewAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ParseViewAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ParseViewAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ParseViewAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ParseViewAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseViewAsync
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ParseViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ParseViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseViewAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ParseViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ParseViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneAsync(MixTemplate, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.CloneAsync(MixTemplate, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.CloneAsync(Mix.Cms.Lib.Models.Cms.MixTemplate, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).CloneAsync(MixTemplate, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).CloneAsync(Mix.Cms.Lib.Models.Cms.MixTemplate, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(MixTemplate, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModelsAsync(InitViewModel, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.CloneSubModelsAsync(InitViewModel, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.CloneSubModelsAsync(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).CloneSubModelsAsync(InitViewModel, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).CloneSubModelsAsync(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(InitViewModel, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    name: InitViewModel
    nameWithType: InitViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    name: InitViewModel
    nameWithType: InitViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.RemoveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).RemoveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModelsAsync(InitViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.RemoveRelatedModelsAsync(InitViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).RemoveRelatedModelsAsync(InitViewModel, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    name: InitViewModel
    nameWithType: InitViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    name: InitViewModel
    nameWithType: InitViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.SaveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).SaveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModelsAsync(MixTemplate, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.SaveSubModelsAsync(MixTemplate, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).SaveSubModelsAsync(MixTemplate, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitView(MixTemplate, Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.InitView(MixTemplate, Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.InitView(Mix.Cms.Lib.Models.Cms.MixTemplate, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).InitView(MixTemplate, Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).InitView(Mix.Cms.Lib.Models.Cms.MixTemplate, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ParseView(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ParseView(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandView(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ExpandView(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ExpandView(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixTemplate,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Clone(MixTemplate, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Clone(MixTemplate, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Clone(Mix.Cms.Lib.Models.Cms.MixTemplate, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Clone(MixTemplate, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Clone(Mix.Cms.Lib.Models.Cms.MixTemplate, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(MixTemplate, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.CloneSubModels(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.CloneSubModels(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModels(InitViewModel, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.CloneSubModels(InitViewModel, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.CloneSubModels(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).CloneSubModels(InitViewModel, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).CloneSubModels(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(InitViewModel, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    name: InitViewModel
    nameWithType: InitViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    name: InitViewModel
    nameWithType: InitViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.RemoveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).RemoveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModels(InitViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.RemoveRelatedModels(InitViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).RemoveRelatedModels(InitViewModel, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    name: InitViewModel
    nameWithType: InitViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    name: InitViewModel
    nameWithType: InitViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.SaveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).SaveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModels(MixTemplate, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.SaveSubModels(MixTemplate, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).SaveSubModels(MixTemplate, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).SaveSubModels(Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Exception
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Exception
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Exception
  name: Exception
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Exception
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Exception
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Exception
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Exception
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.IsClone
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.IsClone
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  name: IsClone
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.IsClone
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.IsClone
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).IsClone
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).IsClone
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.IsLazyLoad
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.IsLazyLoad
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  name: IsLazyLoad
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.IsLazyLoad
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).IsLazyLoad
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).IsLazyLoad
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Cultures
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Cultures
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Cultures
  name: Cultures
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Cultures
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Cultures
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Cultures
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Cultures
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Mapper
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Mapper
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  name: Mapper
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Mapper
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Mapper
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Mapper
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Mapper
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Model
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Model
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  name: Model
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Model
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Model
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Model
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Model
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ModelMapper
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.ModelMapper
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  name: ModelMapper
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.ModelMapper
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.ModelMapper
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).ModelMapper
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).ModelMapper
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Priority
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Priority
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Priority
  name: Priority
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Priority
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Priority
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Priority
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Priority
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Specificulture
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Specificulture
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  name: Specificulture
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Specificulture
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Specificulture
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Specificulture
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Specificulture
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Errors
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.Errors
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  name: Errors
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.Errors
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.Errors
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).Errors
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).Errors
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.IsValid
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}.IsValid
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixTemplate,Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  name: IsValid
  nameWithType: ViewModelBase<MixCmsContext, MixTemplate, InitViewModel>.IsValid
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel>.IsValid
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixTemplate, InitViewModel).IsValid
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixTemplate, Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel).IsValid
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
  commentId: T:Mix.Domain.Data.ViewModels.ViewModelBase`3
  isExternal: true
  name: ViewModelBase<TDbContext, TModel, TView>
  nameWithType: ViewModelBase<TDbContext, TModel, TView>
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView)
  name.vb: ViewModelBase(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels
  commentId: N:Mix.Domain.Data.ViewModels
  isExternal: true
  name: Mix.Domain.Data.ViewModels
  nameWithType: Mix.Domain.Data.ViewModels
  fullName: Mix.Domain.Data.ViewModels
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  isExternal: true
  name: Repository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Repository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Repository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Repository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Repository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  isExternal: true
  name: InitModel()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseModel(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Validate(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandViewAsync(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandViewAsync(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandViewAsync(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandViewAsync(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandViewAsync(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandViewAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandViewAsync(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandViewAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitViewAsync(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitViewAsync(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitViewAsync(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitViewAsync(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitViewAsync(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitViewAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitViewAsync(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitViewAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseViewAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseViewAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseViewAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseViewAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseViewAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseViewAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseViewAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseViewAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseViewAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseViewAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseView(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandView(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Exception
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Exception
  isExternal: true
  name: Exception
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Exception
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Exception
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Exception
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Exception
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  isExternal: true
  name: IsClone
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsClone
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsClone
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsClone
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsClone
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  isExternal: true
  name: IsLazyLoad
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Cultures
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Cultures
  isExternal: true
  name: Cultures
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Cultures
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Cultures
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Cultures
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Cultures
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  isExternal: true
  name: Mapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Mapper
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Mapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Mapper
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Mapper
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  isExternal: true
  name: Model
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Model
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Model
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Model
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Model
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  isExternal: true
  name: ModelMapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Priority
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Priority
  isExternal: true
  name: Priority
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Priority
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Priority
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Priority
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Priority
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  isExternal: true
  name: Specificulture
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Specificulture
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Specificulture
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Specificulture
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Specificulture
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  isExternal: true
  name: Errors
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Errors
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Errors
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Errors
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Errors
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsValid
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsValid
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsValid
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsValid
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.#ctor*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.#ctor
  isExternal: true
  name: InitViewModel
  nameWithType: InitViewModel.InitViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.InitViewModel
- uid: Mix.Cms.Lib.Models.Cms.MixTemplate
  commentId: T:Mix.Cms.Lib.Models.Cms.MixTemplate
  parent: Mix.Cms.Lib.Models.Cms
  isExternal: true
  name: MixTemplate
  nameWithType: MixTemplate
  fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  isExternal: true
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  isExternal: true
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ExpandView*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ExpandView
  isExternal: true
  name: ExpandView
  nameWithType: InitViewModel.ExpandView
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ExpandView
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ParseModel*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ParseModel
  isExternal: true
  name: ParseModel
  nameWithType: InitViewModel.ParseModel
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ParseModel
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModel*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModel
  isExternal: true
  name: RemoveModel
  nameWithType: InitViewModel.RemoveModel
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.Models.Cms.MixTemplate}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.Models.Cms.MixTemplate}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<MixTemplate>
  nameWithType: RepositoryResponse<MixTemplate>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Cms.Lib.Models.Cms.MixTemplate>
  nameWithType.vb: RepositoryResponse(Of MixTemplate)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Cms.Lib.Models.Cms.MixTemplate)
  name.vb: RepositoryResponse(Of MixTemplate)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse`1
  isExternal: true
  name: RepositoryResponse<TResult>
  nameWithType: RepositoryResponse<TResult>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<TResult>
  nameWithType.vb: RepositoryResponse(Of TResult)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of TResult)
  name.vb: RepositoryResponse(Of TResult)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels
  commentId: N:Mix.Domain.Core.ViewModels
  isExternal: true
  name: Mix.Domain.Core.ViewModels
  nameWithType: Mix.Domain.Core.ViewModels
  fullName: Mix.Domain.Core.ViewModels
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModels*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModels
  isExternal: true
  name: SaveSubModels
  nameWithType: InitViewModel.SaveSubModels
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModels
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<Boolean>
  nameWithType: RepositoryResponse<Boolean>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<System.Boolean>
  nameWithType.vb: RepositoryResponse(Of Boolean)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of System.Boolean)
  name.vb: RepositoryResponse(Of Boolean)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModelAsync*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModelAsync
  isExternal: true
  name: RemoveModelAsync
  nameWithType: InitViewModel.RemoveModelAsync
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.RemoveModelAsync
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.Models.Cms.MixTemplate}}
  commentId: '!:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.Models.Cms.MixTemplate}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<MixTemplate>>
  nameWithType: Task<RepositoryResponse<MixTemplate>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Cms.Lib.Models.Cms.MixTemplate>>
  nameWithType.vb: Task(Of RepositoryResponse(Of MixTemplate))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Cms.Lib.Models.Cms.MixTemplate))
  name.vb: Task(Of RepositoryResponse(Of MixTemplate))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: Mix.Cms.Lib.Models.Cms.MixTemplate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModelsAsync*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModelsAsync
  isExternal: true
  name: SaveSubModelsAsync
  nameWithType: InitViewModel.SaveSubModelsAsync
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SaveSubModelsAsync
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
  commentId: '!:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<Boolean>>
  nameWithType: Task<RepositoryResponse<Boolean>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<System.Boolean>>
  nameWithType.vb: Task(Of RepositoryResponse(Of Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of System.Boolean))
  name.vb: Task(Of RepositoryResponse(Of Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Id*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Id
  isExternal: true
  name: Id
  nameWithType: InitViewModel.Id
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeId*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeId
  isExternal: true
  name: ThemeId
  nameWithType: InitViewModel.ThemeId
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeId
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeName*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeName
  isExternal: true
  name: ThemeName
  nameWithType: InitViewModel.ThemeName
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ThemeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FolderType*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FolderType
  isExternal: true
  name: FolderType
  nameWithType: InitViewModel.FolderType
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FolderType
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileFolder*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileFolder
  isExternal: true
  name: FileFolder
  nameWithType: InitViewModel.FileFolder
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileFolder
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileName*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileName
  isExternal: true
  name: FileName
  nameWithType: InitViewModel.FileName
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.FileName
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Extension*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Extension
  isExternal: true
  name: Extension
  nameWithType: InitViewModel.Extension
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Extension
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Content*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Content
  isExternal: true
  name: Content
  nameWithType: InitViewModel.Content
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Content
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.MobileContent*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.MobileContent
  isExternal: true
  name: MobileContent
  nameWithType: InitViewModel.MobileContent
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.MobileContent
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SpaContent*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SpaContent
  isExternal: true
  name: SpaContent
  nameWithType: InitViewModel.SpaContent
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.SpaContent
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Scripts*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Scripts
  isExternal: true
  name: Scripts
  nameWithType: InitViewModel.Scripts
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Scripts
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Styles*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Styles
  isExternal: true
  name: Styles
  nameWithType: InitViewModel.Styles
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Styles
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.CreatedDateTime*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.CreatedDateTime
  isExternal: true
  name: CreatedDateTime
  nameWithType: InitViewModel.CreatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.CreatedDateTime
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.LastModified*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.LastModified
  isExternal: true
  name: LastModified
  nameWithType: InitViewModel.LastModified
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.LastModified
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ModifiedBy*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ModifiedBy
  isExternal: true
  name: ModifiedBy
  nameWithType: InitViewModel.ModifiedBy
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.ModifiedBy
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Layout*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Layout
  isExternal: true
  name: Layout
  nameWithType: InitViewModel.Layout
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.Layout
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.AssetFolder*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.AssetFolder
  isExternal: true
  name: AssetFolder
  nameWithType: InitViewModel.AssetFolder
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.AssetFolder
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplateFolder*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplateFolder
  isExternal: true
  name: TemplateFolder
  nameWithType: InitViewModel.TemplateFolder
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplateFolder
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplatePath*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplatePath
  isExternal: true
  name: TemplatePath
  nameWithType: InitViewModel.TemplatePath
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.InitViewModel.TemplatePath
