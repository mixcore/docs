### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.FilePageViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.FilePageViewModel
  id: FilePageViewModel
  parent: Mix.Cms.Lib.ViewModels
  children:
  - Mix.Cms.Lib.ViewModels.FilePageViewModel.#ctor
  - Mix.Cms.Lib.ViewModels.FilePageViewModel.Directories
  - Mix.Cms.Lib.ViewModels.FilePageViewModel.Files
  langs:
  - csharp
  - vb
  name: FilePageViewModel
  nameWithType: FilePageViewModel
  fullName: Mix.Cms.Lib.ViewModels.FilePageViewModel
  type: Class
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: 'public class FilePageViewModel : Object'
    content.vb: >-
      Public Class FilePageViewModel
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.FilePageViewModel.#ctor
  commentId: M:Mix.Cms.Lib.ViewModels.FilePageViewModel.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.ViewModels.FilePageViewModel
  langs:
  - csharp
  - vb
  name: FilePageViewModel()
  nameWithType: FilePageViewModel.FilePageViewModel()
  fullName: Mix.Cms.Lib.ViewModels.FilePageViewModel.FilePageViewModel()
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public FilePageViewModel()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.ViewModels.FilePageViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.FilePageViewModel.Files
  commentId: P:Mix.Cms.Lib.ViewModels.FilePageViewModel.Files
  id: Files
  parent: Mix.Cms.Lib.ViewModels.FilePageViewModel
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: FilePageViewModel.Files
  fullName: Mix.Cms.Lib.ViewModels.FilePageViewModel.Files
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public List<FileViewModel> Files { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.FileViewModel}
    content.vb: Public Property Files As List(Of FileViewModel)
  overload: Mix.Cms.Lib.ViewModels.FilePageViewModel.Files*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.FilePageViewModel.Directories
  commentId: P:Mix.Cms.Lib.ViewModels.FilePageViewModel.Directories
  id: Directories
  parent: Mix.Cms.Lib.ViewModels.FilePageViewModel
  langs:
  - csharp
  - vb
  name: Directories
  nameWithType: FilePageViewModel.Directories
  fullName: Mix.Cms.Lib.ViewModels.FilePageViewModel.Directories
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public List<string> Directories { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property Directories As List(Of String)
  overload: Mix.Cms.Lib.ViewModels.FilePageViewModel.Directories*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Lib.ViewModels
  commentId: N:Mix.Cms.Lib.ViewModels
  isExternal: true
  name: Mix.Cms.Lib.ViewModels
  nameWithType: Mix.Cms.Lib.ViewModels
  fullName: Mix.Cms.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.ViewModels.FilePageViewModel.#ctor*
  commentId: Overload:Mix.Cms.Lib.ViewModels.FilePageViewModel.#ctor
  isExternal: true
  name: FilePageViewModel
  nameWithType: FilePageViewModel.FilePageViewModel
  fullName: Mix.Cms.Lib.ViewModels.FilePageViewModel.FilePageViewModel
- uid: Mix.Cms.Lib.ViewModels.FilePageViewModel.Files*
  commentId: Overload:Mix.Cms.Lib.ViewModels.FilePageViewModel.Files
  isExternal: true
  name: Files
  nameWithType: FilePageViewModel.Files
  fullName: Mix.Cms.Lib.ViewModels.FilePageViewModel.Files
- uid: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.FileViewModel}
  commentId: '!:System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.FileViewModel}'
  definition: System.Collections.Generic.List`1
  name: List<FileViewModel>
  nameWithType: List<FileViewModel>
  fullName: System.Collections.Generic.List<Mix.Cms.Lib.ViewModels.FileViewModel>
  nameWithType.vb: List(Of FileViewModel)
  fullName.vb: System.Collections.Generic.List(Of Mix.Cms.Lib.ViewModels.FileViewModel)
  name.vb: List(Of FileViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.FileViewModel
    name: FileViewModel
    nameWithType: FileViewModel
    fullName: Mix.Cms.Lib.ViewModels.FileViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.FileViewModel
    name: FileViewModel
    nameWithType: FileViewModel
    fullName: Mix.Cms.Lib.ViewModels.FileViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.FilePageViewModel.Directories*
  commentId: Overload:Mix.Cms.Lib.ViewModels.FilePageViewModel.Directories
  isExternal: true
  name: Directories
  nameWithType: FilePageViewModel.Directories
  fullName: Mix.Cms.Lib.ViewModels.FilePageViewModel.Directories
- uid: System.Collections.Generic.List{System.String}
  commentId: '!:System.Collections.Generic.List{System.String}'
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
