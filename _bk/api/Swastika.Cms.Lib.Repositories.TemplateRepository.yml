### YamlMime:ManagedReference
items:
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository
  commentId: T:Swastika.Cms.Lib.Repositories.TemplateRepository
  id: TemplateRepository
  parent: Swastika.Cms.Lib.Repositories
  children:
  - Swastika.Cms.Lib.Repositories.TemplateRepository.DeleteTemplate(System.String,System.String)
  - Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate(System.String,System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.TemplateViewModel},System.String)
  - Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate(System.String,System.String)
  - Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplates(System.String)
  - Swastika.Cms.Lib.Repositories.TemplateRepository.Instance
  - Swastika.Cms.Lib.Repositories.TemplateRepository.SaveTemplate(Swastika.Cms.Lib.ViewModels.TemplateViewModel)
  langs:
  - csharp
  - vb
  name: TemplateRepository
  nameWithType: TemplateRepository
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository
  type: Class
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: 'public class TemplateRepository : Object'
    content.vb: >-
      Public Class TemplateRepository
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate(System.String,System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.TemplateViewModel},System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate(System.String,System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.TemplateViewModel},System.String)
  id: GetTemplate(System.String,System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.TemplateViewModel},System.String)
  parent: Swastika.Cms.Lib.Repositories.TemplateRepository
  langs:
  - csharp
  - vb
  name: GetTemplate(String, List<TemplateViewModel>, String)
  nameWithType: TemplateRepository.GetTemplate(String, List<TemplateViewModel>, String)
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate(System.String, System.Collections.Generic.List<Swastika.Cms.Lib.ViewModels.TemplateViewModel>, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public TemplateViewModel GetTemplate(string templatePath, List<TemplateViewModel> templates, string templateFolder)
    parameters:
    - id: templatePath
      type: System.String
    - id: templates
      type: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.TemplateViewModel}
    - id: templateFolder
      type: System.String
    return:
      type: Swastika.Cms.Lib.ViewModels.TemplateViewModel
    content.vb: Public Function GetTemplate(templatePath As String, templates As List(Of TemplateViewModel), templateFolder As String) As TemplateViewModel
  overload: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate*
  nameWithType.vb: TemplateRepository.GetTemplate(String, List(Of TemplateViewModel), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate(System.String, System.Collections.Generic.List(Of Swastika.Cms.Lib.ViewModels.TemplateViewModel), System.String)
  name.vb: GetTemplate(String, List(Of TemplateViewModel), String)
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate(System.String,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate(System.String,System.String)
  id: GetTemplate(System.String,System.String)
  parent: Swastika.Cms.Lib.Repositories.TemplateRepository
  langs:
  - csharp
  - vb
  name: GetTemplate(String, String)
  nameWithType: TemplateRepository.GetTemplate(String, String)
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate(System.String, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public TemplateViewModel GetTemplate(string name, string templateFolder)
    parameters:
    - id: name
      type: System.String
    - id: templateFolder
      type: System.String
    return:
      type: Swastika.Cms.Lib.ViewModels.TemplateViewModel
    content.vb: Public Function GetTemplate(name As String, templateFolder As String) As TemplateViewModel
  overload: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.DeleteTemplate(System.String,System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.TemplateRepository.DeleteTemplate(System.String,System.String)
  id: DeleteTemplate(System.String,System.String)
  parent: Swastika.Cms.Lib.Repositories.TemplateRepository
  langs:
  - csharp
  - vb
  name: DeleteTemplate(String, String)
  nameWithType: TemplateRepository.DeleteTemplate(String, String)
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.DeleteTemplate(System.String, System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool DeleteTemplate(string name, string templateFolder)
    parameters:
    - id: name
      type: System.String
    - id: templateFolder
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function DeleteTemplate(name As String, templateFolder As String) As Boolean
  overload: Swastika.Cms.Lib.Repositories.TemplateRepository.DeleteTemplate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplates(System.String)
  commentId: M:Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplates(System.String)
  id: GetTemplates(System.String)
  parent: Swastika.Cms.Lib.Repositories.TemplateRepository
  langs:
  - csharp
  - vb
  name: GetTemplates(String)
  nameWithType: TemplateRepository.GetTemplates(String)
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplates(System.String)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public List<TemplateViewModel> GetTemplates(string folder)
    parameters:
    - id: folder
      type: System.String
    return:
      type: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.TemplateViewModel}
    content.vb: Public Function GetTemplates(folder As String) As List(Of TemplateViewModel)
  overload: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplates*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.SaveTemplate(Swastika.Cms.Lib.ViewModels.TemplateViewModel)
  commentId: M:Swastika.Cms.Lib.Repositories.TemplateRepository.SaveTemplate(Swastika.Cms.Lib.ViewModels.TemplateViewModel)
  id: SaveTemplate(Swastika.Cms.Lib.ViewModels.TemplateViewModel)
  parent: Swastika.Cms.Lib.Repositories.TemplateRepository
  langs:
  - csharp
  - vb
  name: SaveTemplate(TemplateViewModel)
  nameWithType: TemplateRepository.SaveTemplate(TemplateViewModel)
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.SaveTemplate(Swastika.Cms.Lib.ViewModels.TemplateViewModel)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public bool SaveTemplate(TemplateViewModel file)
    parameters:
    - id: file
      type: Swastika.Cms.Lib.ViewModels.TemplateViewModel
    return:
      type: System.Boolean
    content.vb: Public Function SaveTemplate(file As TemplateViewModel) As Boolean
  overload: Swastika.Cms.Lib.Repositories.TemplateRepository.SaveTemplate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.Instance
  commentId: P:Swastika.Cms.Lib.Repositories.TemplateRepository.Instance
  id: Instance
  parent: Swastika.Cms.Lib.Repositories.TemplateRepository
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: TemplateRepository.Instance
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.Instance
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.Repositories
  syntax:
    content: public static TemplateRepository Instance { get; }
    parameters: []
    return:
      type: Swastika.Cms.Lib.Repositories.TemplateRepository
    content.vb: Public Shared ReadOnly Property Instance As TemplateRepository
  overload: Swastika.Cms.Lib.Repositories.TemplateRepository.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Swastika.Cms.Lib.Repositories
  commentId: N:Swastika.Cms.Lib.Repositories
  isExternal: true
  name: Swastika.Cms.Lib.Repositories
  nameWithType: Swastika.Cms.Lib.Repositories
  fullName: Swastika.Cms.Lib.Repositories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate*
  commentId: Overload:Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate
  isExternal: true
  name: GetTemplate
  nameWithType: TemplateRepository.GetTemplate
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.TemplateViewModel}
  commentId: '!:System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.TemplateViewModel}'
  definition: System.Collections.Generic.List`1
  name: List<TemplateViewModel>
  nameWithType: List<TemplateViewModel>
  fullName: System.Collections.Generic.List<Swastika.Cms.Lib.ViewModels.TemplateViewModel>
  nameWithType.vb: List(Of TemplateViewModel)
  fullName.vb: System.Collections.Generic.List(Of Swastika.Cms.Lib.ViewModels.TemplateViewModel)
  name.vb: List(Of TemplateViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.TemplateViewModel
    name: TemplateViewModel
    nameWithType: TemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.TemplateViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.TemplateViewModel
    name: TemplateViewModel
    nameWithType: TemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.TemplateViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib.ViewModels.TemplateViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.TemplateViewModel
  parent: Swastika.Cms.Lib.ViewModels
  isExternal: true
  name: TemplateViewModel
  nameWithType: TemplateViewModel
  fullName: Swastika.Cms.Lib.ViewModels.TemplateViewModel
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib.ViewModels
  commentId: N:Swastika.Cms.Lib.ViewModels
  isExternal: true
  name: Swastika.Cms.Lib.ViewModels
  nameWithType: Swastika.Cms.Lib.ViewModels
  fullName: Swastika.Cms.Lib.ViewModels
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.DeleteTemplate*
  commentId: Overload:Swastika.Cms.Lib.Repositories.TemplateRepository.DeleteTemplate
  isExternal: true
  name: DeleteTemplate
  nameWithType: TemplateRepository.DeleteTemplate
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.DeleteTemplate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplates*
  commentId: Overload:Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplates
  isExternal: true
  name: GetTemplates
  nameWithType: TemplateRepository.GetTemplates
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.GetTemplates
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.SaveTemplate*
  commentId: Overload:Swastika.Cms.Lib.Repositories.TemplateRepository.SaveTemplate
  isExternal: true
  name: SaveTemplate
  nameWithType: TemplateRepository.SaveTemplate
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.SaveTemplate
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository.Instance*
  commentId: Overload:Swastika.Cms.Lib.Repositories.TemplateRepository.Instance
  isExternal: true
  name: Instance
  nameWithType: TemplateRepository.Instance
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository.Instance
- uid: Swastika.Cms.Lib.Repositories.TemplateRepository
  commentId: T:Swastika.Cms.Lib.Repositories.TemplateRepository
  parent: Swastika.Cms.Lib.Repositories
  isExternal: true
  name: TemplateRepository
  nameWithType: TemplateRepository
  fullName: Swastika.Cms.Lib.Repositories.TemplateRepository
