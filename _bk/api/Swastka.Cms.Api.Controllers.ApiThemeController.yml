### YamlMime:ManagedReference
items:
- uid: Swastka.Cms.Api.Controllers.ApiThemeController
  commentId: T:Swastka.Cms.Api.Controllers.ApiThemeController
  id: ApiThemeController
  parent: Swastka.Cms.Api.Controllers
  children:
  - Swastka.Cms.Api.Controllers.ApiThemeController.#ctor
  - Swastka.Cms.Api.Controllers.ApiThemeController.BEDetails(System.String,System.Nullable{System.Int32})
  - Swastka.Cms.Api.Controllers.ApiThemeController.DeleteAsync(System.Int32)
  - Swastka.Cms.Api.Controllers.ApiThemeController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging,System.Nullable{System.Int32})
  - Swastka.Cms.Api.Controllers.ApiThemeController.Save(Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel)
  - Swastka.Cms.Api.Controllers.ApiThemeController.SaveFields(System.Int32,System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField})
  - Swastka.Cms.Api.Controllers.ApiThemeController.Sync(System.Int32)
  langs:
  - csharp
  - vb
  name: ApiThemeController
  nameWithType: ApiThemeController
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController
  type: Class
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: 'public class ApiThemeController : BaseApiController'
    content.vb: >-
      Public Class ApiThemeController
          Inherits BaseApiController
  inheritance:
  - System.Object
  - Swastka.Cms.Api.Controllers.BaseApiController
  inheritedMembers:
  - Swastka.Cms.Api.Controllers.BaseApiController._domain
  - Swastka.Cms.Api.Controllers.BaseApiController._lang
  - Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  - Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  - Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  - Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  - Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1({TResult})
  - Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  - Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.#ctor
  commentId: M:Swastka.Cms.Api.Controllers.ApiThemeController.#ctor
  id: '#ctor'
  parent: Swastka.Cms.Api.Controllers.ApiThemeController
  langs:
  - csharp
  - vb
  name: ApiThemeController()
  nameWithType: ApiThemeController.ApiThemeController()
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.ApiThemeController()
  type: Constructor
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public ApiThemeController()
    content.vb: Public Sub New
  overload: Swastka.Cms.Api.Controllers.ApiThemeController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.DeleteAsync(System.Int32)
  commentId: M:Swastka.Cms.Api.Controllers.ApiThemeController.DeleteAsync(System.Int32)
  id: DeleteAsync(System.Int32)
  parent: Swastka.Cms.Api.Controllers.ApiThemeController
  langs:
  - csharp
  - vb
  name: DeleteAsync(Int32)
  nameWithType: ApiThemeController.DeleteAsync(Int32)
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.DeleteAsync(System.Int32)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<SiocTheme>> DeleteAsync(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.Models.Cms.SiocTheme}}
    content.vb: Public Function DeleteAsync(id As Integer) As Task(Of RepositoryResponse(Of SiocTheme))
  overload: Swastka.Cms.Api.Controllers.ApiThemeController.DeleteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.Sync(System.Int32)
  commentId: M:Swastka.Cms.Api.Controllers.ApiThemeController.Sync(System.Int32)
  id: Sync(System.Int32)
  parent: Swastka.Cms.Api.Controllers.ApiThemeController
  langs:
  - csharp
  - vb
  name: Sync(Int32)
  nameWithType: ApiThemeController.Sync(Int32)
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.Sync(System.Int32)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<List<ApiTemplateViewModel>>> Sync(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.Api.ApiTemplateViewModel}}}
    content.vb: Public Function Sync(id As Integer) As Task(Of RepositoryResponse(Of List(Of ApiTemplateViewModel)))
  overload: Swastka.Cms.Api.Controllers.ApiThemeController.Sync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.BEDetails(System.String,System.Nullable{System.Int32})
  commentId: M:Swastka.Cms.Api.Controllers.ApiThemeController.BEDetails(System.String,System.Nullable{System.Int32})
  id: BEDetails(System.String,System.Nullable{System.Int32})
  parent: Swastka.Cms.Api.Controllers.ApiThemeController
  langs:
  - csharp
  - vb
  name: BEDetails(String, Nullable<Int32>)
  nameWithType: ApiThemeController.BEDetails(String, Nullable<Int32>)
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.BEDetails(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<JObject> BEDetails(string viewType, Nullable<int> id)
    parameters:
    - id: viewType
      type: System.String
    - id: id
      type: System.Nullable{System.Int32}
    return:
      type: System.Threading.Tasks.Task{Newtonsoft.Json.Linq.JObject}
    content.vb: Public Function BEDetails(viewType As String, id As Nullable(Of Integer)) As Task(Of JObject)
  overload: Swastka.Cms.Api.Controllers.ApiThemeController.BEDetails*
  nameWithType.vb: ApiThemeController.BEDetails(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastka.Cms.Api.Controllers.ApiThemeController.BEDetails(System.String, System.Nullable(Of System.Int32))
  name.vb: BEDetails(String, Nullable(Of Int32))
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.Save(Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel)
  commentId: M:Swastka.Cms.Api.Controllers.ApiThemeController.Save(Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel)
  id: Save(Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel)
  parent: Swastka.Cms.Api.Controllers.ApiThemeController
  langs:
  - csharp
  - vb
  name: Save(ApiThemeViewModel)
  nameWithType: ApiThemeController.Save(ApiThemeViewModel)
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.Save(Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<ApiThemeViewModel>> Save(ApiThemeViewModel model)
    parameters:
    - id: model
      type: Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel}}
    content.vb: Public Function Save(model As ApiThemeViewModel) As Task(Of RepositoryResponse(Of ApiThemeViewModel))
  overload: Swastka.Cms.Api.Controllers.ApiThemeController.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.SaveFields(System.Int32,System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField})
  commentId: M:Swastka.Cms.Api.Controllers.ApiThemeController.SaveFields(System.Int32,System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField})
  id: SaveFields(System.Int32,System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField})
  parent: Swastka.Cms.Api.Controllers.ApiThemeController
  langs:
  - csharp
  - vb
  name: SaveFields(Int32, List<EntityField>)
  nameWithType: ApiThemeController.SaveFields(Int32, List<EntityField>)
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.SaveFields(System.Int32, System.Collections.Generic.List<Swastika.Domain.Core.ViewModels.EntityField>)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<SiocTheme>> SaveFields(int id, List<EntityField> fields)
    parameters:
    - id: id
      type: System.Int32
    - id: fields
      type: System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField}
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.Models.Cms.SiocTheme}}
    content.vb: Public Function SaveFields(id As Integer, fields As List(Of EntityField)) As Task(Of RepositoryResponse(Of SiocTheme))
  overload: Swastka.Cms.Api.Controllers.ApiThemeController.SaveFields*
  nameWithType.vb: ApiThemeController.SaveFields(Int32, List(Of EntityField))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastka.Cms.Api.Controllers.ApiThemeController.SaveFields(System.Int32, System.Collections.Generic.List(Of Swastika.Domain.Core.ViewModels.EntityField))
  name.vb: SaveFields(Int32, List(Of EntityField))
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging,System.Nullable{System.Int32})
  commentId: M:Swastka.Cms.Api.Controllers.ApiThemeController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging,System.Nullable{System.Int32})
  id: GetList(Swastika.Domain.Core.ViewModels.RequestPaging,System.Nullable{System.Int32})
  parent: Swastka.Cms.Api.Controllers.ApiThemeController
  langs:
  - csharp
  - vb
  name: GetList(RequestPaging, Nullable<Int32>)
  nameWithType: ApiThemeController.GetList(RequestPaging, Nullable<Int32>)
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging, System.Nullable<System.Int32>)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<PaginationModel<InfoThemeViewModel>>> GetList(RequestPaging request, Nullable<int> level)
    parameters:
    - id: request
      type: Swastika.Domain.Core.ViewModels.RequestPaging
    - id: level
      type: System.Nullable{System.Int32}
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.Info.InfoThemeViewModel}}}
    content.vb: Public Function GetList(request As RequestPaging, level As Nullable(Of Integer)) As Task(Of RepositoryResponse(Of PaginationModel(Of InfoThemeViewModel)))
  overload: Swastka.Cms.Api.Controllers.ApiThemeController.GetList*
  nameWithType.vb: ApiThemeController.GetList(RequestPaging, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastka.Cms.Api.Controllers.ApiThemeController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging, System.Nullable(Of System.Int32))
  name.vb: GetList(RequestPaging, Nullable(Of Int32))
references:
- uid: Swastka.Cms.Api.Controllers
  commentId: N:Swastka.Cms.Api.Controllers
  isExternal: true
  name: Swastka.Cms.Api.Controllers
  nameWithType: Swastka.Cms.Api.Controllers
  fullName: Swastka.Cms.Api.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastka.Cms.Api.Controllers.BaseApiController
  commentId: T:Swastka.Cms.Api.Controllers.BaseApiController
  parent: Swastka.Cms.Api.Controllers
  isExternal: true
  name: BaseApiController
  nameWithType: BaseApiController
  fullName: Swastka.Cms.Api.Controllers.BaseApiController
- uid: Swastka.Cms.Api.Controllers.BaseApiController._domain
  commentId: F:Swastka.Cms.Api.Controllers.BaseApiController._domain
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: _domain
  nameWithType: BaseApiController._domain
  fullName: Swastka.Cms.Api.Controllers.BaseApiController._domain
- uid: Swastka.Cms.Api.Controllers.BaseApiController._lang
  commentId: F:Swastka.Cms.Api.Controllers.BaseApiController._lang
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: _lang
  nameWithType: BaseApiController._lang
  fullName: Swastka.Cms.Api.Controllers.BaseApiController._lang
- uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: BadRequest(ModelStateDictionary)
  nameWithType: BaseApiController.BadRequest(ModelStateDictionary)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: BadRequest(Object)
  nameWithType: BaseApiController.BadRequest(Object)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController.BadRequest
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: NotFound(Object)
  nameWithType: BaseApiController.NotFound(Object)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController.NotFound
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController.NotFound
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController.OnActionExecuting(ActionExecutingContext)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController.OnActionExecuting
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController.OnActionExecuting
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: GetErrorResult(String, String)
  nameWithType: BaseApiController.GetErrorResult(String, String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String, System.String)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController.GetErrorResult
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController.GetErrorResult
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: GetLanguage()
  nameWithType: BaseApiController.GetLanguage()
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage()
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController.GetLanguage
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController.GetLanguage
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1({TResult})
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  definition: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController.GetSuccessResult<TResult>(TResult)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>(TResult)
  nameWithType.vb: BaseApiController.GetSuccessResult(Of TResult)(TResult)
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult<TResult>
    nameWithType: BaseApiController.GetSuccessResult<TResult>
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult(Of TResult)
    nameWithType: BaseApiController.GetSuccessResult(Of TResult)
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: ParseRequestPagingDate(RequestPaging)
  nameWithType: BaseApiController.ParseRequestPagingDate(RequestPaging)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
    name: ParseRequestPagingDate
    nameWithType: BaseApiController.ParseRequestPagingDate
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Domain.Core.ViewModels.RequestPaging
    name: RequestPaging
    nameWithType: RequestPaging
    fullName: Swastika.Domain.Core.ViewModels.RequestPaging
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate(Swastika.Domain.Core.ViewModels.RequestPaging)
    name: ParseRequestPagingDate
    nameWithType: BaseApiController.ParseRequestPagingDate
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.ParseRequestPagingDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Domain.Core.ViewModels.RequestPaging
    name: RequestPaging
    nameWithType: RequestPaging
    fullName: Swastika.Domain.Core.ViewModels.RequestPaging
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseApiController.UploadFileAsync(IFormFile, String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseApiController.UploadFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseApiController.UploadFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  parent: Swastka.Cms.Api.Controllers.BaseApiController
  isExternal: true
  name: UploadListFileAsync(String)
  nameWithType: BaseApiController.UploadListFileAsync(String)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseApiController.UploadListFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseApiController.UploadListFileAsync
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  commentId: M:Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
  isExternal: true
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController.GetSuccessResult<TResult>(TResult)
  fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>(TResult)
  nameWithType.vb: BaseApiController.GetSuccessResult(Of TResult)(TResult)
  fullName.vb: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
  spec.csharp:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult<TResult>
    nameWithType: BaseApiController.GetSuccessResult<TResult>
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult``1(``0)
    name: GetSuccessResult(Of TResult)
    nameWithType: BaseApiController.GetSuccessResult(Of TResult)
    fullName: Swastka.Cms.Api.Controllers.BaseApiController.GetSuccessResult(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.#ctor*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiThemeController.#ctor
  isExternal: true
  name: ApiThemeController
  nameWithType: ApiThemeController.ApiThemeController
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.ApiThemeController
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.DeleteAsync*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiThemeController.DeleteAsync
  isExternal: true
  name: DeleteAsync
  nameWithType: ApiThemeController.DeleteAsync
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.DeleteAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.Models.Cms.SiocTheme}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.Models.Cms.SiocTheme}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<SiocTheme>>
  nameWithType: Task<RepositoryResponse<SiocTheme>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Cms.Lib.Models.Cms.SiocTheme>>
  nameWithType.vb: Task(Of RepositoryResponse(Of SiocTheme))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Cms.Lib.Models.Cms.SiocTheme))
  name.vb: Task(Of RepositoryResponse(Of SiocTheme))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.Models.Cms.SiocTheme
    name: SiocTheme
    nameWithType: SiocTheme
    fullName: Swastika.Cms.Lib.Models.Cms.SiocTheme
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.Models.Cms.SiocTheme
    name: SiocTheme
    nameWithType: SiocTheme
    fullName: Swastika.Cms.Lib.Models.Cms.SiocTheme
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.Sync*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiThemeController.Sync
  isExternal: true
  name: Sync
  nameWithType: ApiThemeController.Sync
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.Sync
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.Api.ApiTemplateViewModel}}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Collections.Generic.List{Swastika.Cms.Lib.ViewModels.Api.ApiTemplateViewModel}}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<List<ApiTemplateViewModel>>>
  nameWithType: Task<RepositoryResponse<List<ApiTemplateViewModel>>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<System.Collections.Generic.List<Swastika.Cms.Lib.ViewModels.Api.ApiTemplateViewModel>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of List(Of ApiTemplateViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of System.Collections.Generic.List(Of Swastika.Cms.Lib.ViewModels.Api.ApiTemplateViewModel)))
  name.vb: Task(Of RepositoryResponse(Of List(Of ApiTemplateViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.Api.ApiTemplateViewModel
    name: ApiTemplateViewModel
    nameWithType: ApiTemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Api.ApiTemplateViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.Api.ApiTemplateViewModel
    name: ApiTemplateViewModel
    nameWithType: ApiTemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Api.ApiTemplateViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.BEDetails*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiThemeController.BEDetails
  isExternal: true
  name: BEDetails
  nameWithType: ApiThemeController.BEDetails
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.BEDetails
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Newtonsoft.Json.Linq.JObject}
  commentId: '!:System.Threading.Tasks.Task{Newtonsoft.Json.Linq.JObject}'
  definition: System.Threading.Tasks.Task`1
  name: Task<JObject>
  nameWithType: Task<JObject>
  fullName: System.Threading.Tasks.Task<Newtonsoft.Json.Linq.JObject>
  nameWithType.vb: Task(Of JObject)
  fullName.vb: System.Threading.Tasks.Task(Of Newtonsoft.Json.Linq.JObject)
  name.vb: Task(Of JObject)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.Save*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiThemeController.Save
  isExternal: true
  name: Save
  nameWithType: ApiThemeController.Save
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.Save
- uid: Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel
  parent: Swastika.Cms.Lib.ViewModels.Api
  isExternal: true
  name: ApiThemeViewModel
  nameWithType: ApiThemeViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<ApiThemeViewModel>>
  nameWithType: Task<RepositoryResponse<ApiThemeViewModel>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel>>
  nameWithType.vb: Task(Of RepositoryResponse(Of ApiThemeViewModel))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel))
  name.vb: Task(Of RepositoryResponse(Of ApiThemeViewModel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel
    name: ApiThemeViewModel
    nameWithType: ApiThemeViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel
    name: ApiThemeViewModel
    nameWithType: ApiThemeViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Api.ApiThemeViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib.ViewModels.Api
  commentId: N:Swastika.Cms.Lib.ViewModels.Api
  isExternal: true
  name: Swastika.Cms.Lib.ViewModels.Api
  nameWithType: Swastika.Cms.Lib.ViewModels.Api
  fullName: Swastika.Cms.Lib.ViewModels.Api
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.SaveFields*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiThemeController.SaveFields
  isExternal: true
  name: SaveFields
  nameWithType: ApiThemeController.SaveFields
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.SaveFields
- uid: System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField}
  commentId: '!:System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField}'
  definition: System.Collections.Generic.List`1
  name: List<EntityField>
  nameWithType: List<EntityField>
  fullName: System.Collections.Generic.List<Swastika.Domain.Core.ViewModels.EntityField>
  nameWithType.vb: List(Of EntityField)
  fullName.vb: System.Collections.Generic.List(Of Swastika.Domain.Core.ViewModels.EntityField)
  name.vb: List(Of EntityField)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.EntityField
    name: EntityField
    nameWithType: EntityField
    fullName: Swastika.Domain.Core.ViewModels.EntityField
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.EntityField
    name: EntityField
    nameWithType: EntityField
    fullName: Swastika.Domain.Core.ViewModels.EntityField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.Cms.Api.Controllers.ApiThemeController.GetList*
  commentId: Overload:Swastka.Cms.Api.Controllers.ApiThemeController.GetList
  isExternal: true
  name: GetList
  nameWithType: ApiThemeController.GetList
  fullName: Swastka.Cms.Api.Controllers.ApiThemeController.GetList
- uid: Swastika.Domain.Core.ViewModels.RequestPaging
  commentId: T:Swastika.Domain.Core.ViewModels.RequestPaging
  parent: Swastika.Domain.Core.ViewModels
  isExternal: true
  name: RequestPaging
  nameWithType: RequestPaging
  fullName: Swastika.Domain.Core.ViewModels.RequestPaging
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.Info.InfoThemeViewModel}}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.Info.InfoThemeViewModel}}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<PaginationModel<InfoThemeViewModel>>>
  nameWithType: Task<RepositoryResponse<PaginationModel<InfoThemeViewModel>>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Domain.Core.ViewModels.PaginationModel<Swastika.Cms.Lib.ViewModels.Info.InfoThemeViewModel>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of PaginationModel(Of InfoThemeViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Domain.Core.ViewModels.PaginationModel(Of Swastika.Cms.Lib.ViewModels.Info.InfoThemeViewModel)))
  name.vb: Task(Of RepositoryResponse(Of PaginationModel(Of InfoThemeViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Swastika.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.Info.InfoThemeViewModel
    name: InfoThemeViewModel
    nameWithType: InfoThemeViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Info.InfoThemeViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Swastika.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.Info.InfoThemeViewModel
    name: InfoThemeViewModel
    nameWithType: InfoThemeViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Info.InfoThemeViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels
  commentId: N:Swastika.Domain.Core.ViewModels
  isExternal: true
  name: Swastika.Domain.Core.ViewModels
  nameWithType: Swastika.Domain.Core.ViewModels
  fullName: Swastika.Domain.Core.ViewModels
