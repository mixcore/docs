### YamlMime:ManagedReference
items:
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  id: UserViewModel
  parent: Swastika.Cms.Lib.ViewModels.BackEnd
  children:
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.#ctor
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.#ctor(Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.AccessFailedCount
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Address
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Email
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.EmailConfirmed
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Fullname
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Id
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEnabled
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEndDateUtc
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PasswordHash
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumber
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumberConfirmed
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Roles
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.SecurityStamp
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.TwoFactorEnabled
  - Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserName
  langs:
  - csharp
  - vb
  name: UserViewModel
  nameWithType: UserViewModel
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  type: Class
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: 'public class UserViewModel : ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>'
    content.vb: >-
      Public Class UserViewModel
          Inherits ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel)
  inheritance:
  - System.Object
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  inheritedMembers:
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.IsValid
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.InitContext
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.InitModel
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.InitView(Swastika.Cms.Lib.Models.Account.AspNetUsers,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetUsers,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Clone(Swastika.Cms.Lib.Models.Account.AspNetUsers,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Repository
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Exception
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.IsClone
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.IsLazyLoad
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ListSupportedCulture
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Mapper
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Model
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ModelMapper
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.PageIndex
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.PageSize
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Priority
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Status
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Specificulture
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Errors
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.#ctor
  commentId: M:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.#ctor
  id: '#ctor'
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: UserViewModel()
  nameWithType: UserViewModel.UserViewModel()
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserViewModel()
  type: Constructor
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public UserViewModel()
    content.vb: Public Sub New
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.#ctor(Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.#ctor(Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: '#ctor(Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)'
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: UserViewModel(AspNetUsers, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: UserViewModel.UserViewModel(AspNetUsers, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserViewModel(Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Constructor
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public UserViewModel(AspNetUsers model, SiocCmsAccountContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: model
      type: Swastika.Cms.Lib.Models.Account.AspNetUsers
    - id: _context
      type: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Sub New(model As AspNetUsers, _context As SiocCmsAccountContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Id
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Id
  id: Id
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: UserViewModel.Id
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Id
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Email
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Email
  id: Email
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: UserViewModel.Email
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Email
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Email*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.EmailConfirmed
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.EmailConfirmed
  id: EmailConfirmed
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: EmailConfirmed
  nameWithType: UserViewModel.EmailConfirmed
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.EmailConfirmed
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public bool EmailConfirmed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EmailConfirmed As Boolean
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.EmailConfirmed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PasswordHash
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PasswordHash
  id: PasswordHash
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: PasswordHash
  nameWithType: UserViewModel.PasswordHash
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PasswordHash
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public string PasswordHash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PasswordHash As String
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PasswordHash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.SecurityStamp
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.SecurityStamp
  id: SecurityStamp
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: SecurityStamp
  nameWithType: UserViewModel.SecurityStamp
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.SecurityStamp
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public string SecurityStamp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SecurityStamp As String
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.SecurityStamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumber
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumber
  id: PhoneNumber
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: PhoneNumber
  nameWithType: UserViewModel.PhoneNumber
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumber
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public string PhoneNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PhoneNumber As String
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumberConfirmed
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumberConfirmed
  id: PhoneNumberConfirmed
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: PhoneNumberConfirmed
  nameWithType: UserViewModel.PhoneNumberConfirmed
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumberConfirmed
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public bool PhoneNumberConfirmed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PhoneNumberConfirmed As Boolean
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumberConfirmed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.TwoFactorEnabled
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.TwoFactorEnabled
  id: TwoFactorEnabled
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: TwoFactorEnabled
  nameWithType: UserViewModel.TwoFactorEnabled
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.TwoFactorEnabled
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public bool TwoFactorEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TwoFactorEnabled As Boolean
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.TwoFactorEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEndDateUtc
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEndDateUtc
  id: LockoutEndDateUtc
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: LockoutEndDateUtc
  nameWithType: UserViewModel.LockoutEndDateUtc
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEndDateUtc
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public Nullable<DateTime> LockoutEndDateUtc { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property LockoutEndDateUtc As Nullable(Of DateTime)
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEndDateUtc*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEnabled
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEnabled
  id: LockoutEnabled
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: LockoutEnabled
  nameWithType: UserViewModel.LockoutEnabled
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEnabled
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public bool LockoutEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LockoutEnabled As Boolean
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.AccessFailedCount
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.AccessFailedCount
  id: AccessFailedCount
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: AccessFailedCount
  nameWithType: UserViewModel.AccessFailedCount
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.AccessFailedCount
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public int AccessFailedCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AccessFailedCount As Integer
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.AccessFailedCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserName
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserName
  id: UserName
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: UserViewModel.UserName
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserName
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Fullname
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Fullname
  id: Fullname
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: Fullname
  nameWithType: UserViewModel.Fullname
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Fullname
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public string Fullname { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Fullname As String
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Fullname*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Address
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Address
  id: Address
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: UserViewModel.Address
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Address
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Address As String
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Address*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Roles
  commentId: P:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Roles
  id: Roles
  parent: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: UserViewModel.Roles
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Roles
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.BackEnd
  syntax:
    content: public List<UserRoleModel> Roles { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Swastika.Identity.Models.AccountViewModels.UserRoleModel}
    content.vb: Public Property Roles As List(Of UserRoleModel)
  overload: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Roles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Swastika.Cms.Lib.ViewModels.BackEnd
  commentId: N:Swastika.Cms.Lib.ViewModels.BackEnd
  isExternal: true
  name: Swastika.Cms.Lib.ViewModels.BackEnd
  nameWithType: Swastika.Cms.Lib.ViewModels.BackEnd
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  commentId: T:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  parent: Swastika.Domain.Data.ViewModels
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3
  name: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel)
  name.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.IsValid
  commentId: F:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.IsValid
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  name: IsValid
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.IsValid
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.IsValid
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).IsValid
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).IsValid
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.InitContext
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.InitContext
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  name: InitContext()
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.InitContext()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.InitContext()
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).InitContext()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).InitContext()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.InitModel
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.InitModel
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  name: InitModel()
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.InitModel()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.InitModel()
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).InitModel()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).InitModel()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.InitView(Swastika.Cms.Lib.Models.Account.AspNetUsers,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.InitView(Swastika.Cms.Lib.Models.Account.AspNetUsers,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitView(AspNetUsers, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.InitView(AspNetUsers, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.InitView(Swastika.Cms.Lib.Models.Account.AspNetUsers, System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).InitView(AspNetUsers, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).InitView(Swastika.Cms.Lib.Models.Account.AspNetUsers, System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.ParseView(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).ParseView(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Validate(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Validate(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Validate(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetUsers,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetUsers,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneAsync(AspNetUsers, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.CloneAsync(AspNetUsers, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetUsers, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).CloneAsync(AspNetUsers, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetUsers, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(AspNetUsers, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModelsAsync(UserViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.CloneSubModelsAsync(UserViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).CloneSubModelsAsync(UserViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(UserViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.RemoveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).RemoveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModelsAsync(UserViewModel, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.RemoveRelatedModelsAsync(UserViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).RemoveRelatedModelsAsync(UserViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.SaveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).SaveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModelsAsync(AspNetUsers, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.SaveSubModelsAsync(AspNetUsers, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).SaveSubModelsAsync(AspNetUsers, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Clone(Swastika.Cms.Lib.Models.Account.AspNetUsers,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Clone(Swastika.Cms.Lib.Models.Account.AspNetUsers,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Clone(AspNetUsers, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Clone(AspNetUsers, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Clone(Swastika.Cms.Lib.Models.Account.AspNetUsers, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Clone(AspNetUsers, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Clone(Swastika.Cms.Lib.Models.Account.AspNetUsers, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(AspNetUsers, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModels(UserViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.CloneSubModels(UserViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.CloneSubModels(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).CloneSubModels(UserViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).CloneSubModels(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(UserViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.RemoveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).RemoveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModels(UserViewModel, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.RemoveRelatedModels(UserViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).RemoveRelatedModels(UserViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    name: UserViewModel
    nameWithType: UserViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.SaveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).SaveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModels(AspNetUsers, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.SaveSubModels(AspNetUsers, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).SaveSubModels(AspNetUsers, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Repository
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Repository
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  name: Repository
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Repository
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Repository
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Repository
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Repository
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Exception
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Exception
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  name: Exception
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Exception
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Exception
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Exception
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Exception
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.IsClone
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.IsClone
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  name: IsClone
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.IsClone
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.IsClone
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).IsClone
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).IsClone
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.IsLazyLoad
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.IsLazyLoad
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  name: IsLazyLoad
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.IsLazyLoad
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).IsLazyLoad
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).IsLazyLoad
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ListSupportedCulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ListSupportedCulture
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  name: ListSupportedCulture
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.ListSupportedCulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.ListSupportedCulture
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).ListSupportedCulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).ListSupportedCulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Mapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Mapper
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  name: Mapper
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Mapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Mapper
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Mapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Mapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Model
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Model
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  name: Model
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Model
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Model
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Model
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Model
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ModelMapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.ModelMapper
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  name: ModelMapper
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.ModelMapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.ModelMapper
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).ModelMapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).ModelMapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.PageIndex
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.PageIndex
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  name: PageIndex
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.PageIndex
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.PageIndex
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).PageIndex
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).PageIndex
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.PageSize
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.PageSize
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  name: PageSize
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.PageSize
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.PageSize
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).PageSize
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).PageSize
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Priority
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Priority
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  name: Priority
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Priority
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Priority
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Priority
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Priority
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Status
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Status
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  name: Status
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Status
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Status
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Status
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Status
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Specificulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Specificulture
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  name: Specificulture
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Specificulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Specificulture
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Specificulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Specificulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Errors
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}.Errors
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUsers,Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  name: Errors
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUsers, UserViewModel>.Errors
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel>.Errors
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUsers, UserViewModel).Errors
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUsers, Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel).Errors
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
  commentId: T:Swastika.Domain.Data.ViewModels.ViewModelBase`3
  isExternal: true
  name: ViewModelBase<TDbContext, TModel, TView>
  nameWithType: ViewModelBase<TDbContext, TModel, TView>
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView)
  name.vb: ViewModelBase(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels
  commentId: N:Swastika.Domain.Data.ViewModels
  isExternal: true
  name: Swastika.Domain.Data.ViewModels
  nameWithType: Swastika.Domain.Data.ViewModels
  fullName: Swastika.Domain.Data.ViewModels
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  commentId: F:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsValid
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsValid
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsValid
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsValid
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandView(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  isExternal: true
  name: InitContext()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  isExternal: true
  name: InitModel()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseModel(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseView(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Validate(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  isExternal: true
  name: Repository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Repository
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Repository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Repository
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Repository
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  isExternal: true
  name: Exception
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Exception
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Exception
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Exception
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Exception
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  isExternal: true
  name: IsClone
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsClone
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsClone
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsClone
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsClone
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  isExternal: true
  name: IsLazyLoad
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  isExternal: true
  name: ListSupportedCulture
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ListSupportedCulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ListSupportedCulture
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ListSupportedCulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ListSupportedCulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  isExternal: true
  name: Mapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Mapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Mapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Mapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Mapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  isExternal: true
  name: Model
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Model
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Model
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Model
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Model
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  isExternal: true
  name: ModelMapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  isExternal: true
  name: PageIndex
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.PageIndex
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.PageIndex
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).PageIndex
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).PageIndex
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  isExternal: true
  name: PageSize
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.PageSize
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.PageSize
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).PageSize
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).PageSize
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  isExternal: true
  name: Priority
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Priority
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Priority
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Priority
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Priority
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  isExternal: true
  name: Status
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Status
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Status
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Status
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Status
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  isExternal: true
  name: Specificulture
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Specificulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Specificulture
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Specificulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Specificulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  isExternal: true
  name: Errors
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Errors
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Errors
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Errors
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Errors
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.#ctor*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.#ctor
  isExternal: true
  name: UserViewModel
  nameWithType: UserViewModel.UserViewModel
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserViewModel
- uid: Swastika.Cms.Lib.Models.Account.AspNetUsers
  commentId: T:Swastika.Cms.Lib.Models.Account.AspNetUsers
  parent: Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: AspNetUsers
  nameWithType: AspNetUsers
  fullName: Swastika.Cms.Lib.Models.Account.AspNetUsers
- uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
  commentId: T:Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
  parent: Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: SiocCmsAccountContext
  nameWithType: SiocCmsAccountContext
  fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Swastika.Cms.Lib.Models.Account
  commentId: N:Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: Swastika.Cms.Lib.Models.Account
  nameWithType: Swastika.Cms.Lib.Models.Account
  fullName: Swastika.Cms.Lib.Models.Account
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Id*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Id
  isExternal: true
  name: Id
  nameWithType: UserViewModel.Id
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Email*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Email
  isExternal: true
  name: Email
  nameWithType: UserViewModel.Email
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Email
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.EmailConfirmed*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.EmailConfirmed
  isExternal: true
  name: EmailConfirmed
  nameWithType: UserViewModel.EmailConfirmed
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.EmailConfirmed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PasswordHash*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PasswordHash
  isExternal: true
  name: PasswordHash
  nameWithType: UserViewModel.PasswordHash
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PasswordHash
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.SecurityStamp*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.SecurityStamp
  isExternal: true
  name: SecurityStamp
  nameWithType: UserViewModel.SecurityStamp
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.SecurityStamp
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumber*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumber
  isExternal: true
  name: PhoneNumber
  nameWithType: UserViewModel.PhoneNumber
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumber
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumberConfirmed*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumberConfirmed
  isExternal: true
  name: PhoneNumberConfirmed
  nameWithType: UserViewModel.PhoneNumberConfirmed
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.PhoneNumberConfirmed
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.TwoFactorEnabled*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.TwoFactorEnabled
  isExternal: true
  name: TwoFactorEnabled
  nameWithType: UserViewModel.TwoFactorEnabled
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.TwoFactorEnabled
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEndDateUtc*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEndDateUtc
  isExternal: true
  name: LockoutEndDateUtc
  nameWithType: UserViewModel.LockoutEndDateUtc
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEndDateUtc
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEnabled*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEnabled
  isExternal: true
  name: LockoutEnabled
  nameWithType: UserViewModel.LockoutEnabled
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.LockoutEnabled
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.AccessFailedCount*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.AccessFailedCount
  isExternal: true
  name: AccessFailedCount
  nameWithType: UserViewModel.AccessFailedCount
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.AccessFailedCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserName*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserName
  isExternal: true
  name: UserName
  nameWithType: UserViewModel.UserName
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.UserName
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Fullname*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Fullname
  isExternal: true
  name: Fullname
  nameWithType: UserViewModel.Fullname
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Fullname
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Address*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Address
  isExternal: true
  name: Address
  nameWithType: UserViewModel.Address
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Address
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Roles*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Roles
  isExternal: true
  name: Roles
  nameWithType: UserViewModel.Roles
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.UserViewModel.Roles
- uid: System.Collections.Generic.List{Swastika.Identity.Models.AccountViewModels.UserRoleModel}
  commentId: '!:System.Collections.Generic.List{Swastika.Identity.Models.AccountViewModels.UserRoleModel}'
  definition: System.Collections.Generic.List`1
  name: List<UserRoleModel>
  nameWithType: List<UserRoleModel>
  fullName: System.Collections.Generic.List<Swastika.Identity.Models.AccountViewModels.UserRoleModel>
  nameWithType.vb: List(Of UserRoleModel)
  fullName.vb: System.Collections.Generic.List(Of Swastika.Identity.Models.AccountViewModels.UserRoleModel)
  name.vb: List(Of UserRoleModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Identity.Models.AccountViewModels.UserRoleModel
    name: UserRoleModel
    nameWithType: UserRoleModel
    fullName: Swastika.Identity.Models.AccountViewModels.UserRoleModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Identity.Models.AccountViewModels.UserRoleModel
    name: UserRoleModel
    nameWithType: UserRoleModel
    fullName: Swastika.Identity.Models.AccountViewModels.UserRoleModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
