### YamlMime:ManagedReference
items:
- uid: Swastika.Domain.Core.Models.HistoryData`1
  commentId: T:Swastika.Domain.Core.Models.HistoryData`1
  id: HistoryData`1
  parent: Swastika.Domain.Core.Models
  children:
  - Swastika.Domain.Core.Models.HistoryData`1.#ctor
  - Swastika.Domain.Core.Models.HistoryData`1.Action
  - Swastika.Domain.Core.Models.HistoryData`1.Model
  - Swastika.Domain.Core.Models.HistoryData`1.When
  - Swastika.Domain.Core.Models.HistoryData`1.Who
  langs:
  - csharp
  - vb
  name: HistoryData<T>
  nameWithType: HistoryData<T>
  fullName: Swastika.Domain.Core.Models.HistoryData<T>
  type: Class
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.Models
  syntax:
    content: 'public class HistoryData<T> : Object where T : class'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class HistoryData(Of T As Class)
          Inherits Object
  inheritance:
  - System.Object
  nameWithType.vb: HistoryData(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T)
  name.vb: HistoryData(Of T)
- uid: Swastika.Domain.Core.Models.HistoryData`1.#ctor
  commentId: M:Swastika.Domain.Core.Models.HistoryData`1.#ctor
  id: '#ctor'
  parent: Swastika.Domain.Core.Models.HistoryData`1
  langs:
  - csharp
  - vb
  name: HistoryData()
  nameWithType: HistoryData<T>.HistoryData()
  fullName: Swastika.Domain.Core.Models.HistoryData<T>.HistoryData()
  type: Constructor
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.Models
  syntax:
    content: public HistoryData()
    content.vb: Public Sub New
  overload: Swastika.Domain.Core.Models.HistoryData`1.#ctor*
  nameWithType.vb: HistoryData(Of T).HistoryData()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T).HistoryData()
- uid: Swastika.Domain.Core.Models.HistoryData`1.Action
  commentId: P:Swastika.Domain.Core.Models.HistoryData`1.Action
  id: Action
  parent: Swastika.Domain.Core.Models.HistoryData`1
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: HistoryData<T>.Action
  fullName: Swastika.Domain.Core.Models.HistoryData<T>.Action
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.Models
  syntax:
    content: public string Action { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Action As String
  overload: Swastika.Domain.Core.Models.HistoryData`1.Action*
  nameWithType.vb: HistoryData(Of T).Action
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T).Action
- uid: Swastika.Domain.Core.Models.HistoryData`1.Model
  commentId: P:Swastika.Domain.Core.Models.HistoryData`1.Model
  id: Model
  parent: Swastika.Domain.Core.Models.HistoryData`1
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: HistoryData<T>.Model
  fullName: Swastika.Domain.Core.Models.HistoryData<T>.Model
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.Models
  syntax:
    content: public T Model { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Model As T
  overload: Swastika.Domain.Core.Models.HistoryData`1.Model*
  nameWithType.vb: HistoryData(Of T).Model
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T).Model
- uid: Swastika.Domain.Core.Models.HistoryData`1.When
  commentId: P:Swastika.Domain.Core.Models.HistoryData`1.When
  id: When
  parent: Swastika.Domain.Core.Models.HistoryData`1
  langs:
  - csharp
  - vb
  name: When
  nameWithType: HistoryData<T>.When
  fullName: Swastika.Domain.Core.Models.HistoryData<T>.When
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.Models
  syntax:
    content: public string When { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property When As String
  overload: Swastika.Domain.Core.Models.HistoryData`1.When*
  nameWithType.vb: HistoryData(Of T).When
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T).When
- uid: Swastika.Domain.Core.Models.HistoryData`1.Who
  commentId: P:Swastika.Domain.Core.Models.HistoryData`1.Who
  id: Who
  parent: Swastika.Domain.Core.Models.HistoryData`1
  langs:
  - csharp
  - vb
  name: Who
  nameWithType: HistoryData<T>.Who
  fullName: Swastika.Domain.Core.Models.HistoryData<T>.Who
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.Models
  syntax:
    content: public string Who { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Who As String
  overload: Swastika.Domain.Core.Models.HistoryData`1.Who*
  nameWithType.vb: HistoryData(Of T).Who
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T).Who
references:
- uid: Swastika.Domain.Core.Models
  commentId: N:Swastika.Domain.Core.Models
  isExternal: true
  name: Swastika.Domain.Core.Models
  nameWithType: Swastika.Domain.Core.Models
  fullName: Swastika.Domain.Core.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Domain.Core.Models.HistoryData`1.#ctor*
  commentId: Overload:Swastika.Domain.Core.Models.HistoryData`1.#ctor
  isExternal: true
  name: HistoryData
  nameWithType: HistoryData<T>.HistoryData
  fullName: Swastika.Domain.Core.Models.HistoryData<T>.HistoryData
  nameWithType.vb: HistoryData(Of T).HistoryData
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T).HistoryData
- uid: Swastika.Domain.Core.Models.HistoryData`1.Action*
  commentId: Overload:Swastika.Domain.Core.Models.HistoryData`1.Action
  isExternal: true
  name: Action
  nameWithType: HistoryData<T>.Action
  fullName: Swastika.Domain.Core.Models.HistoryData<T>.Action
  nameWithType.vb: HistoryData(Of T).Action
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T).Action
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Swastika.Domain.Core.Models.HistoryData`1.Model*
  commentId: Overload:Swastika.Domain.Core.Models.HistoryData`1.Model
  isExternal: true
  name: Model
  nameWithType: HistoryData<T>.Model
  fullName: Swastika.Domain.Core.Models.HistoryData<T>.Model
  nameWithType.vb: HistoryData(Of T).Model
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T).Model
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Swastika.Domain.Core.Models.HistoryData`1.When*
  commentId: Overload:Swastika.Domain.Core.Models.HistoryData`1.When
  isExternal: true
  name: When
  nameWithType: HistoryData<T>.When
  fullName: Swastika.Domain.Core.Models.HistoryData<T>.When
  nameWithType.vb: HistoryData(Of T).When
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T).When
- uid: Swastika.Domain.Core.Models.HistoryData`1.Who*
  commentId: Overload:Swastika.Domain.Core.Models.HistoryData`1.Who
  isExternal: true
  name: Who
  nameWithType: HistoryData<T>.Who
  fullName: Swastika.Domain.Core.Models.HistoryData<T>.Who
  nameWithType.vb: HistoryData(Of T).Who
  fullName.vb: Swastika.Domain.Core.Models.HistoryData(Of T).Who
