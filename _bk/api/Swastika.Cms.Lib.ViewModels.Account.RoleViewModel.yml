### YamlMime:ManagedReference
items:
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  id: RoleViewModel
  parent: Swastika.Cms.Lib.ViewModels.Account
  children:
  - Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.#ctor
  - Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.#ctor(Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ConcurrencyStamp
  - Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Id
  - Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Name
  - Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.NormalizedName
  - Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  langs:
  - csharp
  - vb
  name: RoleViewModel
  nameWithType: RoleViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  type: Class
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: 'public class RoleViewModel : ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>'
    content.vb: >-
      Public Class RoleViewModel
          Inherits ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel)
  inheritance:
  - System.Object
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  inheritedMembers:
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.IsValid
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.InitContext
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.InitModel
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.InitView(Swastika.Cms.Lib.Models.Account.AspNetRoles,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Clone(Swastika.Cms.Lib.Models.Account.AspNetRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Repository
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Exception
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.IsClone
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.IsLazyLoad
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ListSupportedCulture
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Mapper
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Model
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ModelMapper
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.PageIndex
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.PageSize
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Priority
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Status
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Specificulture
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Errors
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.#ctor
  commentId: M:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.#ctor
  id: '#ctor'
  parent: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  langs:
  - csharp
  - vb
  name: RoleViewModel()
  nameWithType: RoleViewModel.RoleViewModel()
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RoleViewModel()
  type: Constructor
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public RoleViewModel()
    content.vb: Public Sub New
  overload: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.#ctor(Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.#ctor(Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: '#ctor(Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)'
  parent: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  langs:
  - csharp
  - vb
  name: RoleViewModel(AspNetRoles, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: RoleViewModel.RoleViewModel(AspNetRoles, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RoleViewModel(Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Constructor
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public RoleViewModel(AspNetRoles model, SiocCmsAccountContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: model
      type: Swastika.Cms.Lib.Models.Account.AspNetRoles
    - id: _context
      type: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Sub New(model As AspNetRoles, _context As SiocCmsAccountContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  langs:
  - csharp
  - vb
  name: ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: RoleViewModel.ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public override AspNetRoles ParseModel(SiocCmsAccountContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: _context
      type: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: Swastika.Cms.Lib.Models.Account.AspNetRoles
    content.vb: Public Overrides Function ParseModel(_context As SiocCmsAccountContext = Nothing, _transaction As IDbContextTransaction = Nothing) As AspNetRoles
  overload: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ParseModel*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  langs:
  - csharp
  - vb
  name: RemoveRelatedModelsAsync(RoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: RoleViewModel.RemoveRelatedModelsAsync(RoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public override Task<RepositoryResponse<bool>> RemoveRelatedModelsAsync(RoleViewModel view, SiocCmsAccountContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: view
      type: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    - id: _context
      type: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
    content.vb: Public Overrides Function RemoveRelatedModelsAsync(view As RoleViewModel, _context As SiocCmsAccountContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of Boolean))
  overload: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RemoveRelatedModelsAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Id
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Id
  id: Id
  parent: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: RoleViewModel.Id
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Id
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ConcurrencyStamp
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ConcurrencyStamp
  id: ConcurrencyStamp
  parent: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  langs:
  - csharp
  - vb
  name: ConcurrencyStamp
  nameWithType: RoleViewModel.ConcurrencyStamp
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ConcurrencyStamp
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public string ConcurrencyStamp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConcurrencyStamp As String
  overload: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ConcurrencyStamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Name
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Name
  id: Name
  parent: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RoleViewModel.Name
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Name
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.NormalizedName
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.NormalizedName
  id: NormalizedName
  parent: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  langs:
  - csharp
  - vb
  name: NormalizedName
  nameWithType: RoleViewModel.NormalizedName
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.NormalizedName
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public string NormalizedName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NormalizedName As String
  overload: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.NormalizedName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Swastika.Cms.Lib.ViewModels.Account
  commentId: N:Swastika.Cms.Lib.ViewModels.Account
  isExternal: true
  name: Swastika.Cms.Lib.ViewModels.Account
  nameWithType: Swastika.Cms.Lib.ViewModels.Account
  fullName: Swastika.Cms.Lib.ViewModels.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  commentId: T:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  parent: Swastika.Domain.Data.ViewModels
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3
  name: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel)
  name.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.IsValid
  commentId: F:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.IsValid
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  name: IsValid
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.IsValid
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.IsValid
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).IsValid
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).IsValid
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.InitContext
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.InitContext
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  name: InitContext()
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.InitContext()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.InitContext()
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).InitContext()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).InitContext()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.InitModel
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.InitModel
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  name: InitModel()
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.InitModel()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.InitModel()
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).InitModel()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).InitModel()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.InitView(Swastika.Cms.Lib.Models.Account.AspNetRoles,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.InitView(Swastika.Cms.Lib.Models.Account.AspNetRoles,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitView(AspNetRoles, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.InitView(AspNetRoles, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.InitView(Swastika.Cms.Lib.Models.Account.AspNetRoles, System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).InitView(AspNetRoles, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).InitView(Swastika.Cms.Lib.Models.Account.AspNetRoles, System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.ParseView(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).ParseView(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Validate(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Validate(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Validate(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneAsync(AspNetRoles, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.CloneAsync(AspNetRoles, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetRoles, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).CloneAsync(AspNetRoles, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetRoles, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(AspNetRoles, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModelsAsync(RoleViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.CloneSubModelsAsync(RoleViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).CloneSubModelsAsync(RoleViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(RoleViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.RemoveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).RemoveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModelsAsync(RoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.RemoveRelatedModelsAsync(RoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).RemoveRelatedModelsAsync(RoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.SaveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).SaveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModelsAsync(AspNetRoles, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.SaveSubModelsAsync(AspNetRoles, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).SaveSubModelsAsync(AspNetRoles, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Clone(Swastika.Cms.Lib.Models.Account.AspNetRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Clone(Swastika.Cms.Lib.Models.Account.AspNetRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Clone(AspNetRoles, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Clone(AspNetRoles, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Clone(Swastika.Cms.Lib.Models.Account.AspNetRoles, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Clone(AspNetRoles, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Clone(Swastika.Cms.Lib.Models.Account.AspNetRoles, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(AspNetRoles, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModels(RoleViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.CloneSubModels(RoleViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).CloneSubModels(RoleViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(RoleViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.RemoveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).RemoveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModels(RoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.RemoveRelatedModels(RoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).RemoveRelatedModels(RoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.RoleViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    name: RoleViewModel
    nameWithType: RoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.SaveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).SaveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModels(AspNetRoles, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.SaveSubModels(AspNetRoles, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).SaveSubModels(AspNetRoles, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Repository
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Repository
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  name: Repository
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Repository
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Repository
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Repository
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Repository
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Exception
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Exception
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  name: Exception
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Exception
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Exception
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Exception
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Exception
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.IsClone
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.IsClone
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  name: IsClone
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.IsClone
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.IsClone
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).IsClone
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).IsClone
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.IsLazyLoad
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.IsLazyLoad
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  name: IsLazyLoad
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.IsLazyLoad
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).IsLazyLoad
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).IsLazyLoad
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ListSupportedCulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ListSupportedCulture
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  name: ListSupportedCulture
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.ListSupportedCulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.ListSupportedCulture
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).ListSupportedCulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).ListSupportedCulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Mapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Mapper
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  name: Mapper
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Mapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Mapper
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Mapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Mapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Model
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Model
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  name: Model
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Model
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Model
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Model
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Model
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ModelMapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.ModelMapper
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  name: ModelMapper
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.ModelMapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.ModelMapper
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).ModelMapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).ModelMapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.PageIndex
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.PageIndex
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  name: PageIndex
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.PageIndex
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.PageIndex
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).PageIndex
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).PageIndex
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.PageSize
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.PageSize
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  name: PageSize
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.PageSize
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.PageSize
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).PageSize
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).PageSize
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Priority
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Priority
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  name: Priority
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Priority
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Priority
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Priority
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Priority
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Status
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Status
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  name: Status
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Status
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Status
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Status
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Status
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Specificulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Specificulture
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  name: Specificulture
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Specificulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Specificulture
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Specificulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Specificulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Errors
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}.Errors
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetRoles,Swastika.Cms.Lib.ViewModels.Account.RoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  name: Errors
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetRoles, RoleViewModel>.Errors
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel>.Errors
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetRoles, RoleViewModel).Errors
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetRoles, Swastika.Cms.Lib.ViewModels.Account.RoleViewModel).Errors
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
  commentId: T:Swastika.Domain.Data.ViewModels.ViewModelBase`3
  isExternal: true
  name: ViewModelBase<TDbContext, TModel, TView>
  nameWithType: ViewModelBase<TDbContext, TModel, TView>
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView)
  name.vb: ViewModelBase(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels
  commentId: N:Swastika.Domain.Data.ViewModels
  isExternal: true
  name: Swastika.Domain.Data.ViewModels
  nameWithType: Swastika.Domain.Data.ViewModels
  fullName: Swastika.Domain.Data.ViewModels
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  commentId: F:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsValid
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsValid
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsValid
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsValid
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandView(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  isExternal: true
  name: InitContext()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  isExternal: true
  name: InitModel()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseModel(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseView(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Validate(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  isExternal: true
  name: Repository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Repository
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Repository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Repository
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Repository
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  isExternal: true
  name: Exception
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Exception
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Exception
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Exception
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Exception
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  isExternal: true
  name: IsClone
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsClone
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsClone
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsClone
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsClone
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  isExternal: true
  name: IsLazyLoad
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  isExternal: true
  name: ListSupportedCulture
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ListSupportedCulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ListSupportedCulture
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ListSupportedCulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ListSupportedCulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  isExternal: true
  name: Mapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Mapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Mapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Mapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Mapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  isExternal: true
  name: Model
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Model
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Model
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Model
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Model
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  isExternal: true
  name: ModelMapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  isExternal: true
  name: PageIndex
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.PageIndex
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.PageIndex
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).PageIndex
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).PageIndex
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  isExternal: true
  name: PageSize
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.PageSize
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.PageSize
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).PageSize
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).PageSize
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  isExternal: true
  name: Priority
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Priority
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Priority
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Priority
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Priority
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  isExternal: true
  name: Status
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Status
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Status
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Status
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Status
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  isExternal: true
  name: Specificulture
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Specificulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Specificulture
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Specificulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Specificulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  isExternal: true
  name: Errors
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Errors
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Errors
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Errors
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Errors
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.#ctor*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.#ctor
  isExternal: true
  name: RoleViewModel
  nameWithType: RoleViewModel.RoleViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RoleViewModel
- uid: Swastika.Cms.Lib.Models.Account.AspNetRoles
  commentId: T:Swastika.Cms.Lib.Models.Account.AspNetRoles
  parent: Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: AspNetRoles
  nameWithType: AspNetRoles
  fullName: Swastika.Cms.Lib.Models.Account.AspNetRoles
- uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
  commentId: T:Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
  parent: Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: SiocCmsAccountContext
  nameWithType: SiocCmsAccountContext
  fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Swastika.Cms.Lib.Models.Account
  commentId: N:Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: Swastika.Cms.Lib.Models.Account
  nameWithType: Swastika.Cms.Lib.Models.Account
  fullName: Swastika.Cms.Lib.Models.Account
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ParseModel*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ParseModel
  isExternal: true
  name: ParseModel
  nameWithType: RoleViewModel.ParseModel
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ParseModel
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RemoveRelatedModelsAsync*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RemoveRelatedModelsAsync
  isExternal: true
  name: RemoveRelatedModelsAsync
  nameWithType: RoleViewModel.RemoveRelatedModelsAsync
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.RemoveRelatedModelsAsync
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  parent: Swastika.Cms.Lib.ViewModels.Account
  isExternal: true
  name: RoleViewModel
  nameWithType: RoleViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<Boolean>>
  nameWithType: Task<RepositoryResponse<Boolean>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<System.Boolean>>
  nameWithType.vb: Task(Of RepositoryResponse(Of Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of System.Boolean))
  name.vb: Task(Of RepositoryResponse(Of Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Id*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Id
  isExternal: true
  name: Id
  nameWithType: RoleViewModel.Id
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ConcurrencyStamp*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ConcurrencyStamp
  isExternal: true
  name: ConcurrencyStamp
  nameWithType: RoleViewModel.ConcurrencyStamp
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.ConcurrencyStamp
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Name*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Name
  isExternal: true
  name: Name
  nameWithType: RoleViewModel.Name
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.Name
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.NormalizedName*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.NormalizedName
  isExternal: true
  name: NormalizedName
  nameWithType: RoleViewModel.NormalizedName
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel.NormalizedName
