### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles
  commentId: T:Mix.Cms.Lib.Models.Account.AspNetUserRoles
  id: AspNetUserRoles
  parent: Mix.Cms.Lib.Models.Account
  children:
  - Mix.Cms.Lib.Models.Account.AspNetUserRoles.#ctor
  - Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUser
  - Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUserId
  - Mix.Cms.Lib.Models.Account.AspNetUserRoles.Role
  - Mix.Cms.Lib.Models.Account.AspNetUserRoles.RoleId
  - Mix.Cms.Lib.Models.Account.AspNetUserRoles.User
  - Mix.Cms.Lib.Models.Account.AspNetUserRoles.UserId
  langs:
  - csharp
  - vb
  name: AspNetUserRoles
  nameWithType: AspNetUserRoles
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles
  type: Class
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: 'public class AspNetUserRoles : Object'
    content.vb: >-
      Public Class AspNetUserRoles
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.#ctor
  commentId: M:Mix.Cms.Lib.Models.Account.AspNetUserRoles.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.Models.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: AspNetUserRoles()
  nameWithType: AspNetUserRoles.AspNetUserRoles()
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.AspNetUserRoles()
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public AspNetUserRoles()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.Models.Account.AspNetUserRoles.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.UserId
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserRoles.UserId
  id: UserId
  parent: Mix.Cms.Lib.Models.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: AspNetUserRoles.UserId
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.UserId
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string UserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserId As String
  overload: Mix.Cms.Lib.Models.Account.AspNetUserRoles.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.RoleId
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserRoles.RoleId
  id: RoleId
  parent: Mix.Cms.Lib.Models.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: RoleId
  nameWithType: AspNetUserRoles.RoleId
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.RoleId
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string RoleId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RoleId As String
  overload: Mix.Cms.Lib.Models.Account.AspNetUserRoles.RoleId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUserId
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUserId
  id: ApplicationUserId
  parent: Mix.Cms.Lib.Models.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: ApplicationUserId
  nameWithType: AspNetUserRoles.ApplicationUserId
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUserId
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string ApplicationUserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplicationUserId As String
  overload: Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUser
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUser
  id: ApplicationUser
  parent: Mix.Cms.Lib.Models.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: ApplicationUser
  nameWithType: AspNetUserRoles.ApplicationUser
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUser
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public AspNetUsers ApplicationUser { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Models.Account.AspNetUsers
    content.vb: Public Property ApplicationUser As AspNetUsers
  overload: Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUser*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.Role
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserRoles.Role
  id: Role
  parent: Mix.Cms.Lib.Models.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: AspNetUserRoles.Role
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.Role
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public AspNetRoles Role { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Models.Account.AspNetRoles
    content.vb: Public Property Role As AspNetRoles
  overload: Mix.Cms.Lib.Models.Account.AspNetUserRoles.Role*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.User
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserRoles.User
  id: User
  parent: Mix.Cms.Lib.Models.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: User
  nameWithType: AspNetUserRoles.User
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.User
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public AspNetUsers User { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Models.Account.AspNetUsers
    content.vb: Public Property User As AspNetUsers
  overload: Mix.Cms.Lib.Models.Account.AspNetUserRoles.User*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Lib.Models.Account
  commentId: N:Mix.Cms.Lib.Models.Account
  isExternal: true
  name: Mix.Cms.Lib.Models.Account
  nameWithType: Mix.Cms.Lib.Models.Account
  fullName: Mix.Cms.Lib.Models.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.#ctor*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserRoles.#ctor
  isExternal: true
  name: AspNetUserRoles
  nameWithType: AspNetUserRoles.AspNetUserRoles
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.AspNetUserRoles
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.UserId*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserRoles.UserId
  isExternal: true
  name: UserId
  nameWithType: AspNetUserRoles.UserId
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.UserId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.RoleId*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserRoles.RoleId
  isExternal: true
  name: RoleId
  nameWithType: AspNetUserRoles.RoleId
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.RoleId
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUserId*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUserId
  isExternal: true
  name: ApplicationUserId
  nameWithType: AspNetUserRoles.ApplicationUserId
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUserId
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUser*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUser
  isExternal: true
  name: ApplicationUser
  nameWithType: AspNetUserRoles.ApplicationUser
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.ApplicationUser
- uid: Mix.Cms.Lib.Models.Account.AspNetUsers
  commentId: T:Mix.Cms.Lib.Models.Account.AspNetUsers
  parent: Mix.Cms.Lib.Models.Account
  isExternal: true
  name: AspNetUsers
  nameWithType: AspNetUsers
  fullName: Mix.Cms.Lib.Models.Account.AspNetUsers
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.Role*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserRoles.Role
  isExternal: true
  name: Role
  nameWithType: AspNetUserRoles.Role
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.Role
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles
  commentId: T:Mix.Cms.Lib.Models.Account.AspNetRoles
  parent: Mix.Cms.Lib.Models.Account
  isExternal: true
  name: AspNetRoles
  nameWithType: AspNetRoles
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles
- uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles.User*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserRoles.User
  isExternal: true
  name: User
  nameWithType: AspNetUserRoles.User
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles.User
