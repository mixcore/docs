### YamlMime:ManagedReference
items:
- uid: Swastika.Domain.Core.ViewModels
  commentId: N:Swastika.Domain.Core.ViewModels
  id: Swastika.Domain.Core.ViewModels
  children:
  - Swastika.Domain.Core.ViewModels.ApiResult`1
  - Swastika.Domain.Core.ViewModels.EntityField
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  - Swastika.Domain.Core.ViewModels.FileStreamViewModel
  - Swastika.Domain.Core.ViewModels.PaginationModel`1
  - Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  - Swastika.Domain.Core.ViewModels.RequestPaging
  - Swastika.Domain.Core.ViewModels.ViewModelBase`2
  langs:
  - csharp
  - vb
  name: Swastika.Domain.Core.ViewModels
  nameWithType: Swastika.Domain.Core.ViewModels
  fullName: Swastika.Domain.Core.ViewModels
  type: Namespace
  assemblies:
  - Swastika
references:
- uid: Swastika.Domain.Core.ViewModels.ApiResult`1
  commentId: T:Swastika.Domain.Core.ViewModels.ApiResult`1
  isExternal: true
  name: ApiResult<T>
  nameWithType: ApiResult<T>
  fullName: Swastika.Domain.Core.ViewModels.ApiResult<T>
  nameWithType.vb: ApiResult(Of T)
  fullName.vb: Swastika.Domain.Core.ViewModels.ApiResult(Of T)
  name.vb: ApiResult(Of T)
  spec.csharp:
  - uid: Swastika.Domain.Core.ViewModels.ApiResult`1
    name: ApiResult
    nameWithType: ApiResult
    fullName: Swastika.Domain.Core.ViewModels.ApiResult
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Core.ViewModels.ApiResult`1
    name: ApiResult
    nameWithType: ApiResult
    fullName: Swastika.Domain.Core.ViewModels.ApiResult
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels.EntityField
  commentId: T:Swastika.Domain.Core.ViewModels.EntityField
  isExternal: true
  name: EntityField
  nameWithType: EntityField
  fullName: Swastika.Domain.Core.ViewModels.EntityField
- uid: Swastika.Domain.Core.ViewModels.FileStreamViewModel
  commentId: T:Swastika.Domain.Core.ViewModels.FileStreamViewModel
  isExternal: true
  name: FileStreamViewModel
  nameWithType: FileStreamViewModel
  fullName: Swastika.Domain.Core.ViewModels.FileStreamViewModel
- uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
  commentId: T:Swastika.Domain.Core.ViewModels.PaginationModel`1
  isExternal: true
  name: PaginationModel<T>
  nameWithType: PaginationModel<T>
  fullName: Swastika.Domain.Core.ViewModels.PaginationModel<T>
  nameWithType.vb: PaginationModel(Of T)
  fullName.vb: Swastika.Domain.Core.ViewModels.PaginationModel(Of T)
  name.vb: PaginationModel(Of T)
  spec.csharp:
  - uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Swastika.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Swastika.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  commentId: T:Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  isExternal: true
  name: RepositoryResponse<TResult>
  nameWithType: RepositoryResponse<TResult>
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>
  nameWithType.vb: RepositoryResponse(Of TResult)
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult)
  name.vb: RepositoryResponse(Of TResult)
  spec.csharp:
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels.RequestPaging
  commentId: T:Swastika.Domain.Core.ViewModels.RequestPaging
  parent: Swastika.Domain.Core.ViewModels
  isExternal: true
  name: RequestPaging
  nameWithType: RequestPaging
  fullName: Swastika.Domain.Core.ViewModels.RequestPaging
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  commentId: T:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  isExternal: true
  name: ExpandViewModelBase<TDbContext, TModel>
  nameWithType: ExpandViewModelBase<TDbContext, TModel>
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel)
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel)
  name.vb: ExpandViewModelBase(Of TDbContext, TModel)
  spec.csharp:
  - uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
    name: ExpandViewModelBase
    nameWithType: ExpandViewModelBase
    fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
    name: ExpandViewModelBase
    nameWithType: ExpandViewModelBase
    fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels.ViewModelBase`2
  commentId: T:Swastika.Domain.Core.ViewModels.ViewModelBase`2
  isExternal: true
  name: ViewModelBase<TModel, TView>
  nameWithType: ViewModelBase<TModel, TView>
  fullName: Swastika.Domain.Core.ViewModels.ViewModelBase<TModel, TView>
  nameWithType.vb: ViewModelBase(Of TModel, TView)
  fullName.vb: Swastika.Domain.Core.ViewModels.ViewModelBase(Of TModel, TView)
  name.vb: ViewModelBase(Of TModel, TView)
  spec.csharp:
  - uid: Swastika.Domain.Core.ViewModels.ViewModelBase`2
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Core.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Core.ViewModels.ViewModelBase`2
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Core.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels
  commentId: N:Swastika.Domain.Core.ViewModels
  isExternal: true
  name: Swastika.Domain.Core.ViewModels
  nameWithType: Swastika.Domain.Core.ViewModels
  fullName: Swastika.Domain.Core.ViewModels
