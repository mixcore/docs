### YamlMime:ManagedReference
items:
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  commentId: T:Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  id: ApiTemplateController
  parent: Swastka.IO.Cms.Api.Controllers
  children:
  - Swastka.IO.Cms.Api.Controllers.ApiTemplateController.#ctor
  - Swastka.IO.Cms.Api.Controllers.ApiTemplateController.BEDetails(System.Int32)
  - Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Details(System.Int32)
  - Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.Data.OData.Query.OrderByDirection)
  - Swastka.IO.Cms.Api.Controllers.ApiTemplateController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging)
  - Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Post(Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel)
  - Swastka.IO.Cms.Api.Controllers.ApiTemplateController.SaveFields(System.Int32,System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField})
  - Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Search(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.Data.OData.Query.OrderByDirection)
  langs:
  - csharp
  - vb
  name: ApiTemplateController
  nameWithType: ApiTemplateController
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  type: Class
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.IO.Cms.Api.Controllers
  syntax:
    content: 'public class ApiTemplateController : BaseApiController<SiocCmsContext, SiocTemplate>'
    content.vb: >-
      Public Class ApiTemplateController
          Inherits BaseApiController(Of SiocCmsContext, SiocTemplate)
  inheritance:
  - System.Object
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  inheritedMembers:
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._repo
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._domain
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._lang
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._env
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.BadRequest(System.Object)
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.NotFound(System.Object)
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.GetErrorResult(System.String,System.String)
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.GetLanguage
  - Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.GetSuccessResult``1({TResult})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Details(System.Int32)
  commentId: M:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Details(System.Int32)
  id: Details(System.Int32)
  parent: Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  langs:
  - csharp
  - vb
  name: Details(Int32)
  nameWithType: ApiTemplateController.Details(Int32)
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Details(System.Int32)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.IO.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<FETemplateViewModel>> Details(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.FrontEnd.FETemplateViewModel}}
    content.vb: Public Function Details(id As Integer) As Task(Of RepositoryResponse(Of FETemplateViewModel))
  overload: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Details*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.BEDetails(System.Int32)
  commentId: M:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.BEDetails(System.Int32)
  id: BEDetails(System.Int32)
  parent: Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  langs:
  - csharp
  - vb
  name: BEDetails(Int32)
  nameWithType: ApiTemplateController.BEDetails(Int32)
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.BEDetails(System.Int32)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.IO.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<BETemplateViewModel>> BEDetails(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel}}
    content.vb: Public Function BEDetails(id As Integer) As Task(Of RepositoryResponse(Of BETemplateViewModel))
  overload: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.BEDetails*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.Data.OData.Query.OrderByDirection)
  commentId: M:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.Data.OData.Query.OrderByDirection)
  id: Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.Data.OData.Query.OrderByDirection)
  parent: Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  langs:
  - csharp
  - vb
  name: Get(Nullable<Int32>, Nullable<Int32>, String, OrderByDirection)
  nameWithType: ApiTemplateController.Get(Nullable<Int32>, Nullable<Int32>, String, OrderByDirection)
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Get(System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.String, Microsoft.Data.OData.Query.OrderByDirection)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.IO.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<PaginationModel<InfoTemplateViewModel>>> Get(Nullable<int> PageSize, Nullable<int> PageIndex, string orderBy = "Id", OrderByDirection direction)
    parameters:
    - id: PageSize
      type: System.Nullable{System.Int32}
    - id: PageIndex
      type: System.Nullable{System.Int32}
    - id: orderBy
      type: System.String
    - id: direction
      type: Microsoft.Data.OData.Query.OrderByDirection
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.Info.InfoTemplateViewModel}}}
    content.vb: Public Function Get(PageSize As Nullable(Of Integer), PageIndex As Nullable(Of Integer), orderBy As String = "Id", direction As OrderByDirection) As Task(Of RepositoryResponse(Of PaginationModel(Of InfoTemplateViewModel)))
  overload: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Get*
  nameWithType.vb: ApiTemplateController.Get(Nullable(Of Int32), Nullable(Of Int32), String, OrderByDirection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Get(System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.String, Microsoft.Data.OData.Query.OrderByDirection)
  name.vb: Get(Nullable(Of Int32), Nullable(Of Int32), String, OrderByDirection)
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Search(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.Data.OData.Query.OrderByDirection)
  commentId: M:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Search(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.Data.OData.Query.OrderByDirection)
  id: Search(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Microsoft.Data.OData.Query.OrderByDirection)
  parent: Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  langs:
  - csharp
  - vb
  name: Search(String, String, Nullable<Int32>, Nullable<Int32>, String, OrderByDirection)
  nameWithType: ApiTemplateController.Search(String, String, Nullable<Int32>, Nullable<Int32>, String, OrderByDirection)
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Search(System.String, System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.String, Microsoft.Data.OData.Query.OrderByDirection)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.IO.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<PaginationModel<InfoTemplateViewModel>>> Search(string keyword = null, string description = null, Nullable<int> PageSize = null, Nullable<int> PageIndex = null, string orderBy = "Id", OrderByDirection direction)
    parameters:
    - id: keyword
      type: System.String
    - id: description
      type: System.String
    - id: PageSize
      type: System.Nullable{System.Int32}
    - id: PageIndex
      type: System.Nullable{System.Int32}
    - id: orderBy
      type: System.String
    - id: direction
      type: Microsoft.Data.OData.Query.OrderByDirection
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.Info.InfoTemplateViewModel}}}
    content.vb: Public Function Search(keyword As String = Nothing, description As String = Nothing, PageSize As Nullable(Of Integer) = Nothing, PageIndex As Nullable(Of Integer) = Nothing, orderBy As String = "Id", direction As OrderByDirection) As Task(Of RepositoryResponse(Of PaginationModel(Of InfoTemplateViewModel)))
  overload: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Search*
  nameWithType.vb: ApiTemplateController.Search(String, String, Nullable(Of Int32), Nullable(Of Int32), String, OrderByDirection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Search(System.String, System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.String, Microsoft.Data.OData.Query.OrderByDirection)
  name.vb: Search(String, String, Nullable(Of Int32), Nullable(Of Int32), String, OrderByDirection)
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Post(Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel)
  commentId: M:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Post(Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel)
  id: Post(Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel)
  parent: Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  langs:
  - csharp
  - vb
  name: Post(BETemplateViewModel)
  nameWithType: ApiTemplateController.Post(BETemplateViewModel)
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Post(Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.IO.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<BETemplateViewModel>> Post(BETemplateViewModel model)
    parameters:
    - id: model
      type: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel}}
    content.vb: Public Function Post(model As BETemplateViewModel) As Task(Of RepositoryResponse(Of BETemplateViewModel))
  overload: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Post*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.SaveFields(System.Int32,System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField})
  commentId: M:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.SaveFields(System.Int32,System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField})
  id: SaveFields(System.Int32,System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField})
  parent: Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  langs:
  - csharp
  - vb
  name: SaveFields(Int32, List<EntityField>)
  nameWithType: ApiTemplateController.SaveFields(Int32, List<EntityField>)
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.SaveFields(System.Int32, System.Collections.Generic.List<Swastika.Domain.Core.ViewModels.EntityField>)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.IO.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<bool>> SaveFields(int id, List<EntityField> fields)
    parameters:
    - id: id
      type: System.Int32
    - id: fields
      type: System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField}
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
    content.vb: Public Function SaveFields(id As Integer, fields As List(Of EntityField)) As Task(Of RepositoryResponse(Of Boolean))
  overload: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.SaveFields*
  nameWithType.vb: ApiTemplateController.SaveFields(Int32, List(Of EntityField))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.SaveFields(System.Int32, System.Collections.Generic.List(Of Swastika.Domain.Core.ViewModels.EntityField))
  name.vb: SaveFields(Int32, List(Of EntityField))
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging)
  commentId: M:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging)
  id: GetList(Swastika.Domain.Core.ViewModels.RequestPaging)
  parent: Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  langs:
  - csharp
  - vb
  name: GetList(RequestPaging)
  nameWithType: ApiTemplateController.GetList(RequestPaging)
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.GetList(Swastika.Domain.Core.ViewModels.RequestPaging)
  type: Method
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.IO.Cms.Api.Controllers
  syntax:
    content: public Task<RepositoryResponse<PaginationModel<BETemplateViewModel>>> GetList(RequestPaging request)
    parameters:
    - id: request
      type: Swastika.Domain.Core.ViewModels.RequestPaging
    return:
      type: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel}}}
    content.vb: Public Function GetList(request As RequestPaging) As Task(Of RepositoryResponse(Of PaginationModel(Of BETemplateViewModel)))
  overload: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.GetList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.#ctor
  commentId: M:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.#ctor
  id: '#ctor'
  parent: Swastka.IO.Cms.Api.Controllers.ApiTemplateController
  langs:
  - csharp
  - vb
  name: ApiTemplateController()
  nameWithType: ApiTemplateController.ApiTemplateController()
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.ApiTemplateController()
  type: Constructor
  source:
    path: Swastka.Cms.Api
    isExternal: true
  assemblies:
  - Swastka.Cms.Api
  namespace: Swastka.IO.Cms.Api.Controllers
  syntax:
    content: public ApiTemplateController()
    content.vb: Public Sub New
  overload: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Swastka.IO.Cms.Api.Controllers
  commentId: N:Swastka.IO.Cms.Api.Controllers
  isExternal: false
  name: Swastka.IO.Cms.Api.Controllers
  nameWithType: Swastka.IO.Cms.Api.Controllers
  fullName: Swastka.IO.Cms.Api.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  commentId: T:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  parent: Swastika.Api.Controllers
  definition: Swastika.Api.Controllers.BaseApiController`2
  name: BaseApiController<SiocCmsContext, SiocTemplate>
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate)
  name.vb: BaseApiController(Of SiocCmsContext, SiocTemplate)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2
    name: BaseApiController
    nameWithType: BaseApiController
    fullName: Swastika.Api.Controllers.BaseApiController
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.Models.Cms.SiocCmsContext
    name: SiocCmsContext
    nameWithType: SiocCmsContext
    fullName: Swastika.Cms.Lib.Models.Cms.SiocCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Cms.SiocTemplate
    name: SiocTemplate
    nameWithType: SiocTemplate
    fullName: Swastika.Cms.Lib.Models.Cms.SiocTemplate
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2
    name: BaseApiController
    nameWithType: BaseApiController
    fullName: Swastika.Api.Controllers.BaseApiController
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.Models.Cms.SiocCmsContext
    name: SiocCmsContext
    nameWithType: SiocCmsContext
    fullName: Swastika.Cms.Lib.Models.Cms.SiocCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Cms.SiocTemplate
    name: SiocTemplate
    nameWithType: SiocTemplate
    fullName: Swastika.Cms.Lib.Models.Cms.SiocTemplate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._repo
  commentId: F:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._repo
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2._repo
  name: _repo
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>._repo
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>._repo
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate)._repo
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate)._repo
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._domain
  commentId: F:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._domain
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2._domain
  name: _domain
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>._domain
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>._domain
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate)._domain
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate)._domain
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._lang
  commentId: F:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._lang
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2._lang
  name: _lang
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>._lang
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>._lang
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate)._lang
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate)._lang
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._env
  commentId: F:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}._env
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2._env
  name: _env
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>._env
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>._env
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate)._env
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate)._env
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.UploadFileAsync(IFormFile, String)
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate).UploadFileAsync(IFormFile, String)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.UploadFileAsync
    fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseApiController(Of SiocCmsContext, SiocTemplate).UploadFileAsync
    fullName: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  name: BadRequest(ModelStateDictionary)
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.BadRequest(ModelStateDictionary)
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate).BadRequest(ModelStateDictionary)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController(Of SiocCmsContext, SiocTemplate).BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.BadRequest(System.Object)
  commentId: M:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.BadRequest(System.Object)
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2.BadRequest(System.Object)
  name: BadRequest(Object)
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.BadRequest(Object)
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.BadRequest(System.Object)
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate).BadRequest(Object)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).BadRequest(System.Object)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController(Of SiocCmsContext, SiocTemplate).BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.NotFound(System.Object)
  commentId: M:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.NotFound(System.Object)
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2.NotFound(System.Object)
  name: NotFound(Object)
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.NotFound(Object)
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.NotFound(System.Object)
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate).NotFound(Object)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).NotFound(System.Object)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.NotFound
    fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController(Of SiocCmsContext, SiocTemplate).NotFound
    fullName: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.OnActionExecuting(ActionExecutingContext)
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate).OnActionExecuting(ActionExecutingContext)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.OnActionExecuting
    fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController(Of SiocCmsContext, SiocTemplate).OnActionExecuting
    fullName: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.GetErrorResult(System.String,System.String)
  commentId: M:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.GetErrorResult(System.String,System.String)
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2.GetErrorResult(System.String,System.String)
  name: GetErrorResult(String, String)
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.GetErrorResult(String, String)
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.GetErrorResult(System.String, System.String)
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate).GetErrorResult(String, String)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).GetErrorResult(System.String, System.String)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.GetErrorResult
    fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController(Of SiocCmsContext, SiocTemplate).GetErrorResult
    fullName: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.GetLanguage
  commentId: M:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.GetLanguage
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2.GetLanguage
  name: GetLanguage()
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.GetLanguage()
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.GetLanguage()
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate).GetLanguage()
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).GetLanguage()
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.GetLanguage
    fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController(Of SiocCmsContext, SiocTemplate).GetLanguage
    fullName: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.GetSuccessResult``1({TResult})
  commentId: M:Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}.GetSuccessResult``1(``0)
  parent: Swastika.Api.Controllers.BaseApiController{Swastika.Cms.Lib.Models.Cms.SiocCmsContext,Swastika.Cms.Lib.Models.Cms.SiocTemplate}
  definition: Swastika.Api.Controllers.BaseApiController`2.GetSuccessResult``1(``0)
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.GetSuccessResult<TResult>(TResult)
  fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.GetSuccessResult<TResult>(TResult)
  nameWithType.vb: BaseApiController(Of SiocCmsContext, SiocTemplate).GetSuccessResult(Of TResult)(TResult)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetSuccessResult``1(``0)
    name: GetSuccessResult<TResult>
    nameWithType: BaseApiController<SiocCmsContext, SiocTemplate>.GetSuccessResult<TResult>
    fullName: Swastika.Api.Controllers.BaseApiController<Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate>.GetSuccessResult<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetSuccessResult``1(``0)
    name: GetSuccessResult(Of TResult)
    nameWithType: BaseApiController(Of SiocCmsContext, SiocTemplate).GetSuccessResult(Of TResult)
    fullName: Swastika.Api.Controllers.BaseApiController(Of Swastika.Cms.Lib.Models.Cms.SiocCmsContext, Swastika.Cms.Lib.Models.Cms.SiocTemplate).GetSuccessResult(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Api.Controllers.BaseApiController`2
  commentId: T:Swastika.Api.Controllers.BaseApiController`2
  isExternal: true
  name: BaseApiController<TDbContext, TModel>
  nameWithType: BaseApiController<TDbContext, TModel>
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>
  nameWithType.vb: BaseApiController(Of TDbContext, TModel)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel)
  name.vb: BaseApiController(Of TDbContext, TModel)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2
    name: BaseApiController
    nameWithType: BaseApiController
    fullName: Swastika.Api.Controllers.BaseApiController
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2
    name: BaseApiController
    nameWithType: BaseApiController
    fullName: Swastika.Api.Controllers.BaseApiController
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers
  commentId: N:Swastika.Api.Controllers
  isExternal: false
  name: Swastika.Api.Controllers
  nameWithType: Swastika.Api.Controllers
  fullName: Swastika.Api.Controllers
- uid: Swastika.Api.Controllers.BaseApiController`2._repo
  commentId: F:Swastika.Api.Controllers.BaseApiController`2._repo
  isExternal: true
  name: _repo
  nameWithType: BaseApiController<TDbContext, TModel>._repo
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>._repo
  nameWithType.vb: BaseApiController(Of TDbContext, TModel)._repo
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel)._repo
- uid: Swastika.Api.Controllers.BaseApiController`2._domain
  commentId: F:Swastika.Api.Controllers.BaseApiController`2._domain
  isExternal: true
  name: _domain
  nameWithType: BaseApiController<TDbContext, TModel>._domain
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>._domain
  nameWithType.vb: BaseApiController(Of TDbContext, TModel)._domain
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel)._domain
- uid: Swastika.Api.Controllers.BaseApiController`2._lang
  commentId: F:Swastika.Api.Controllers.BaseApiController`2._lang
  isExternal: true
  name: _lang
  nameWithType: BaseApiController<TDbContext, TModel>._lang
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>._lang
  nameWithType.vb: BaseApiController(Of TDbContext, TModel)._lang
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel)._lang
- uid: Swastika.Api.Controllers.BaseApiController`2._env
  commentId: F:Swastika.Api.Controllers.BaseApiController`2._env
  isExternal: true
  name: _env
  nameWithType: BaseApiController<TDbContext, TModel>._env
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>._env
  nameWithType.vb: BaseApiController(Of TDbContext, TModel)._env
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel)._env
- uid: Swastika.Api.Controllers.BaseApiController`2.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastika.Api.Controllers.BaseApiController`2.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  isExternal: true
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseApiController<TDbContext, TModel>.UploadFileAsync(IFormFile, String)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel).UploadFileAsync(IFormFile, String)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseApiController<TDbContext, TModel>.UploadFileAsync
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseApiController(Of TDbContext, TModel).UploadFileAsync
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`2.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:Swastika.Api.Controllers.BaseApiController`2.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  isExternal: true
  name: BadRequest(ModelStateDictionary)
  nameWithType: BaseApiController<TDbContext, TModel>.BadRequest(ModelStateDictionary)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel).BadRequest(ModelStateDictionary)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController<TDbContext, TModel>.BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    name: BadRequest
    nameWithType: BaseApiController(Of TDbContext, TModel).BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    name: ModelStateDictionary
    nameWithType: ModelStateDictionary
    fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`2.BadRequest(System.Object)
  commentId: M:Swastika.Api.Controllers.BaseApiController`2.BadRequest(System.Object)
  isExternal: true
  name: BadRequest(Object)
  nameWithType: BaseApiController<TDbContext, TModel>.BadRequest(Object)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.BadRequest(System.Object)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel).BadRequest(Object)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).BadRequest(System.Object)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController<TDbContext, TModel>.BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.BadRequest(System.Object)
    name: BadRequest
    nameWithType: BaseApiController(Of TDbContext, TModel).BadRequest
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).BadRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`2.NotFound(System.Object)
  commentId: M:Swastika.Api.Controllers.BaseApiController`2.NotFound(System.Object)
  isExternal: true
  name: NotFound(Object)
  nameWithType: BaseApiController<TDbContext, TModel>.NotFound(Object)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.NotFound(System.Object)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel).NotFound(Object)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).NotFound(System.Object)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController<TDbContext, TModel>.NotFound
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.NotFound(System.Object)
    name: NotFound
    nameWithType: BaseApiController(Of TDbContext, TModel).NotFound
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).NotFound
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`2.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastika.Api.Controllers.BaseApiController`2.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  isExternal: true
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController<TDbContext, TModel>.OnActionExecuting(ActionExecutingContext)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel).OnActionExecuting(ActionExecutingContext)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController<TDbContext, TModel>.OnActionExecuting
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController(Of TDbContext, TModel).OnActionExecuting
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`2.GetErrorResult(System.String,System.String)
  commentId: M:Swastika.Api.Controllers.BaseApiController`2.GetErrorResult(System.String,System.String)
  isExternal: true
  name: GetErrorResult(String, String)
  nameWithType: BaseApiController<TDbContext, TModel>.GetErrorResult(String, String)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.GetErrorResult(System.String, System.String)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel).GetErrorResult(String, String)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).GetErrorResult(System.String, System.String)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController<TDbContext, TModel>.GetErrorResult
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetErrorResult(System.String,System.String)
    name: GetErrorResult
    nameWithType: BaseApiController(Of TDbContext, TModel).GetErrorResult
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).GetErrorResult
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`2.GetLanguage
  commentId: M:Swastika.Api.Controllers.BaseApiController`2.GetLanguage
  isExternal: true
  name: GetLanguage()
  nameWithType: BaseApiController<TDbContext, TModel>.GetLanguage()
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.GetLanguage()
  nameWithType.vb: BaseApiController(Of TDbContext, TModel).GetLanguage()
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).GetLanguage()
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController<TDbContext, TModel>.GetLanguage
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController(Of TDbContext, TModel).GetLanguage
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Api.Controllers.BaseApiController`2.GetSuccessResult``1(``0)
  commentId: M:Swastika.Api.Controllers.BaseApiController`2.GetSuccessResult``1(``0)
  isExternal: true
  name: GetSuccessResult<TResult>(TResult)
  nameWithType: BaseApiController<TDbContext, TModel>.GetSuccessResult<TResult>(TResult)
  fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.GetSuccessResult<TResult>(TResult)
  nameWithType.vb: BaseApiController(Of TDbContext, TModel).GetSuccessResult(Of TResult)(TResult)
  fullName.vb: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).GetSuccessResult(Of TResult)(TResult)
  name.vb: GetSuccessResult(Of TResult)(TResult)
  spec.csharp:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetSuccessResult``1(``0)
    name: GetSuccessResult<TResult>
    nameWithType: BaseApiController<TDbContext, TModel>.GetSuccessResult<TResult>
    fullName: Swastika.Api.Controllers.BaseApiController<TDbContext, TModel>.GetSuccessResult<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Api.Controllers.BaseApiController`2.GetSuccessResult``1(``0)
    name: GetSuccessResult(Of TResult)
    nameWithType: BaseApiController(Of TDbContext, TModel).GetSuccessResult(Of TResult)
    fullName: Swastika.Api.Controllers.BaseApiController(Of TDbContext, TModel).GetSuccessResult(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Details*
  commentId: Overload:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Details
  isExternal: true
  name: Details
  nameWithType: ApiTemplateController.Details
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Details
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.FrontEnd.FETemplateViewModel}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.FrontEnd.FETemplateViewModel}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<FETemplateViewModel>>
  nameWithType: Task<RepositoryResponse<FETemplateViewModel>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Cms.Lib.ViewModels.FrontEnd.FETemplateViewModel>>
  nameWithType.vb: Task(Of RepositoryResponse(Of FETemplateViewModel))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Cms.Lib.ViewModels.FrontEnd.FETemplateViewModel))
  name.vb: Task(Of RepositoryResponse(Of FETemplateViewModel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.FrontEnd.FETemplateViewModel
    name: FETemplateViewModel
    nameWithType: FETemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.FrontEnd.FETemplateViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.FrontEnd.FETemplateViewModel
    name: FETemplateViewModel
    nameWithType: FETemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.FrontEnd.FETemplateViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.BEDetails*
  commentId: Overload:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.BEDetails
  isExternal: true
  name: BEDetails
  nameWithType: ApiTemplateController.BEDetails
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.BEDetails
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<BETemplateViewModel>>
  nameWithType: Task<RepositoryResponse<BETemplateViewModel>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel>>
  nameWithType.vb: Task(Of RepositoryResponse(Of BETemplateViewModel))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel))
  name.vb: Task(Of RepositoryResponse(Of BETemplateViewModel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
    name: BETemplateViewModel
    nameWithType: BETemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
    name: BETemplateViewModel
    nameWithType: BETemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Get*
  commentId: Overload:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Get
  isExternal: true
  name: Get
  nameWithType: ApiTemplateController.Get
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Get
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Data.OData.Query.OrderByDirection
  isExternal: true
  name: OrderByDirection
  nameWithType: OrderByDirection
  fullName: Microsoft.Data.OData.Query.OrderByDirection
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.Info.InfoTemplateViewModel}}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.Info.InfoTemplateViewModel}}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<PaginationModel<InfoTemplateViewModel>>>
  nameWithType: Task<RepositoryResponse<PaginationModel<InfoTemplateViewModel>>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Domain.Core.ViewModels.PaginationModel<Swastika.Cms.Lib.ViewModels.Info.InfoTemplateViewModel>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of PaginationModel(Of InfoTemplateViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Domain.Core.ViewModels.PaginationModel(Of Swastika.Cms.Lib.ViewModels.Info.InfoTemplateViewModel)))
  name.vb: Task(Of RepositoryResponse(Of PaginationModel(Of InfoTemplateViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Swastika.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.Info.InfoTemplateViewModel
    name: InfoTemplateViewModel
    nameWithType: InfoTemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Info.InfoTemplateViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Swastika.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.Info.InfoTemplateViewModel
    name: InfoTemplateViewModel
    nameWithType: InfoTemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Info.InfoTemplateViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Search*
  commentId: Overload:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Search
  isExternal: true
  name: Search
  nameWithType: ApiTemplateController.Search
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Search
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Post*
  commentId: Overload:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Post
  isExternal: true
  name: Post
  nameWithType: ApiTemplateController.Post
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.Post
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
  parent: Swastika.Cms.Lib.ViewModels.BackEnd
  isExternal: true
  name: BETemplateViewModel
  nameWithType: BETemplateViewModel
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
- uid: Swastika.Cms.Lib.ViewModels.BackEnd
  commentId: N:Swastika.Cms.Lib.ViewModels.BackEnd
  isExternal: false
  name: Swastika.Cms.Lib.ViewModels.BackEnd
  nameWithType: Swastika.Cms.Lib.ViewModels.BackEnd
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.SaveFields*
  commentId: Overload:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.SaveFields
  isExternal: true
  name: SaveFields
  nameWithType: ApiTemplateController.SaveFields
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.SaveFields
- uid: System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField}
  commentId: '!:System.Collections.Generic.List{Swastika.Domain.Core.ViewModels.EntityField}'
  definition: System.Collections.Generic.List`1
  name: List<EntityField>
  nameWithType: List<EntityField>
  fullName: System.Collections.Generic.List<Swastika.Domain.Core.ViewModels.EntityField>
  nameWithType.vb: List(Of EntityField)
  fullName.vb: System.Collections.Generic.List(Of Swastika.Domain.Core.ViewModels.EntityField)
  name.vb: List(Of EntityField)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.EntityField
    name: EntityField
    nameWithType: EntityField
    fullName: Swastika.Domain.Core.ViewModels.EntityField
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.EntityField
    name: EntityField
    nameWithType: EntityField
    fullName: Swastika.Domain.Core.ViewModels.EntityField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<Boolean>>
  nameWithType: Task<RepositoryResponse<Boolean>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<System.Boolean>>
  nameWithType.vb: Task(Of RepositoryResponse(Of Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of System.Boolean))
  name.vb: Task(Of RepositoryResponse(Of Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.GetList*
  commentId: Overload:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.GetList
  isExternal: true
  name: GetList
  nameWithType: ApiTemplateController.GetList
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.GetList
- uid: Swastika.Domain.Core.ViewModels.RequestPaging
  commentId: T:Swastika.Domain.Core.ViewModels.RequestPaging
  parent: Swastika.Domain.Core.ViewModels
  isExternal: true
  name: RequestPaging
  nameWithType: RequestPaging
  fullName: Swastika.Domain.Core.ViewModels.RequestPaging
- uid: System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel}}}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Domain.Core.ViewModels.RepositoryResponse{Swastika.Domain.Core.ViewModels.PaginationModel{Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel}}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<PaginationModel<BETemplateViewModel>>>
  nameWithType: Task<RepositoryResponse<PaginationModel<BETemplateViewModel>>>
  fullName: System.Threading.Tasks.Task<Swastika.Domain.Core.ViewModels.RepositoryResponse<Swastika.Domain.Core.ViewModels.PaginationModel<Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of PaginationModel(Of BETemplateViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Domain.Core.ViewModels.RepositoryResponse(Of Swastika.Domain.Core.ViewModels.PaginationModel(Of Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel)))
  name.vb: Task(Of RepositoryResponse(Of PaginationModel(Of BETemplateViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Swastika.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
    name: BETemplateViewModel
    nameWithType: BETemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Swastika.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
    name: BETemplateViewModel
    nameWithType: BETemplateViewModel
    fullName: Swastika.Cms.Lib.ViewModels.BackEnd.BETemplateViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels
  commentId: N:Swastika.Domain.Core.ViewModels
  isExternal: false
  name: Swastika.Domain.Core.ViewModels
  nameWithType: Swastika.Domain.Core.ViewModels
  fullName: Swastika.Domain.Core.ViewModels
- uid: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.#ctor*
  commentId: Overload:Swastka.IO.Cms.Api.Controllers.ApiTemplateController.#ctor
  isExternal: true
  name: ApiTemplateController
  nameWithType: ApiTemplateController.ApiTemplateController
  fullName: Swastka.IO.Cms.Api.Controllers.ApiTemplateController.ApiTemplateController
