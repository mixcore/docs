### YamlMime:ManagedReference
items:
- uid: Swastika.Identity.Infrastructure.ApplicationUserManager
  commentId: T:Swastika.Identity.Infrastructure.ApplicationUserManager
  id: ApplicationUserManager
  parent: Swastika.Identity.Infrastructure
  children:
  - Swastika.Identity.Infrastructure.ApplicationUserManager.#ctor(Microsoft.AspNetCore.Identity.IUserStore{Swastika.Identity.Models.ApplicationUser},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{Swastika.Identity.Models.ApplicationUser},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{Swastika.Identity.Models.ApplicationUser}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{Swastika.Identity.Models.ApplicationUser}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}})
  langs:
  - csharp
  - vb
  name: ApplicationUserManager
  nameWithType: ApplicationUserManager
  fullName: Swastika.Identity.Infrastructure.ApplicationUserManager
  type: Class
  source:
    path: Swastika.Identity
    isExternal: true
  assemblies:
  - Swastika.Identity
  namespace: Swastika.Identity.Infrastructure
  syntax:
    content: 'public class ApplicationUserManager : UserManager<ApplicationUser>'
    content.vb: >-
      Public Class ApplicationUserManager
          Inherits UserManager(Of ApplicationUser)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastika.Identity.Infrastructure.ApplicationUserManager.#ctor(Microsoft.AspNetCore.Identity.IUserStore{Swastika.Identity.Models.ApplicationUser},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{Swastika.Identity.Models.ApplicationUser},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{Swastika.Identity.Models.ApplicationUser}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{Swastika.Identity.Models.ApplicationUser}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}})
  commentId: M:Swastika.Identity.Infrastructure.ApplicationUserManager.#ctor(Microsoft.AspNetCore.Identity.IUserStore{Swastika.Identity.Models.ApplicationUser},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{Swastika.Identity.Models.ApplicationUser},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{Swastika.Identity.Models.ApplicationUser}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{Swastika.Identity.Models.ApplicationUser}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}})
  id: '#ctor(Microsoft.AspNetCore.Identity.IUserStore{Swastika.Identity.Models.ApplicationUser},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{Swastika.Identity.Models.ApplicationUser},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{Swastika.Identity.Models.ApplicationUser}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{Swastika.Identity.Models.ApplicationUser}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}})'
  parent: Swastika.Identity.Infrastructure.ApplicationUserManager
  langs:
  - csharp
  - vb
  name: ApplicationUserManager(IUserStore<ApplicationUser>, IOptions<IdentityOptions>, IPasswordHasher<ApplicationUser>, IEnumerable<IUserValidator<ApplicationUser>>, IEnumerable<IPasswordValidator<ApplicationUser>>, ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger<UserManager<ApplicationUser>>)
  nameWithType: ApplicationUserManager.ApplicationUserManager(IUserStore<ApplicationUser>, IOptions<IdentityOptions>, IPasswordHasher<ApplicationUser>, IEnumerable<IUserValidator<ApplicationUser>>, IEnumerable<IPasswordValidator<ApplicationUser>>, ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger<UserManager<ApplicationUser>>)
  fullName: Swastika.Identity.Infrastructure.ApplicationUserManager.ApplicationUserManager(Microsoft.AspNetCore.Identity.IUserStore<Swastika.Identity.Models.ApplicationUser>, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.IdentityOptions>, Microsoft.AspNetCore.Identity.IPasswordHasher<Swastika.Identity.Models.ApplicationUser>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IUserValidator<Swastika.Identity.Models.ApplicationUser>>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IPasswordValidator<Swastika.Identity.Models.ApplicationUser>>, Microsoft.AspNetCore.Identity.ILookupNormalizer, Microsoft.AspNetCore.Identity.IdentityErrorDescriber, System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Identity.UserManager<Swastika.Identity.Models.ApplicationUser>>)
  type: Constructor
  source:
    path: Swastika.Identity
    isExternal: true
  assemblies:
  - Swastika.Identity
  namespace: Swastika.Identity.Infrastructure
  syntax:
    content: public ApplicationUserManager(IUserStore<ApplicationUser> store, IOptions<IdentityOptions> optionsAccessor, IPasswordHasher<ApplicationUser> passwordHasher, IEnumerable<IUserValidator<ApplicationUser>> userValidators, IEnumerable<IPasswordValidator<ApplicationUser>> passwordValidators, ILookupNormalizer keyNormalizer, IdentityErrorDescriber errors, IServiceProvider services, ILogger<UserManager<ApplicationUser>> logger)
    parameters:
    - id: store
      type: Microsoft.AspNetCore.Identity.IUserStore{Swastika.Identity.Models.ApplicationUser}
    - id: optionsAccessor
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
    - id: passwordHasher
      type: Microsoft.AspNetCore.Identity.IPasswordHasher{Swastika.Identity.Models.ApplicationUser}
    - id: userValidators
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{Swastika.Identity.Models.ApplicationUser}}
    - id: passwordValidators
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{Swastika.Identity.Models.ApplicationUser}}
    - id: keyNormalizer
      type: Microsoft.AspNetCore.Identity.ILookupNormalizer
    - id: errors
      type: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
    - id: services
      type: System.IServiceProvider
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}}
    content.vb: Public Sub New(store As IUserStore(Of ApplicationUser), optionsAccessor As IOptions(Of IdentityOptions), passwordHasher As IPasswordHasher(Of ApplicationUser), userValidators As IEnumerable(Of IUserValidator(Of ApplicationUser)), passwordValidators As IEnumerable(Of IPasswordValidator(Of ApplicationUser)), keyNormalizer As ILookupNormalizer, errors As IdentityErrorDescriber, services As IServiceProvider, logger As ILogger(Of UserManager(Of ApplicationUser)))
  overload: Swastika.Identity.Infrastructure.ApplicationUserManager.#ctor*
  nameWithType.vb: ApplicationUserManager.ApplicationUserManager(IUserStore(Of ApplicationUser), IOptions(Of IdentityOptions), IPasswordHasher(Of ApplicationUser), IEnumerable(Of IUserValidator(Of ApplicationUser)), IEnumerable(Of IPasswordValidator(Of ApplicationUser)), ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger(Of UserManager(Of ApplicationUser)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Identity.Infrastructure.ApplicationUserManager.ApplicationUserManager(Microsoft.AspNetCore.Identity.IUserStore(Of Swastika.Identity.Models.ApplicationUser), Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Identity.IdentityOptions), Microsoft.AspNetCore.Identity.IPasswordHasher(Of Swastika.Identity.Models.ApplicationUser), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IUserValidator(Of Swastika.Identity.Models.ApplicationUser)), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IPasswordValidator(Of Swastika.Identity.Models.ApplicationUser)), Microsoft.AspNetCore.Identity.ILookupNormalizer, Microsoft.AspNetCore.Identity.IdentityErrorDescriber, System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of Microsoft.AspNetCore.Identity.UserManager(Of Swastika.Identity.Models.ApplicationUser)))
  name.vb: ApplicationUserManager(IUserStore(Of ApplicationUser), IOptions(Of IdentityOptions), IPasswordHasher(Of ApplicationUser), IEnumerable(Of IUserValidator(Of ApplicationUser)), IEnumerable(Of IPasswordValidator(Of ApplicationUser)), ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger(Of UserManager(Of ApplicationUser)))
references:
- uid: Swastika.Identity.Infrastructure
  commentId: N:Swastika.Identity.Infrastructure
  isExternal: true
  name: Swastika.Identity.Infrastructure
  nameWithType: Swastika.Identity.Infrastructure
  fullName: Swastika.Identity.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Identity.Infrastructure.ApplicationUserManager.#ctor*
  commentId: Overload:Swastika.Identity.Infrastructure.ApplicationUserManager.#ctor
  isExternal: true
  name: ApplicationUserManager
  nameWithType: ApplicationUserManager.ApplicationUserManager
  fullName: Swastika.Identity.Infrastructure.ApplicationUserManager.ApplicationUserManager
- uid: Microsoft.AspNetCore.Identity.IUserStore{Swastika.Identity.Models.ApplicationUser}
  commentId: '!:Microsoft.AspNetCore.Identity.IUserStore{Swastika.Identity.Models.ApplicationUser}'
  definition: Microsoft.AspNetCore.Identity.IUserStore`1
  name: IUserStore<ApplicationUser>
  nameWithType: IUserStore<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Swastika.Identity.Models.ApplicationUser>
  nameWithType.vb: IUserStore(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Swastika.Identity.Models.ApplicationUser)
  name.vb: IUserStore(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
  commentId: '!:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}'
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<IdentityOptions>
  nameWithType: IOptions<IdentityOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.IdentityOptions>
  nameWithType.vb: IOptions(Of IdentityOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Identity.IdentityOptions)
  name.vb: IOptions(Of IdentityOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityOptions
    name: IdentityOptions
    nameWithType: IdentityOptions
    fullName: Microsoft.AspNetCore.Identity.IdentityOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityOptions
    name: IdentityOptions
    nameWithType: IdentityOptions
    fullName: Microsoft.AspNetCore.Identity.IdentityOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IPasswordHasher{Swastika.Identity.Models.ApplicationUser}
  commentId: '!:Microsoft.AspNetCore.Identity.IPasswordHasher{Swastika.Identity.Models.ApplicationUser}'
  definition: Microsoft.AspNetCore.Identity.IPasswordHasher`1
  name: IPasswordHasher<ApplicationUser>
  nameWithType: IPasswordHasher<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<Swastika.Identity.Models.ApplicationUser>
  nameWithType.vb: IPasswordHasher(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IPasswordHasher(Of Swastika.Identity.Models.ApplicationUser)
  name.vb: IPasswordHasher(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{Swastika.Identity.Models.ApplicationUser}}
  commentId: '!:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{Swastika.Identity.Models.ApplicationUser}}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IUserValidator<ApplicationUser>>
  nameWithType: IEnumerable<IUserValidator<ApplicationUser>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IUserValidator<Swastika.Identity.Models.ApplicationUser>>
  nameWithType.vb: IEnumerable(Of IUserValidator(Of ApplicationUser))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IUserValidator(Of Swastika.Identity.Models.ApplicationUser))
  name.vb: IEnumerable(Of IUserValidator(Of ApplicationUser))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IUserValidator`1
    name: IUserValidator
    nameWithType: IUserValidator
    fullName: Microsoft.AspNetCore.Identity.IUserValidator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IUserValidator`1
    name: IUserValidator
    nameWithType: IUserValidator
    fullName: Microsoft.AspNetCore.Identity.IUserValidator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{Swastika.Identity.Models.ApplicationUser}}
  commentId: '!:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{Swastika.Identity.Models.ApplicationUser}}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IPasswordValidator<ApplicationUser>>
  nameWithType: IEnumerable<IPasswordValidator<ApplicationUser>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IPasswordValidator<Swastika.Identity.Models.ApplicationUser>>
  nameWithType.vb: IEnumerable(Of IPasswordValidator(Of ApplicationUser))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IPasswordValidator(Of Swastika.Identity.Models.ApplicationUser))
  name.vb: IEnumerable(Of IPasswordValidator(Of ApplicationUser))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IPasswordValidator`1
    name: IPasswordValidator
    nameWithType: IPasswordValidator
    fullName: Microsoft.AspNetCore.Identity.IPasswordValidator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IPasswordValidator`1
    name: IPasswordValidator
    nameWithType: IPasswordValidator
    fullName: Microsoft.AspNetCore.Identity.IPasswordValidator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.ILookupNormalizer
  isExternal: true
  name: ILookupNormalizer
  nameWithType: ILookupNormalizer
  fullName: Microsoft.AspNetCore.Identity.ILookupNormalizer
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: IdentityErrorDescriber
  nameWithType: IdentityErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
- uid: System.IServiceProvider
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}}
  commentId: '!:Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{Swastika.Identity.Models.ApplicationUser}}'
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<UserManager<ApplicationUser>>
  nameWithType: ILogger<UserManager<ApplicationUser>>
  fullName: Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Identity.UserManager<Swastika.Identity.Models.ApplicationUser>>
  nameWithType.vb: ILogger(Of UserManager(Of ApplicationUser))
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Microsoft.AspNetCore.Identity.UserManager(Of Swastika.Identity.Models.ApplicationUser))
  name.vb: ILogger(Of UserManager(Of ApplicationUser))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Swastika.Identity.Models.ApplicationUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1
  isExternal: true
  name: IUserStore<>
  nameWithType: IUserStore<>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<>
  nameWithType.vb: IUserStore(Of )
  fullName.vb: Microsoft.AspNetCore.Identity.IUserStore(Of )
  name.vb: IUserStore(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: Microsoft.Extensions.Options.IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
  isExternal: true
  name: IPasswordHasher<>
  nameWithType: IPasswordHasher<>
  fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<>
  nameWithType.vb: IPasswordHasher(Of )
  fullName.vb: Microsoft.AspNetCore.Identity.IPasswordHasher(Of )
  name.vb: IPasswordHasher(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: Microsoft.Extensions.Logging.ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
