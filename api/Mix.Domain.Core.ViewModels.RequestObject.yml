### YamlMime:ManagedReference
items:
- uid: Mix.Domain.Core.ViewModels.RequestObject
  commentId: T:Mix.Domain.Core.ViewModels.RequestObject
  id: RequestObject
  parent: Mix.Domain.Core.ViewModels
  children:
  - Mix.Domain.Core.ViewModels.RequestObject.#ctor
  - Mix.Domain.Core.ViewModels.RequestObject.Key
  - Mix.Domain.Core.ViewModels.RequestObject.Keyword
  - Mix.Domain.Core.ViewModels.RequestObject.Status
  - Mix.Domain.Core.ViewModels.RequestObject.ViewType
  langs:
  - csharp
  - vb
  name: RequestObject
  nameWithType: RequestObject
  fullName: Mix.Domain.Core.ViewModels.RequestObject
  type: Class
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: 'public class RequestObject : Object'
    content.vb: >-
      Public Class RequestObject
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Domain.Core.ViewModels.RequestObject.#ctor
  commentId: M:Mix.Domain.Core.ViewModels.RequestObject.#ctor
  id: '#ctor'
  parent: Mix.Domain.Core.ViewModels.RequestObject
  langs:
  - csharp
  - vb
  name: RequestObject()
  nameWithType: RequestObject.RequestObject()
  fullName: Mix.Domain.Core.ViewModels.RequestObject.RequestObject()
  type: Constructor
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: public RequestObject()
    content.vb: Public Sub New
  overload: Mix.Domain.Core.ViewModels.RequestObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Domain.Core.ViewModels.RequestObject.ViewType
  commentId: P:Mix.Domain.Core.ViewModels.RequestObject.ViewType
  id: ViewType
  parent: Mix.Domain.Core.ViewModels.RequestObject
  langs:
  - csharp
  - vb
  name: ViewType
  nameWithType: RequestObject.ViewType
  fullName: Mix.Domain.Core.ViewModels.RequestObject.ViewType
  type: Property
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: public string ViewType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ViewType As String
  overload: Mix.Domain.Core.ViewModels.RequestObject.ViewType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Domain.Core.ViewModels.RequestObject.Key
  commentId: P:Mix.Domain.Core.ViewModels.RequestObject.Key
  id: Key
  parent: Mix.Domain.Core.ViewModels.RequestObject
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: RequestObject.Key
  fullName: Mix.Domain.Core.ViewModels.RequestObject.Key
  type: Property
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: public string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Key As String
  overload: Mix.Domain.Core.ViewModels.RequestObject.Key*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Domain.Core.ViewModels.RequestObject.Keyword
  commentId: P:Mix.Domain.Core.ViewModels.RequestObject.Keyword
  id: Keyword
  parent: Mix.Domain.Core.ViewModels.RequestObject
  langs:
  - csharp
  - vb
  name: Keyword
  nameWithType: RequestObject.Keyword
  fullName: Mix.Domain.Core.ViewModels.RequestObject.Keyword
  type: Property
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: public string Keyword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Keyword As String
  overload: Mix.Domain.Core.ViewModels.RequestObject.Keyword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Domain.Core.ViewModels.RequestObject.Status
  commentId: P:Mix.Domain.Core.ViewModels.RequestObject.Status
  id: Status
  parent: Mix.Domain.Core.ViewModels.RequestObject
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: RequestObject.Status
  fullName: Mix.Domain.Core.ViewModels.RequestObject.Status
  type: Property
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: public Nullable<Enums.SWStatus> Status { get; set; }
    parameters: []
    return:
      type: System.Nullable{Mix.Common.Utility.Enums.SWStatus}
    content.vb: Public Property Status As Nullable(Of Enums.SWStatus)
  overload: Mix.Domain.Core.ViewModels.RequestObject.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Domain.Core.ViewModels
  commentId: N:Mix.Domain.Core.ViewModels
  isExternal: true
  name: Mix.Domain.Core.ViewModels
  nameWithType: Mix.Domain.Core.ViewModels
  fullName: Mix.Domain.Core.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Domain.Core.ViewModels.RequestObject.#ctor*
  commentId: Overload:Mix.Domain.Core.ViewModels.RequestObject.#ctor
  isExternal: true
  name: RequestObject
  nameWithType: RequestObject.RequestObject
  fullName: Mix.Domain.Core.ViewModels.RequestObject.RequestObject
- uid: Mix.Domain.Core.ViewModels.RequestObject.ViewType*
  commentId: Overload:Mix.Domain.Core.ViewModels.RequestObject.ViewType
  isExternal: true
  name: ViewType
  nameWithType: RequestObject.ViewType
  fullName: Mix.Domain.Core.ViewModels.RequestObject.ViewType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Domain.Core.ViewModels.RequestObject.Key*
  commentId: Overload:Mix.Domain.Core.ViewModels.RequestObject.Key
  isExternal: true
  name: Key
  nameWithType: RequestObject.Key
  fullName: Mix.Domain.Core.ViewModels.RequestObject.Key
- uid: Mix.Domain.Core.ViewModels.RequestObject.Keyword*
  commentId: Overload:Mix.Domain.Core.ViewModels.RequestObject.Keyword
  isExternal: true
  name: Keyword
  nameWithType: RequestObject.Keyword
  fullName: Mix.Domain.Core.ViewModels.RequestObject.Keyword
- uid: Mix.Domain.Core.ViewModels.RequestObject.Status*
  commentId: Overload:Mix.Domain.Core.ViewModels.RequestObject.Status
  isExternal: true
  name: Status
  nameWithType: RequestObject.Status
  fullName: Mix.Domain.Core.ViewModels.RequestObject.Status
- uid: System.Nullable{Mix.Common.Utility.Enums.SWStatus}
  commentId: '!:System.Nullable{Mix.Common.Utility.Enums.SWStatus}'
  definition: System.Nullable`1
  name: Nullable<Enums.SWStatus>
  nameWithType: Nullable<Enums.SWStatus>
  fullName: System.Nullable<Mix.Common.Utility.Enums.SWStatus>
  nameWithType.vb: Nullable(Of Enums.SWStatus)
  fullName.vb: System.Nullable(Of Mix.Common.Utility.Enums.SWStatus)
  name.vb: Nullable(Of Enums.SWStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Common.Utility.Enums.SWStatus
    name: Enums.SWStatus
    nameWithType: Enums.SWStatus
    fullName: Mix.Common.Utility.Enums.SWStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Common.Utility.Enums.SWStatus
    name: Enums.SWStatus
    nameWithType: Enums.SWStatus
    fullName: Mix.Common.Utility.Enums.SWStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
