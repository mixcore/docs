### YamlMime:ManagedReference
items:
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted
  commentId: T:Mix.Domain.Core.ViewModels.RequestEncrypted
  id: RequestEncrypted
  parent: Mix.Domain.Core.ViewModels
  children:
  - Mix.Domain.Core.ViewModels.RequestEncrypted.#ctor
  - Mix.Domain.Core.ViewModels.RequestEncrypted.Encrypted
  - Mix.Domain.Core.ViewModels.RequestEncrypted.IV
  - Mix.Domain.Core.ViewModels.RequestEncrypted.Key
  - Mix.Domain.Core.ViewModels.RequestEncrypted.PlainText
  langs:
  - csharp
  - vb
  name: RequestEncrypted
  nameWithType: RequestEncrypted
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted
  type: Class
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: 'public class RequestEncrypted : Object'
    content.vb: >-
      Public Class RequestEncrypted
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted.#ctor
  commentId: M:Mix.Domain.Core.ViewModels.RequestEncrypted.#ctor
  id: '#ctor'
  parent: Mix.Domain.Core.ViewModels.RequestEncrypted
  langs:
  - csharp
  - vb
  name: RequestEncrypted()
  nameWithType: RequestEncrypted.RequestEncrypted()
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted.RequestEncrypted()
  type: Constructor
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: public RequestEncrypted()
    content.vb: Public Sub New
  overload: Mix.Domain.Core.ViewModels.RequestEncrypted.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted.Encrypted
  commentId: P:Mix.Domain.Core.ViewModels.RequestEncrypted.Encrypted
  id: Encrypted
  parent: Mix.Domain.Core.ViewModels.RequestEncrypted
  langs:
  - csharp
  - vb
  name: Encrypted
  nameWithType: RequestEncrypted.Encrypted
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted.Encrypted
  type: Property
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: public string Encrypted { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Encrypted As String
  overload: Mix.Domain.Core.ViewModels.RequestEncrypted.Encrypted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted.PlainText
  commentId: P:Mix.Domain.Core.ViewModels.RequestEncrypted.PlainText
  id: PlainText
  parent: Mix.Domain.Core.ViewModels.RequestEncrypted
  langs:
  - csharp
  - vb
  name: PlainText
  nameWithType: RequestEncrypted.PlainText
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted.PlainText
  type: Property
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: public string PlainText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PlainText As String
  overload: Mix.Domain.Core.ViewModels.RequestEncrypted.PlainText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted.IV
  commentId: P:Mix.Domain.Core.ViewModels.RequestEncrypted.IV
  id: IV
  parent: Mix.Domain.Core.ViewModels.RequestEncrypted
  langs:
  - csharp
  - vb
  name: IV
  nameWithType: RequestEncrypted.IV
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted.IV
  type: Property
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: public string IV { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IV As String
  overload: Mix.Domain.Core.ViewModels.RequestEncrypted.IV*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted.Key
  commentId: P:Mix.Domain.Core.ViewModels.RequestEncrypted.Key
  id: Key
  parent: Mix.Domain.Core.ViewModels.RequestEncrypted
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: RequestEncrypted.Key
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted.Key
  type: Property
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Domain.Core.ViewModels
  syntax:
    content: public string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Key As String
  overload: Mix.Domain.Core.ViewModels.RequestEncrypted.Key*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Domain.Core.ViewModels
  commentId: N:Mix.Domain.Core.ViewModels
  isExternal: true
  name: Mix.Domain.Core.ViewModels
  nameWithType: Mix.Domain.Core.ViewModels
  fullName: Mix.Domain.Core.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted.#ctor*
  commentId: Overload:Mix.Domain.Core.ViewModels.RequestEncrypted.#ctor
  isExternal: true
  name: RequestEncrypted
  nameWithType: RequestEncrypted.RequestEncrypted
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted.RequestEncrypted
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted.Encrypted*
  commentId: Overload:Mix.Domain.Core.ViewModels.RequestEncrypted.Encrypted
  isExternal: true
  name: Encrypted
  nameWithType: RequestEncrypted.Encrypted
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted.Encrypted
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted.PlainText*
  commentId: Overload:Mix.Domain.Core.ViewModels.RequestEncrypted.PlainText
  isExternal: true
  name: PlainText
  nameWithType: RequestEncrypted.PlainText
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted.PlainText
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted.IV*
  commentId: Overload:Mix.Domain.Core.ViewModels.RequestEncrypted.IV
  isExternal: true
  name: IV
  nameWithType: RequestEncrypted.IV
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted.IV
- uid: Mix.Domain.Core.ViewModels.RequestEncrypted.Key*
  commentId: Overload:Mix.Domain.Core.ViewModels.RequestEncrypted.Key
  isExternal: true
  name: Key
  nameWithType: RequestEncrypted.Key
  fullName: Mix.Domain.Core.ViewModels.RequestEncrypted.Key
