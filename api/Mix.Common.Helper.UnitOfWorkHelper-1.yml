### YamlMime:ManagedReference
items:
- uid: Mix.Common.Helper.UnitOfWorkHelper`1
  commentId: T:Mix.Common.Helper.UnitOfWorkHelper`1
  id: UnitOfWorkHelper`1
  parent: Mix.Common.Helper
  children:
  - Mix.Common.Helper.UnitOfWorkHelper`1.#ctor
  - Mix.Common.Helper.UnitOfWorkHelper`1.HandleException``1(System.Exception,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Common.Helper.UnitOfWorkHelper`1.HandleObjectException``1(System.Exception,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Common.Helper.UnitOfWorkHelper`1.HandleTransaction(System.Boolean,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Common.Helper.UnitOfWorkHelper`1.InitContext
  - Mix.Common.Helper.UnitOfWorkHelper`1.InitTransaction(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction,`0@,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction@,System.Boolean@)
  - Mix.Common.Helper.UnitOfWorkHelper`1.LogException(System.Exception)
  langs:
  - csharp
  - vb
  name: UnitOfWorkHelper<TDbContext>
  nameWithType: UnitOfWorkHelper<TDbContext>
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>
  type: Class
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Common.Helper
  syntax:
    content: 'public class UnitOfWorkHelper<TDbContext> : Object where TDbContext : DbContext'
    typeParameters:
    - id: TDbContext
    content.vb: >-
      Public Class UnitOfWorkHelper(Of TDbContext As DbContext)
          Inherits Object
  inheritance:
  - System.Object
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext)
  name.vb: UnitOfWorkHelper(Of TDbContext)
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.InitContext
  commentId: M:Mix.Common.Helper.UnitOfWorkHelper`1.InitContext
  id: InitContext
  parent: Mix.Common.Helper.UnitOfWorkHelper`1
  langs:
  - csharp
  - vb
  name: InitContext()
  nameWithType: UnitOfWorkHelper<TDbContext>.InitContext()
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.InitContext()
  type: Method
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Common.Helper
  syntax:
    content: public static TDbContext InitContext()
    return:
      type: '{TDbContext}'
    content.vb: Public Shared Function InitContext As TDbContext
  overload: Mix.Common.Helper.UnitOfWorkHelper`1.InitContext*
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).InitContext()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).InitContext()
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.HandleTransaction(System.Boolean,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Common.Helper.UnitOfWorkHelper`1.HandleTransaction(System.Boolean,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: HandleTransaction(System.Boolean,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Common.Helper.UnitOfWorkHelper`1
  langs:
  - csharp
  - vb
  name: HandleTransaction(Boolean, Boolean, IDbContextTransaction)
  nameWithType: UnitOfWorkHelper<TDbContext>.HandleTransaction(Boolean, Boolean, IDbContextTransaction)
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.HandleTransaction(System.Boolean, System.Boolean, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Common.Helper
  syntax:
    content: public static void HandleTransaction(bool isSucceed, bool isRoot, IDbContextTransaction transaction)
    parameters:
    - id: isSucceed
      type: System.Boolean
    - id: isRoot
      type: System.Boolean
    - id: transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Shared Sub HandleTransaction(isSucceed As Boolean, isRoot As Boolean, transaction As IDbContextTransaction)
  overload: Mix.Common.Helper.UnitOfWorkHelper`1.HandleTransaction*
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).HandleTransaction(Boolean, Boolean, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).HandleTransaction(System.Boolean, System.Boolean, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.HandleException``1(System.Exception,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Common.Helper.UnitOfWorkHelper`1.HandleException``1(System.Exception,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: HandleException``1(System.Exception,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Common.Helper.UnitOfWorkHelper`1
  langs:
  - csharp
  - vb
  name: HandleException<TResult>(Exception, Boolean, IDbContextTransaction)
  nameWithType: UnitOfWorkHelper<TDbContext>.HandleException<TResult>(Exception, Boolean, IDbContextTransaction)
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.HandleException<TResult>(System.Exception, System.Boolean, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Common.Helper
  syntax:
    content: >-
      public static RepositoryResponse<TResult> HandleException<TResult>(Exception ex, bool isRoot, IDbContextTransaction transaction)
          where TResult : class
    parameters:
    - id: ex
      type: System.Exception
    - id: isRoot
      type: System.Boolean
    - id: transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TResult
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{{TResult}}
    content.vb: Public Shared Function HandleException(Of TResult As Class)(ex As Exception, isRoot As Boolean, transaction As IDbContextTransaction) As RepositoryResponse(Of TResult)
  overload: Mix.Common.Helper.UnitOfWorkHelper`1.HandleException*
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).HandleException(Of TResult)(Exception, Boolean, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).HandleException(Of TResult)(System.Exception, System.Boolean, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: HandleException(Of TResult)(Exception, Boolean, IDbContextTransaction)
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.HandleObjectException``1(System.Exception,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Common.Helper.UnitOfWorkHelper`1.HandleObjectException``1(System.Exception,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: HandleObjectException``1(System.Exception,System.Boolean,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Common.Helper.UnitOfWorkHelper`1
  langs:
  - csharp
  - vb
  name: HandleObjectException<TResult>(Exception, Boolean, IDbContextTransaction)
  nameWithType: UnitOfWorkHelper<TDbContext>.HandleObjectException<TResult>(Exception, Boolean, IDbContextTransaction)
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.HandleObjectException<TResult>(System.Exception, System.Boolean, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Common.Helper
  syntax:
    content: >-
      public static RepositoryResponse<TResult> HandleObjectException<TResult>(Exception ex, bool isRoot, IDbContextTransaction transaction)
          where TResult : IConvertible
    parameters:
    - id: ex
      type: System.Exception
    - id: isRoot
      type: System.Boolean
    - id: transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TResult
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{{TResult}}
    content.vb: Public Shared Function HandleObjectException(Of TResult As IConvertible)(ex As Exception, isRoot As Boolean, transaction As IDbContextTransaction) As RepositoryResponse(Of TResult)
  overload: Mix.Common.Helper.UnitOfWorkHelper`1.HandleObjectException*
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).HandleObjectException(Of TResult)(Exception, Boolean, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).HandleObjectException(Of TResult)(System.Exception, System.Boolean, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: HandleObjectException(Of TResult)(Exception, Boolean, IDbContextTransaction)
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.LogException(System.Exception)
  commentId: M:Mix.Common.Helper.UnitOfWorkHelper`1.LogException(System.Exception)
  id: LogException(System.Exception)
  parent: Mix.Common.Helper.UnitOfWorkHelper`1
  langs:
  - csharp
  - vb
  name: LogException(Exception)
  nameWithType: UnitOfWorkHelper<TDbContext>.LogException(Exception)
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.LogException(System.Exception)
  type: Method
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Common.Helper
  syntax:
    content: public static void LogException(Exception ex)
    parameters:
    - id: ex
      type: System.Exception
    content.vb: Public Shared Sub LogException(ex As Exception)
  overload: Mix.Common.Helper.UnitOfWorkHelper`1.LogException*
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).LogException(Exception)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).LogException(System.Exception)
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.InitTransaction(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction,`0@,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction@,System.Boolean@)
  commentId: M:Mix.Common.Helper.UnitOfWorkHelper`1.InitTransaction(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction,`0@,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction@,System.Boolean@)
  id: InitTransaction(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction,`0@,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction@,System.Boolean@)
  parent: Mix.Common.Helper.UnitOfWorkHelper`1
  langs:
  - csharp
  - vb
  name: InitTransaction(TDbContext, IDbContextTransaction, out TDbContext, out IDbContextTransaction, out Boolean)
  nameWithType: UnitOfWorkHelper<TDbContext>.InitTransaction(TDbContext, IDbContextTransaction, out TDbContext, out IDbContextTransaction, out Boolean)
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.InitTransaction(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction, out TDbContext, out Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction, out System.Boolean)
  type: Method
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Common.Helper
  syntax:
    content: public static void InitTransaction(TDbContext _context, IDbContextTransaction _transaction, out TDbContext context, out IDbContextTransaction transaction, out bool isRoot)
    parameters:
    - id: _context
      type: '{TDbContext}'
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    - id: context
      type: '{TDbContext}'
    - id: transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    - id: isRoot
      type: System.Boolean
    content.vb: Public Shared Sub InitTransaction(_context As TDbContext, _transaction As IDbContextTransaction, ByRef context As TDbContext, ByRef transaction As IDbContextTransaction, ByRef isRoot As Boolean)
  overload: Mix.Common.Helper.UnitOfWorkHelper`1.InitTransaction*
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).InitTransaction(TDbContext, IDbContextTransaction, ByRef TDbContext, ByRef IDbContextTransaction, ByRef Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).InitTransaction(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction, ByRef TDbContext, ByRef Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction, ByRef System.Boolean)
  name.vb: InitTransaction(TDbContext, IDbContextTransaction, ByRef TDbContext, ByRef IDbContextTransaction, ByRef Boolean)
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.#ctor
  commentId: M:Mix.Common.Helper.UnitOfWorkHelper`1.#ctor
  id: '#ctor'
  parent: Mix.Common.Helper.UnitOfWorkHelper`1
  langs:
  - csharp
  - vb
  name: UnitOfWorkHelper()
  nameWithType: UnitOfWorkHelper<TDbContext>.UnitOfWorkHelper()
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.UnitOfWorkHelper()
  type: Constructor
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.Common.Helper
  syntax:
    content: public UnitOfWorkHelper()
    content.vb: Public Sub New
  overload: Mix.Common.Helper.UnitOfWorkHelper`1.#ctor*
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).UnitOfWorkHelper()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).UnitOfWorkHelper()
references:
- uid: Mix.Common.Helper
  commentId: N:Mix.Common.Helper
  isExternal: true
  name: Mix.Common.Helper
  nameWithType: Mix.Common.Helper
  fullName: Mix.Common.Helper
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.InitContext*
  commentId: Overload:Mix.Common.Helper.UnitOfWorkHelper`1.InitContext
  isExternal: true
  name: InitContext
  nameWithType: UnitOfWorkHelper<TDbContext>.InitContext
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.InitContext
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).InitContext
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).InitContext
- uid: '{TDbContext}'
  commentId: '!:TDbContext'
  definition: TDbContext
  name: TDbContext
  nameWithType: TDbContext
  fullName: TDbContext
- uid: TDbContext
  name: TDbContext
  nameWithType: TDbContext
  fullName: TDbContext
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.HandleTransaction*
  commentId: Overload:Mix.Common.Helper.UnitOfWorkHelper`1.HandleTransaction
  isExternal: true
  name: HandleTransaction
  nameWithType: UnitOfWorkHelper<TDbContext>.HandleTransaction
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.HandleTransaction
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).HandleTransaction
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).HandleTransaction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.HandleException*
  commentId: Overload:Mix.Common.Helper.UnitOfWorkHelper`1.HandleException
  isExternal: true
  name: HandleException
  nameWithType: UnitOfWorkHelper<TDbContext>.HandleException
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.HandleException
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).HandleException
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).HandleException
- uid: System.Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{{TResult}}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{``0}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<TResult>
  nameWithType: RepositoryResponse<TResult>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<TResult>
  nameWithType.vb: RepositoryResponse(Of TResult)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of TResult)
  name.vb: RepositoryResponse(Of TResult)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse`1
  isExternal: true
  name: RepositoryResponse<TResult>
  nameWithType: RepositoryResponse<TResult>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<TResult>
  nameWithType.vb: RepositoryResponse(Of TResult)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of TResult)
  name.vb: RepositoryResponse(Of TResult)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels
  commentId: N:Mix.Domain.Core.ViewModels
  isExternal: true
  name: Mix.Domain.Core.ViewModels
  nameWithType: Mix.Domain.Core.ViewModels
  fullName: Mix.Domain.Core.ViewModels
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.HandleObjectException*
  commentId: Overload:Mix.Common.Helper.UnitOfWorkHelper`1.HandleObjectException
  isExternal: true
  name: HandleObjectException
  nameWithType: UnitOfWorkHelper<TDbContext>.HandleObjectException
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.HandleObjectException
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).HandleObjectException
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).HandleObjectException
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.LogException*
  commentId: Overload:Mix.Common.Helper.UnitOfWorkHelper`1.LogException
  isExternal: true
  name: LogException
  nameWithType: UnitOfWorkHelper<TDbContext>.LogException
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.LogException
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).LogException
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).LogException
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.InitTransaction*
  commentId: Overload:Mix.Common.Helper.UnitOfWorkHelper`1.InitTransaction
  isExternal: true
  name: InitTransaction
  nameWithType: UnitOfWorkHelper<TDbContext>.InitTransaction
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.InitTransaction
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).InitTransaction
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).InitTransaction
- uid: Mix.Common.Helper.UnitOfWorkHelper`1.#ctor*
  commentId: Overload:Mix.Common.Helper.UnitOfWorkHelper`1.#ctor
  isExternal: true
  name: UnitOfWorkHelper
  nameWithType: UnitOfWorkHelper<TDbContext>.UnitOfWorkHelper
  fullName: Mix.Common.Helper.UnitOfWorkHelper<TDbContext>.UnitOfWorkHelper
  nameWithType.vb: UnitOfWorkHelper(Of TDbContext).UnitOfWorkHelper
  fullName.vb: Mix.Common.Helper.UnitOfWorkHelper(Of TDbContext).UnitOfWorkHelper
