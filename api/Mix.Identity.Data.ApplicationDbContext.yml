### YamlMime:ManagedReference
items:
- uid: Mix.Identity.Data.ApplicationDbContext
  commentId: T:Mix.Identity.Data.ApplicationDbContext
  id: ApplicationDbContext
  parent: Mix.Identity.Data
  children:
  - Mix.Identity.Data.ApplicationDbContext.#ctor
  - Mix.Identity.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext})
  - Mix.Identity.Data.ApplicationDbContext.Clients
  - Mix.Identity.Data.ApplicationDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  - Mix.Identity.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Mix.Identity.Data.ApplicationDbContext.RefreshTokens
  langs:
  - csharp
  - vb
  name: ApplicationDbContext
  nameWithType: ApplicationDbContext
  fullName: Mix.Identity.Data.ApplicationDbContext
  type: Class
  source:
    path: Mix.Identity
    isExternal: true
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Data
  syntax:
    content: 'public class ApplicationDbContext : IdentityDbContext<ApplicationUser>'
    content.vb: >-
      Public Class ApplicationDbContext
          Inherits IdentityDbContext(Of ApplicationUser)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Identity.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext})
  commentId: M:Mix.Identity.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext})
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext})'
  parent: Mix.Identity.Data.ApplicationDbContext
  langs:
  - csharp
  - vb
  name: ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  nameWithType: ApplicationDbContext.ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  fullName: Mix.Identity.Data.ApplicationDbContext.ApplicationDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<Mix.Identity.Data.ApplicationDbContext>)
  type: Constructor
  source:
    path: Mix.Identity
    isExternal: true
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Data
  syntax:
    content: public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
    parameters:
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext}
    content.vb: Public Sub New(options As DbContextOptions(Of ApplicationDbContext))
  overload: Mix.Identity.Data.ApplicationDbContext.#ctor*
  nameWithType.vb: ApplicationDbContext.ApplicationDbContext(DbContextOptions(Of ApplicationDbContext))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Identity.Data.ApplicationDbContext.ApplicationDbContext(Microsoft.EntityFrameworkCore.DbContextOptions(Of Mix.Identity.Data.ApplicationDbContext))
  name.vb: ApplicationDbContext(DbContextOptions(Of ApplicationDbContext))
- uid: Mix.Identity.Data.ApplicationDbContext.#ctor
  commentId: M:Mix.Identity.Data.ApplicationDbContext.#ctor
  id: '#ctor'
  parent: Mix.Identity.Data.ApplicationDbContext
  langs:
  - csharp
  - vb
  name: ApplicationDbContext()
  nameWithType: ApplicationDbContext.ApplicationDbContext()
  fullName: Mix.Identity.Data.ApplicationDbContext.ApplicationDbContext()
  type: Constructor
  source:
    path: Mix.Identity
    isExternal: true
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Data
  syntax:
    content: public ApplicationDbContext()
    content.vb: Public Sub New
  overload: Mix.Identity.Data.ApplicationDbContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Identity.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Mix.Identity.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  id: OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Mix.Identity.Data.ApplicationDbContext
  langs:
  - csharp
  - vb
  name: OnModelCreating(ModelBuilder)
  nameWithType: ApplicationDbContext.OnModelCreating(ModelBuilder)
  fullName: Mix.Identity.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  type: Method
  source:
    path: Mix.Identity
    isExternal: true
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Data
  syntax:
    content: protected override void OnModelCreating(ModelBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    content.vb: Protected Overrides Sub OnModelCreating(builder As ModelBuilder)
  overload: Mix.Identity.Data.ApplicationDbContext.OnModelCreating*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mix.Identity.Data.ApplicationDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Mix.Identity.Data.ApplicationDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  id: OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Mix.Identity.Data.ApplicationDbContext
  langs:
  - csharp
  - vb
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: ApplicationDbContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Mix.Identity.Data.ApplicationDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  type: Method
  source:
    path: Mix.Identity
    isExternal: true
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Data
  syntax:
    content: protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    content.vb: Protected Overrides Sub OnConfiguring(optionsBuilder As DbContextOptionsBuilder)
  overload: Mix.Identity.Data.ApplicationDbContext.OnConfiguring*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mix.Identity.Data.ApplicationDbContext.Clients
  commentId: P:Mix.Identity.Data.ApplicationDbContext.Clients
  id: Clients
  parent: Mix.Identity.Data.ApplicationDbContext
  langs:
  - csharp
  - vb
  name: Clients
  nameWithType: ApplicationDbContext.Clients
  fullName: Mix.Identity.Data.ApplicationDbContext.Clients
  type: Property
  source:
    path: Mix.Identity
    isExternal: true
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Data
  syntax:
    content: public DbSet<Client> Clients { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Identity.Entities.Client}
    content.vb: Public Property Clients As DbSet(Of Client)
  overload: Mix.Identity.Data.ApplicationDbContext.Clients*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Data.ApplicationDbContext.RefreshTokens
  commentId: P:Mix.Identity.Data.ApplicationDbContext.RefreshTokens
  id: RefreshTokens
  parent: Mix.Identity.Data.ApplicationDbContext
  langs:
  - csharp
  - vb
  name: RefreshTokens
  nameWithType: ApplicationDbContext.RefreshTokens
  fullName: Mix.Identity.Data.ApplicationDbContext.RefreshTokens
  type: Property
  source:
    path: Mix.Identity
    isExternal: true
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Data
  syntax:
    content: public DbSet<RefreshToken> RefreshTokens { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Identity.Entities.RefreshToken}
    content.vb: Public Property RefreshTokens As DbSet(Of RefreshToken)
  overload: Mix.Identity.Data.ApplicationDbContext.RefreshTokens*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Identity.Data
  commentId: N:Mix.Identity.Data
  isExternal: true
  name: Mix.Identity.Data
  nameWithType: Mix.Identity.Data
  fullName: Mix.Identity.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Identity.Data.ApplicationDbContext.#ctor*
  commentId: Overload:Mix.Identity.Data.ApplicationDbContext.#ctor
  isExternal: true
  name: ApplicationDbContext
  nameWithType: ApplicationDbContext.ApplicationDbContext
  fullName: Mix.Identity.Data.ApplicationDbContext.ApplicationDbContext
- uid: Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext}
  commentId: '!:Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext}'
  definition: Microsoft.EntityFrameworkCore.DbContextOptions`1
  name: DbContextOptions<ApplicationDbContext>
  nameWithType: DbContextOptions<ApplicationDbContext>
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions<Mix.Identity.Data.ApplicationDbContext>
  nameWithType.vb: DbContextOptions(Of ApplicationDbContext)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContextOptions(Of Mix.Identity.Data.ApplicationDbContext)
  name.vb: DbContextOptions(Of ApplicationDbContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Identity.Data.ApplicationDbContext
    name: ApplicationDbContext
    nameWithType: ApplicationDbContext
    fullName: Mix.Identity.Data.ApplicationDbContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Identity.Data.ApplicationDbContext
    name: ApplicationDbContext
    nameWithType: ApplicationDbContext
    fullName: Mix.Identity.Data.ApplicationDbContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
  isExternal: true
  name: DbContextOptions<>
  nameWithType: DbContextOptions<>
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions<>
  nameWithType.vb: DbContextOptions(Of )
  fullName.vb: Microsoft.EntityFrameworkCore.DbContextOptions(Of )
  name.vb: DbContextOptions(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Identity.Data.ApplicationDbContext.OnModelCreating*
  commentId: Overload:Mix.Identity.Data.ApplicationDbContext.OnModelCreating
  isExternal: true
  name: OnModelCreating
  nameWithType: ApplicationDbContext.OnModelCreating
  fullName: Mix.Identity.Data.ApplicationDbContext.OnModelCreating
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  isExternal: true
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Mix.Identity.Data.ApplicationDbContext.OnConfiguring*
  commentId: Overload:Mix.Identity.Data.ApplicationDbContext.OnConfiguring
  isExternal: true
  name: OnConfiguring
  nameWithType: ApplicationDbContext.OnConfiguring
  fullName: Mix.Identity.Data.ApplicationDbContext.OnConfiguring
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  isExternal: true
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
- uid: Mix.Identity.Data.ApplicationDbContext.Clients*
  commentId: Overload:Mix.Identity.Data.ApplicationDbContext.Clients
  isExternal: true
  name: Clients
  nameWithType: ApplicationDbContext.Clients
  fullName: Mix.Identity.Data.ApplicationDbContext.Clients
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Identity.Entities.Client}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Identity.Entities.Client}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Client>
  nameWithType: DbSet<Client>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Identity.Entities.Client>
  nameWithType.vb: DbSet(Of Client)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Identity.Entities.Client)
  name.vb: DbSet(Of Client)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Identity.Entities.Client
    name: Client
    nameWithType: Client
    fullName: Mix.Identity.Entities.Client
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Identity.Entities.Client
    name: Client
    nameWithType: Client
    fullName: Mix.Identity.Entities.Client
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: true
  name: DbSet<>
  nameWithType: DbSet<>
  fullName: Microsoft.EntityFrameworkCore.DbSet<>
  nameWithType.vb: DbSet(Of )
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of )
  name.vb: DbSet(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Identity.Data.ApplicationDbContext.RefreshTokens*
  commentId: Overload:Mix.Identity.Data.ApplicationDbContext.RefreshTokens
  isExternal: true
  name: RefreshTokens
  nameWithType: ApplicationDbContext.RefreshTokens
  fullName: Mix.Identity.Data.ApplicationDbContext.RefreshTokens
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Identity.Entities.RefreshToken}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Identity.Entities.RefreshToken}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<RefreshToken>
  nameWithType: DbSet<RefreshToken>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Identity.Entities.RefreshToken>
  nameWithType.vb: DbSet(Of RefreshToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Identity.Entities.RefreshToken)
  name.vb: DbSet(Of RefreshToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Identity.Entities.RefreshToken
    name: RefreshToken
    nameWithType: RefreshToken
    fullName: Mix.Identity.Entities.RefreshToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Identity.Entities.RefreshToken
    name: RefreshToken
    nameWithType: RefreshToken
    fullName: Mix.Identity.Entities.RefreshToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
