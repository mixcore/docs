### YamlMime:ManagedReference
items:
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  commentId: T:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  id: ApiModuleController
  parent: TTS.Web.Areas.Portal.Controllers.Apis
  children:
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Localization.IStringLocalizer{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController})
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData(System.Int32)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAddModuleData(System.Int32)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAtiveModuleData(System.String,System.String,System.Boolean)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxEditModuleData(System.String)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxSaveModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create(Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Delete(System.Int32)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.DeleteModuleData(System.String)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Details(System.Int32,System.Int32,System.Int32,System.String)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit(System.Int32)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit(System.Int32,Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData(System.Int32,System.String)
  - TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Index(System.Int32,System.Int32,System.String)
  langs:
  - csharp
  - vb
  name: ApiModuleController
  nameWithType: ApiModuleController
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  type: Class
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: 'public class ApiModuleController : BaseController<ApiModuleController>'
    content.vb: >-
      Public Class ApiModuleController
          Inherits BaseController(Of ApiModuleController)
  inheritance:
  - System.Object
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  inheritedMembers:
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.ROUTE_CULTURE_NAME
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.ROUTE_DEFAULT_CULTURE
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}._domain
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}._configuration
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}._env
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.GetLanguage
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.UploadListFileAsync(System.String)
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.ViewContext
  - Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.CurrentLanguage
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Localization.IStringLocalizer{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController})
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Localization.IStringLocalizer{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController})
  id: '#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Localization.IStringLocalizer{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController})'
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: ApiModuleController(IHostingEnvironment, IStringLocalizer<PortalController>)
  nameWithType: ApiModuleController.ApiModuleController(IHostingEnvironment, IStringLocalizer<PortalController>)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.ApiModuleController(Microsoft.AspNetCore.Hosting.IHostingEnvironment, Microsoft.Extensions.Localization.IStringLocalizer<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>)
  type: Constructor
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public ApiModuleController(IHostingEnvironment env, IStringLocalizer<PortalController> localizer)
    parameters:
    - id: env
      type: Microsoft.AspNetCore.Hosting.IHostingEnvironment
    - id: localizer
      type: Microsoft.Extensions.Localization.IStringLocalizer{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
    content.vb: Public Sub New(env As IHostingEnvironment, localizer As IStringLocalizer(Of PortalController))
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.#ctor*
  nameWithType.vb: ApiModuleController.ApiModuleController(IHostingEnvironment, IStringLocalizer(Of PortalController))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.ApiModuleController(Microsoft.AspNetCore.Hosting.IHostingEnvironment, Microsoft.Extensions.Localization.IStringLocalizer(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController))
  name.vb: ApiModuleController(IHostingEnvironment, IStringLocalizer(Of PortalController))
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Index(System.Int32,System.Int32,System.String)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Index(System.Int32,System.Int32,System.String)
  id: Index(System.Int32,System.Int32,System.String)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: Index(Int32, Int32, String)
  nameWithType: ApiModuleController.Index(Int32, Int32, String)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Index(System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> Index(int pageSize = 10, int pageIndex = 0, string keyword = null)
    parameters:
    - id: pageSize
      type: System.Int32
    - id: pageIndex
      type: System.Int32
    - id: keyword
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function Index(pageSize As Integer = 10, pageIndex As Integer = 0, keyword As String = Nothing) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Index*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create
  id: Create
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: ApiModuleController.Create()
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create()
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public IActionResult Create()
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Public Function Create As IActionResult
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create(Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create(Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel)
  id: Create(Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: Create(BEModuleViewModel)
  nameWithType: ApiModuleController.Create(BEModuleViewModel)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create(Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> Create(BEModuleViewModel Module)
    parameters:
    - id: Module
      type: Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function Create(Module As BEModuleViewModel) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit(System.Int32)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit(System.Int32)
  id: Edit(System.Int32)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: Edit(Int32)
  nameWithType: ApiModuleController.Edit(Int32)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit(System.Int32)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> Edit(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function Edit(id As Integer) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit(System.Int32,Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit(System.Int32,Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel)
  id: Edit(System.Int32,Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: Edit(Int32, BEModuleViewModel)
  nameWithType: ApiModuleController.Edit(Int32, BEModuleViewModel)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit(System.Int32, Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> Edit(int id, BEModuleViewModel Module)
    parameters:
    - id: id
      type: System.Int32
    - id: Module
      type: Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function Edit(id As Integer, Module As BEModuleViewModel) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Delete(System.Int32)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Delete(System.Int32)
  id: Delete(System.Int32)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: Delete(Int32)
  nameWithType: ApiModuleController.Delete(Int32)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Delete(System.Int32)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> Delete(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function Delete(id As Integer) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Delete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAddModuleData(System.Int32)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAddModuleData(System.Int32)
  id: AjaxAddModuleData(System.Int32)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: AjaxAddModuleData(Int32)
  nameWithType: ApiModuleController.AjaxAddModuleData(Int32)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAddModuleData(System.Int32)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<InfoModuleDataViewModel> AjaxAddModuleData(int moduleId)
    parameters:
    - id: moduleId
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel}
    content.vb: Public Function AjaxAddModuleData(moduleId As Integer) As Task(Of InfoModuleDataViewModel)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAddModuleData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxSaveModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxSaveModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  id: AjaxSaveModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: AjaxSaveModuleData(InfoModuleDataViewModel)
  nameWithType: ApiModuleController.AjaxSaveModuleData(InfoModuleDataViewModel)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxSaveModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> AjaxSaveModuleData(InfoModuleDataViewModel ModuleData)
    parameters:
    - id: ModuleData
      type: Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function AjaxSaveModuleData(ModuleData As InfoModuleDataViewModel) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxSaveModuleData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAtiveModuleData(System.String,System.String,System.Boolean)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAtiveModuleData(System.String,System.String,System.Boolean)
  id: AjaxAtiveModuleData(System.String,System.String,System.Boolean)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: AjaxAtiveModuleData(String, String, Boolean)
  nameWithType: ApiModuleController.AjaxAtiveModuleData(String, String, Boolean)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAtiveModuleData(System.String, System.String, System.Boolean)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<bool> AjaxAtiveModuleData(string articleId, string dataId, bool isActived)
    parameters:
    - id: articleId
      type: System.String
    - id: dataId
      type: System.String
    - id: isActived
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function AjaxAtiveModuleData(articleId As String, dataId As String, isActived As Boolean) As Task(Of Boolean)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAtiveModuleData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxEditModuleData(System.String)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxEditModuleData(System.String)
  id: AjaxEditModuleData(System.String)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: AjaxEditModuleData(String)
  nameWithType: ApiModuleController.AjaxEditModuleData(String)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxEditModuleData(System.String)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> AjaxEditModuleData(string dataId)
    parameters:
    - id: dataId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function AjaxEditModuleData(dataId As String) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxEditModuleData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Details(System.Int32,System.Int32,System.Int32,System.String)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Details(System.Int32,System.Int32,System.Int32,System.String)
  id: Details(System.Int32,System.Int32,System.Int32,System.String)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: Details(Int32, Int32, Int32, String)
  nameWithType: ApiModuleController.Details(Int32, Int32, Int32, String)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Details(System.Int32, System.Int32, System.Int32, System.String)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> Details(int id, int pageSize = 10, int pageIndex = 0, string keyword = null)
    parameters:
    - id: id
      type: System.Int32
    - id: pageSize
      type: System.Int32
    - id: pageIndex
      type: System.Int32
    - id: keyword
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function Details(id As Integer, pageSize As Integer = 10, pageIndex As Integer = 0, keyword As String = Nothing) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Details*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData(System.Int32)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData(System.Int32)
  id: AddModuleData(System.Int32)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: AddModuleData(Int32)
  nameWithType: ApiModuleController.AddModuleData(Int32)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData(System.Int32)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> AddModuleData(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function AddModuleData(id As Integer) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  id: AddModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: AddModuleData(InfoModuleDataViewModel)
  nameWithType: ApiModuleController.AddModuleData(InfoModuleDataViewModel)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> AddModuleData(InfoModuleDataViewModel ModuleData)
    parameters:
    - id: ModuleData
      type: Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function AddModuleData(ModuleData As InfoModuleDataViewModel) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData(System.Int32,System.String)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData(System.Int32,System.String)
  id: EditModuleData(System.Int32,System.String)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: EditModuleData(Int32, String)
  nameWithType: ApiModuleController.EditModuleData(Int32, String)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData(System.Int32, System.String)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> EditModuleData(int id, string dataId)
    parameters:
    - id: id
      type: System.Int32
    - id: dataId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function EditModuleData(id As Integer, dataId As String) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  id: EditModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: EditModuleData(InfoModuleDataViewModel)
  nameWithType: ApiModuleController.EditModuleData(InfoModuleDataViewModel)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData(Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> EditModuleData(InfoModuleDataViewModel ModuleData)
    parameters:
    - id: ModuleData
      type: Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function EditModuleData(ModuleData As InfoModuleDataViewModel) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.DeleteModuleData(System.String)
  commentId: M:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.DeleteModuleData(System.String)
  id: DeleteModuleData(System.String)
  parent: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
  langs:
  - csharp
  - vb
  name: DeleteModuleData(String)
  nameWithType: ApiModuleController.DeleteModuleData(String)
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.DeleteModuleData(System.String)
  type: Method
  source:
    path: Swastika.Cms.Web.Mvc
    isExternal: true
  assemblies:
  - Swastika.Cms.Web.Mvc
  namespace: TTS.Web.Areas.Portal.Controllers.Apis
  syntax:
    content: public Task<IActionResult> DeleteModuleData(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
    content.vb: Public Function DeleteModuleData(id As String) As Task(Of IActionResult)
  overload: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.DeleteModuleData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TTS.Web.Areas.Portal.Controllers.Apis
  commentId: N:TTS.Web.Areas.Portal.Controllers.Apis
  isExternal: false
  name: TTS.Web.Areas.Portal.Controllers.Apis
  nameWithType: TTS.Web.Areas.Portal.Controllers.Apis
  fullName: TTS.Web.Areas.Portal.Controllers.Apis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  commentId: T:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  parent: Swastika.Cms.Mvc.Controllers
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1
  name: BaseController<ApiModuleController>
  nameWithType: BaseController<ApiModuleController>
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>
  nameWithType.vb: BaseController(Of ApiModuleController)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController)
  name.vb: BaseController(Of ApiModuleController)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1
    name: BaseController
    nameWithType: BaseController
    fullName: Swastika.Cms.Mvc.Controllers.BaseController
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
    name: ApiModuleController
    nameWithType: ApiModuleController
    fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1
    name: BaseController
    nameWithType: BaseController
    fullName: Swastika.Cms.Mvc.Controllers.BaseController
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
    name: ApiModuleController
    nameWithType: ApiModuleController
    fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.ROUTE_CULTURE_NAME
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.ROUTE_CULTURE_NAME
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_CULTURE_NAME
  name: ROUTE_CULTURE_NAME
  nameWithType: BaseController<ApiModuleController>.ROUTE_CULTURE_NAME
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.ROUTE_CULTURE_NAME
  nameWithType.vb: BaseController(Of ApiModuleController).ROUTE_CULTURE_NAME
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).ROUTE_CULTURE_NAME
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.ROUTE_DEFAULT_CULTURE
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.ROUTE_DEFAULT_CULTURE
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_DEFAULT_CULTURE
  name: ROUTE_DEFAULT_CULTURE
  nameWithType: BaseController<ApiModuleController>.ROUTE_DEFAULT_CULTURE
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.ROUTE_DEFAULT_CULTURE
  nameWithType.vb: BaseController(Of ApiModuleController).ROUTE_DEFAULT_CULTURE
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).ROUTE_DEFAULT_CULTURE
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}._domain
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}._domain
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1._domain
  name: _domain
  nameWithType: BaseController<ApiModuleController>._domain
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>._domain
  nameWithType.vb: BaseController(Of ApiModuleController)._domain
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController)._domain
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}._configuration
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}._configuration
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1._configuration
  name: _configuration
  nameWithType: BaseController<ApiModuleController>._configuration
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>._configuration
  nameWithType.vb: BaseController(Of ApiModuleController)._configuration
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController)._configuration
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}._env
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}._env
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1._env
  name: _env
  nameWithType: BaseController<ApiModuleController>._env
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>._env
  nameWithType.vb: BaseController(Of ApiModuleController)._env
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController)._env
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseController<ApiModuleController>.OnActionExecuting(ActionExecutingContext)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  nameWithType.vb: BaseController(Of ApiModuleController).OnActionExecuting(ActionExecutingContext)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseController<ApiModuleController>.OnActionExecuting
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseController(Of ApiModuleController).OnActionExecuting
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.GetLanguage
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.GetLanguage
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
  name: GetLanguage()
  nameWithType: BaseController<ApiModuleController>.GetLanguage()
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.GetLanguage()
  nameWithType.vb: BaseController(Of ApiModuleController).GetLanguage()
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).GetLanguage()
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
    name: GetLanguage
    nameWithType: BaseController<ApiModuleController>.GetLanguage
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
    name: GetLanguage
    nameWithType: BaseController(Of ApiModuleController).GetLanguage
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseController<ApiModuleController>.UploadFileAsync(IFormFile, String)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  nameWithType.vb: BaseController(Of ApiModuleController).UploadFileAsync(IFormFile, String)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseController<ApiModuleController>.UploadFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseController(Of ApiModuleController).UploadFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.UploadListFileAsync(System.String)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.UploadListFileAsync(System.String)
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
  name: UploadListFileAsync(String)
  nameWithType: BaseController<ApiModuleController>.UploadListFileAsync(String)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.UploadListFileAsync(System.String)
  nameWithType.vb: BaseController(Of ApiModuleController).UploadListFileAsync(String)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).UploadListFileAsync(System.String)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseController<ApiModuleController>.UploadListFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseController(Of ApiModuleController).UploadListFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.ViewContext
  commentId: P:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.ViewContext
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.ViewContext
  name: ViewContext
  nameWithType: BaseController<ApiModuleController>.ViewContext
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.ViewContext
  nameWithType.vb: BaseController(Of ApiModuleController).ViewContext
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).ViewContext
- uid: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.CurrentLanguage
  commentId: P:Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}.CurrentLanguage
  parent: Swastika.Cms.Mvc.Controllers.BaseController{TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController}
  definition: Swastika.Cms.Mvc.Controllers.BaseController`1.CurrentLanguage
  name: CurrentLanguage
  nameWithType: BaseController<ApiModuleController>.CurrentLanguage
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController>.CurrentLanguage
  nameWithType.vb: BaseController(Of ApiModuleController).CurrentLanguage
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController).CurrentLanguage
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1
  commentId: T:Swastika.Cms.Mvc.Controllers.BaseController`1
  isExternal: true
  name: BaseController<T>
  nameWithType: BaseController<T>
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>
  nameWithType.vb: BaseController(Of T)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T)
  name.vb: BaseController(Of T)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1
    name: BaseController
    nameWithType: BaseController
    fullName: Swastika.Cms.Mvc.Controllers.BaseController
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1
    name: BaseController
    nameWithType: BaseController
    fullName: Swastika.Cms.Mvc.Controllers.BaseController
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers
  commentId: N:Swastika.Cms.Mvc.Controllers
  isExternal: false
  name: Swastika.Cms.Mvc.Controllers
  nameWithType: Swastika.Cms.Mvc.Controllers
  fullName: Swastika.Cms.Mvc.Controllers
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_CULTURE_NAME
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_CULTURE_NAME
  isExternal: true
  name: ROUTE_CULTURE_NAME
  nameWithType: BaseController<T>.ROUTE_CULTURE_NAME
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.ROUTE_CULTURE_NAME
  nameWithType.vb: BaseController(Of T).ROUTE_CULTURE_NAME
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).ROUTE_CULTURE_NAME
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_DEFAULT_CULTURE
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController`1.ROUTE_DEFAULT_CULTURE
  isExternal: true
  name: ROUTE_DEFAULT_CULTURE
  nameWithType: BaseController<T>.ROUTE_DEFAULT_CULTURE
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.ROUTE_DEFAULT_CULTURE
  nameWithType.vb: BaseController(Of T).ROUTE_DEFAULT_CULTURE
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).ROUTE_DEFAULT_CULTURE
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1._domain
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController`1._domain
  isExternal: true
  name: _domain
  nameWithType: BaseController<T>._domain
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>._domain
  nameWithType.vb: BaseController(Of T)._domain
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T)._domain
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1._configuration
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController`1._configuration
  isExternal: true
  name: _configuration
  nameWithType: BaseController<T>._configuration
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>._configuration
  nameWithType.vb: BaseController(Of T)._configuration
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T)._configuration
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1._env
  commentId: F:Swastika.Cms.Mvc.Controllers.BaseController`1._env
  isExternal: true
  name: _env
  nameWithType: BaseController<T>._env
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>._env
  nameWithType.vb: BaseController(Of T)._env
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T)._env
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  isExternal: true
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseController<T>.OnActionExecuting(ActionExecutingContext)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  nameWithType.vb: BaseController(Of T).OnActionExecuting(ActionExecutingContext)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseController<T>.OnActionExecuting
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseController(Of T).OnActionExecuting
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of T).OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
  isExternal: true
  name: GetLanguage()
  nameWithType: BaseController<T>.GetLanguage()
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.GetLanguage()
  nameWithType.vb: BaseController(Of T).GetLanguage()
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).GetLanguage()
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
    name: GetLanguage
    nameWithType: BaseController<T>.GetLanguage
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.GetLanguage
    name: GetLanguage
    nameWithType: BaseController(Of T).GetLanguage
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of T).GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
  isExternal: true
  name: UploadFileAsync(IFormFile, String)
  nameWithType: BaseController<T>.UploadFileAsync(IFormFile, String)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  nameWithType.vb: BaseController(Of T).UploadFileAsync(IFormFile, String)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile, System.String)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseController<T>.UploadFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)
    name: UploadFileAsync
    nameWithType: BaseController(Of T).UploadFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of T).UploadFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
  commentId: M:Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
  isExternal: true
  name: UploadListFileAsync(String)
  nameWithType: BaseController<T>.UploadListFileAsync(String)
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.UploadListFileAsync(System.String)
  nameWithType.vb: BaseController(Of T).UploadListFileAsync(String)
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).UploadListFileAsync(System.String)
  spec.csharp:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseController<T>.UploadListFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Cms.Mvc.Controllers.BaseController`1.UploadListFileAsync(System.String)
    name: UploadListFileAsync
    nameWithType: BaseController(Of T).UploadListFileAsync
    fullName: Swastika.Cms.Mvc.Controllers.BaseController(Of T).UploadListFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.ViewContext
  commentId: P:Swastika.Cms.Mvc.Controllers.BaseController`1.ViewContext
  isExternal: true
  name: ViewContext
  nameWithType: BaseController<T>.ViewContext
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.ViewContext
  nameWithType.vb: BaseController(Of T).ViewContext
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).ViewContext
- uid: Swastika.Cms.Mvc.Controllers.BaseController`1.CurrentLanguage
  commentId: P:Swastika.Cms.Mvc.Controllers.BaseController`1.CurrentLanguage
  isExternal: true
  name: CurrentLanguage
  nameWithType: BaseController<T>.CurrentLanguage
  fullName: Swastika.Cms.Mvc.Controllers.BaseController<T>.CurrentLanguage
  nameWithType.vb: BaseController(Of T).CurrentLanguage
  fullName.vb: Swastika.Cms.Mvc.Controllers.BaseController(Of T).CurrentLanguage
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.#ctor*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.#ctor
  isExternal: true
  name: ApiModuleController
  nameWithType: ApiModuleController.ApiModuleController
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.ApiModuleController
- uid: Microsoft.AspNetCore.Hosting.IHostingEnvironment
  isExternal: true
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IHostingEnvironment
- uid: Microsoft.Extensions.Localization.IStringLocalizer{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}
  commentId: '!:Microsoft.Extensions.Localization.IStringLocalizer{Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController}'
  definition: Microsoft.Extensions.Localization.IStringLocalizer`1
  name: IStringLocalizer<PortalController>
  nameWithType: IStringLocalizer<PortalController>
  fullName: Microsoft.Extensions.Localization.IStringLocalizer<Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController>
  nameWithType.vb: IStringLocalizer(Of PortalController)
  fullName.vb: Microsoft.Extensions.Localization.IStringLocalizer(Of Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController)
  name.vb: IStringLocalizer(Of PortalController)
  spec.csharp:
  - uid: Microsoft.Extensions.Localization.IStringLocalizer`1
    name: IStringLocalizer
    nameWithType: IStringLocalizer
    fullName: Microsoft.Extensions.Localization.IStringLocalizer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
    name: PortalController
    nameWithType: PortalController
    fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Localization.IStringLocalizer`1
    name: IStringLocalizer
    nameWithType: IStringLocalizer
    fullName: Microsoft.Extensions.Localization.IStringLocalizer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
    name: PortalController
    nameWithType: PortalController
    fullName: Swastika.Cms.Mvc.Areas.Portal.Controllers.PortalController
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Localization.IStringLocalizer`1
  commentId: '!:Microsoft.Extensions.Localization.IStringLocalizer`1'
  isExternal: true
  name: IStringLocalizer<>
  nameWithType: IStringLocalizer<>
  fullName: Microsoft.Extensions.Localization.IStringLocalizer<>
  nameWithType.vb: IStringLocalizer(Of )
  fullName.vb: Microsoft.Extensions.Localization.IStringLocalizer(Of )
  name.vb: IStringLocalizer(Of )
  spec.csharp:
  - uid: Microsoft.Extensions.Localization.IStringLocalizer`1
    name: IStringLocalizer
    nameWithType: IStringLocalizer
    fullName: Microsoft.Extensions.Localization.IStringLocalizer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Localization.IStringLocalizer`1
    name: IStringLocalizer
    nameWithType: IStringLocalizer
    fullName: Microsoft.Extensions.Localization.IStringLocalizer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Index*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Index
  isExternal: true
  name: Index
  nameWithType: ApiModuleController.Index
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
  commentId: '!:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}'
  definition: System.Threading.Tasks.Task`1
  name: Task<IActionResult>
  nameWithType: Task<IActionResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult>
  nameWithType.vb: Task(Of IActionResult)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.IActionResult)
  name.vb: Task(Of IActionResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.IActionResult
    name: IActionResult
    nameWithType: IActionResult
    fullName: Microsoft.AspNetCore.Mvc.IActionResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.IActionResult
    name: IActionResult
    nameWithType: IActionResult
    fullName: Microsoft.AspNetCore.Mvc.IActionResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create
  isExternal: true
  name: Create
  nameWithType: ApiModuleController.Create
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Create
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  isExternal: true
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel
  parent: Swastika.Cms.Lib.ViewModels.BackEnd
  isExternal: true
  name: BEModuleViewModel
  nameWithType: BEModuleViewModel
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd.BEModuleViewModel
- uid: Swastika.Cms.Lib.ViewModels.BackEnd
  commentId: N:Swastika.Cms.Lib.ViewModels.BackEnd
  isExternal: false
  name: Swastika.Cms.Lib.ViewModels.BackEnd
  nameWithType: Swastika.Cms.Lib.ViewModels.BackEnd
  fullName: Swastika.Cms.Lib.ViewModels.BackEnd
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit
  isExternal: true
  name: Edit
  nameWithType: ApiModuleController.Edit
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Edit
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Delete*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Delete
  isExternal: true
  name: Delete
  nameWithType: ApiModuleController.Delete
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Delete
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAddModuleData*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAddModuleData
  isExternal: true
  name: AjaxAddModuleData
  nameWithType: ApiModuleController.AjaxAddModuleData
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAddModuleData
- uid: System.Threading.Tasks.Task{Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel}
  commentId: '!:System.Threading.Tasks.Task{Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel}'
  definition: System.Threading.Tasks.Task`1
  name: Task<InfoModuleDataViewModel>
  nameWithType: Task<InfoModuleDataViewModel>
  fullName: System.Threading.Tasks.Task<Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel>
  nameWithType.vb: Task(Of InfoModuleDataViewModel)
  fullName.vb: System.Threading.Tasks.Task(Of Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel)
  name.vb: Task(Of InfoModuleDataViewModel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel
    name: InfoModuleDataViewModel
    nameWithType: InfoModuleDataViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel
    name: InfoModuleDataViewModel
    nameWithType: InfoModuleDataViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxSaveModuleData*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxSaveModuleData
  isExternal: true
  name: AjaxSaveModuleData
  nameWithType: ApiModuleController.AjaxSaveModuleData
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxSaveModuleData
- uid: Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel
  parent: Swastika.Cms.Lib.ViewModels.Info
  isExternal: true
  name: InfoModuleDataViewModel
  nameWithType: InfoModuleDataViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Info.InfoModuleDataViewModel
- uid: Swastika.Cms.Lib.ViewModels.Info
  commentId: N:Swastika.Cms.Lib.ViewModels.Info
  isExternal: false
  name: Swastika.Cms.Lib.ViewModels.Info
  nameWithType: Swastika.Cms.Lib.ViewModels.Info
  fullName: Swastika.Cms.Lib.ViewModels.Info
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAtiveModuleData*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAtiveModuleData
  isExternal: true
  name: AjaxAtiveModuleData
  nameWithType: ApiModuleController.AjaxAtiveModuleData
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxAtiveModuleData
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxEditModuleData*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxEditModuleData
  isExternal: true
  name: AjaxEditModuleData
  nameWithType: ApiModuleController.AjaxEditModuleData
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AjaxEditModuleData
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Details*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Details
  isExternal: true
  name: Details
  nameWithType: ApiModuleController.Details
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.Details
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData
  isExternal: true
  name: AddModuleData
  nameWithType: ApiModuleController.AddModuleData
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.AddModuleData
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData
  isExternal: true
  name: EditModuleData
  nameWithType: ApiModuleController.EditModuleData
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.EditModuleData
- uid: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.DeleteModuleData*
  commentId: Overload:TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.DeleteModuleData
  isExternal: true
  name: DeleteModuleData
  nameWithType: ApiModuleController.DeleteModuleData
  fullName: TTS.Web.Areas.Portal.Controllers.Apis.ApiModuleController.DeleteModuleData
