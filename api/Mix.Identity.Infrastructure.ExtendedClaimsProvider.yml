### YamlMime:ManagedReference
items:
- uid: Mix.Identity.Infrastructure.ExtendedClaimsProvider
  commentId: T:Mix.Identity.Infrastructure.ExtendedClaimsProvider
  id: ExtendedClaimsProvider
  parent: Mix.Identity.Infrastructure
  children:
  - Mix.Identity.Infrastructure.ExtendedClaimsProvider.CreateClaim(System.String,System.String)
  - Mix.Identity.Infrastructure.ExtendedClaimsProvider.GetClaims(Mix.Identity.Models.ApplicationUser)
  langs:
  - csharp
  - vb
  name: ExtendedClaimsProvider
  nameWithType: ExtendedClaimsProvider
  fullName: Mix.Identity.Infrastructure.ExtendedClaimsProvider
  type: Class
  source:
    path: Mix.Identity
    isExternal: true
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Infrastructure
  syntax:
    content: 'public static class ExtendedClaimsProvider : Object'
    content.vb: >-
      Public Module ExtendedClaimsProvider
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mix.Identity.Infrastructure.ExtendedClaimsProvider.GetClaims(Mix.Identity.Models.ApplicationUser)
  commentId: M:Mix.Identity.Infrastructure.ExtendedClaimsProvider.GetClaims(Mix.Identity.Models.ApplicationUser)
  id: GetClaims(Mix.Identity.Models.ApplicationUser)
  parent: Mix.Identity.Infrastructure.ExtendedClaimsProvider
  langs:
  - csharp
  - vb
  name: GetClaims(ApplicationUser)
  nameWithType: ExtendedClaimsProvider.GetClaims(ApplicationUser)
  fullName: Mix.Identity.Infrastructure.ExtendedClaimsProvider.GetClaims(Mix.Identity.Models.ApplicationUser)
  type: Method
  source:
    path: Mix.Identity
    isExternal: true
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Infrastructure
  syntax:
    content: public static IEnumerable<Claim> GetClaims(ApplicationUser user)
    parameters:
    - id: user
      type: Mix.Identity.Models.ApplicationUser
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
    content.vb: Public Shared Function GetClaims(user As ApplicationUser) As IEnumerable(Of Claim)
  overload: Mix.Identity.Infrastructure.ExtendedClaimsProvider.GetClaims*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Identity.Infrastructure.ExtendedClaimsProvider.CreateClaim(System.String,System.String)
  commentId: M:Mix.Identity.Infrastructure.ExtendedClaimsProvider.CreateClaim(System.String,System.String)
  id: CreateClaim(System.String,System.String)
  parent: Mix.Identity.Infrastructure.ExtendedClaimsProvider
  langs:
  - csharp
  - vb
  name: CreateClaim(String, String)
  nameWithType: ExtendedClaimsProvider.CreateClaim(String, String)
  fullName: Mix.Identity.Infrastructure.ExtendedClaimsProvider.CreateClaim(System.String, System.String)
  type: Method
  source:
    path: Mix.Identity
    isExternal: true
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Infrastructure
  syntax:
    content: public static Claim CreateClaim(string type, string value)
    parameters:
    - id: type
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Security.Claims.Claim
    content.vb: Public Shared Function CreateClaim(type As String, value As String) As Claim
  overload: Mix.Identity.Infrastructure.ExtendedClaimsProvider.CreateClaim*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Identity.Infrastructure
  commentId: N:Mix.Identity.Infrastructure
  isExternal: true
  name: Mix.Identity.Infrastructure
  nameWithType: Mix.Identity.Infrastructure
  fullName: Mix.Identity.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Identity.Infrastructure.ExtendedClaimsProvider.GetClaims*
  commentId: Overload:Mix.Identity.Infrastructure.ExtendedClaimsProvider.GetClaims
  isExternal: true
  name: GetClaims
  nameWithType: ExtendedClaimsProvider.GetClaims
  fullName: Mix.Identity.Infrastructure.ExtendedClaimsProvider.GetClaims
- uid: Mix.Identity.Models.ApplicationUser
  commentId: T:Mix.Identity.Models.ApplicationUser
  parent: Mix.Identity.Models
  isExternal: true
  name: ApplicationUser
  nameWithType: ApplicationUser
  fullName: Mix.Identity.Models.ApplicationUser
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  commentId: '!:System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  nameWithType.vb: IEnumerable(Of Claim)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)
  name.vb: IEnumerable(Of Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Identity.Models
  commentId: N:Mix.Identity.Models
  isExternal: true
  name: Mix.Identity.Models
  nameWithType: Mix.Identity.Models
  fullName: Mix.Identity.Models
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Identity.Infrastructure.ExtendedClaimsProvider.CreateClaim*
  commentId: Overload:Mix.Identity.Infrastructure.ExtendedClaimsProvider.CreateClaim
  isExternal: true
  name: CreateClaim
  nameWithType: ExtendedClaimsProvider.CreateClaim
  fullName: Mix.Identity.Infrastructure.ExtendedClaimsProvider.CreateClaim
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.Claim
  isExternal: true
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
