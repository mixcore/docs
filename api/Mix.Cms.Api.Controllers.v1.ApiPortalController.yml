### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController
  commentId: T:Mix.Cms.Api.Controllers.v1.ApiPortalController
  id: ApiPortalController
  parent: Mix.Cms.Api.Controllers.v1
  children:
  - Mix.Cms.Api.Controllers.v1.ApiPortalController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Mix.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{Mix.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub})
  - Mix.Cms.Api.Controllers.v1.ApiPortalController.AllSettingsAsync
  - Mix.Cms.Api.Controllers.v1.ApiPortalController.Dashboard(System.Int32)
  - Mix.Cms.Api.Controllers.v1.ApiPortalController.GetGlobalSettings
  - Mix.Cms.Api.Controllers.v1.ApiPortalController.Languages
  - Mix.Cms.Api.Controllers.v1.ApiPortalController.LoadAppSettings
  - Mix.Cms.Api.Controllers.v1.ApiPortalController.Post(Mix.Cms.Lib.ViewModels.MixInit.InitCmsViewModel)
  - Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettings(Newtonsoft.Json.Linq.JObject)
  - Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettingsAsync(System.String,Mix.Cms.Lib.ViewModels.FileViewModel)
  - Mix.Cms.Api.Controllers.v1.ApiPortalController.Settings
  langs:
  - csharp
  - vb
  name: ApiPortalController
  nameWithType: ApiPortalController
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController
  type: Class
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: 'public class ApiPortalController : BaseApiController'
    content.vb: >-
      Public Class ApiPortalController
          Inherits BaseApiController
  inheritance:
  - System.Object
  - Mix.Cms.Api.Controllers.v1.BaseApiController
  inheritedMembers:
  - Mix.Cms.Api.Controllers.v1.BaseApiController._hubContext
  - Mix.Cms.Api.Controllers.v1.BaseApiController._memoryCache
  - Mix.Cms.Api.Controllers.v1.BaseApiController._lang
  - Mix.Cms.Api.Controllers.v1.BaseApiController._domain
  - Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String,System.Int32,System.String)
  - Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
  - Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Mix.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{Mix.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub})
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiPortalController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Mix.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{Mix.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub})
  id: '#ctor(Microsoft.AspNetCore.Identity.UserManager{Mix.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{Mix.Identity.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub})'
  parent: Mix.Cms.Api.Controllers.v1.ApiPortalController
  langs:
  - csharp
  - vb
  name: ApiPortalController(UserManager<ApplicationUser>, SignInManager<ApplicationUser>, RoleManager<IdentityRole>, IHubContext<PortalHub>)
  nameWithType: ApiPortalController.ApiPortalController(UserManager<ApplicationUser>, SignInManager<ApplicationUser>, RoleManager<IdentityRole>, IHubContext<PortalHub>)
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.ApiPortalController(Microsoft.AspNetCore.Identity.UserManager<Mix.Identity.Models.ApplicationUser>, Microsoft.AspNetCore.Identity.SignInManager<Mix.Identity.Models.ApplicationUser>, Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>, Microsoft.AspNetCore.SignalR.IHubContext<Mix.Cms.Hub.PortalHub>)
  type: Constructor
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public ApiPortalController(UserManager<ApplicationUser> userManager, SignInManager<ApplicationUser> signInManager, RoleManager<IdentityRole> roleManager, IHubContext<PortalHub> hubContext)
    parameters:
    - id: userManager
      type: Microsoft.AspNetCore.Identity.UserManager{Mix.Identity.Models.ApplicationUser}
    - id: signInManager
      type: Microsoft.AspNetCore.Identity.SignInManager{Mix.Identity.Models.ApplicationUser}
    - id: roleManager
      type: Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole}
    - id: hubContext
      type: Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub}
    content.vb: Public Sub New(userManager As UserManager(Of ApplicationUser), signInManager As SignInManager(Of ApplicationUser), roleManager As RoleManager(Of IdentityRole), hubContext As IHubContext(Of PortalHub))
  overload: Mix.Cms.Api.Controllers.v1.ApiPortalController.#ctor*
  nameWithType.vb: ApiPortalController.ApiPortalController(UserManager(Of ApplicationUser), SignInManager(Of ApplicationUser), RoleManager(Of IdentityRole), IHubContext(Of PortalHub))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Api.Controllers.v1.ApiPortalController.ApiPortalController(Microsoft.AspNetCore.Identity.UserManager(Of Mix.Identity.Models.ApplicationUser), Microsoft.AspNetCore.Identity.SignInManager(Of Mix.Identity.Models.ApplicationUser), Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole), Microsoft.AspNetCore.SignalR.IHubContext(Of Mix.Cms.Hub.PortalHub))
  name.vb: ApiPortalController(UserManager(Of ApplicationUser), SignInManager(Of ApplicationUser), RoleManager(Of IdentityRole), IHubContext(Of PortalHub))
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.Settings
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiPortalController.Settings
  id: Settings
  parent: Mix.Cms.Api.Controllers.v1.ApiPortalController
  langs:
  - csharp
  - vb
  name: Settings()
  nameWithType: ApiPortalController.Settings()
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.Settings()
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<GlobalSettingsViewModel> Settings()
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel}
    content.vb: Public Function Settings As RepositoryResponse(Of GlobalSettingsViewModel)
  overload: Mix.Cms.Api.Controllers.v1.ApiPortalController.Settings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.AllSettingsAsync
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiPortalController.AllSettingsAsync
  id: AllSettingsAsync
  parent: Mix.Cms.Api.Controllers.v1.ApiPortalController
  langs:
  - csharp
  - vb
  name: AllSettingsAsync()
  nameWithType: ApiPortalController.AllSettingsAsync()
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.AllSettingsAsync()
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<JObject> AllSettingsAsync()
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Newtonsoft.Json.Linq.JObject}
    content.vb: Public Function AllSettingsAsync As RepositoryResponse(Of JObject)
  overload: Mix.Cms.Api.Controllers.v1.ApiPortalController.AllSettingsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.Languages
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiPortalController.Languages
  id: Languages
  parent: Mix.Cms.Api.Controllers.v1.ApiPortalController
  langs:
  - csharp
  - vb
  name: Languages()
  nameWithType: ApiPortalController.Languages()
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.Languages()
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<JObject> Languages()
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Newtonsoft.Json.Linq.JObject}
    content.vb: Public Function Languages As RepositoryResponse(Of JObject)
  overload: Mix.Cms.Api.Controllers.v1.ApiPortalController.Languages*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.GetGlobalSettings
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiPortalController.GetGlobalSettings
  id: GetGlobalSettings
  parent: Mix.Cms.Api.Controllers.v1.ApiPortalController
  langs:
  - csharp
  - vb
  name: GetGlobalSettings()
  nameWithType: ApiPortalController.GetGlobalSettings()
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.GetGlobalSettings()
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<JObject> GetGlobalSettings()
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Newtonsoft.Json.Linq.JObject}
    content.vb: Public Function GetGlobalSettings As RepositoryResponse(Of JObject)
  overload: Mix.Cms.Api.Controllers.v1.ApiPortalController.GetGlobalSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.Dashboard(System.Int32)
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiPortalController.Dashboard(System.Int32)
  id: Dashboard(System.Int32)
  parent: Mix.Cms.Api.Controllers.v1.ApiPortalController
  langs:
  - csharp
  - vb
  name: Dashboard(Int32)
  nameWithType: ApiPortalController.Dashboard(Int32)
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.Dashboard(System.Int32)
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<DashboardViewModel> Dashboard(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.DashboardViewModel}
    content.vb: Public Function Dashboard(id As Integer) As RepositoryResponse(Of DashboardViewModel)
  overload: Mix.Cms.Api.Controllers.v1.ApiPortalController.Dashboard*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.LoadAppSettings
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiPortalController.LoadAppSettings
  id: LoadAppSettings
  parent: Mix.Cms.Api.Controllers.v1.ApiPortalController
  langs:
  - csharp
  - vb
  name: LoadAppSettings()
  nameWithType: ApiPortalController.LoadAppSettings()
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.LoadAppSettings()
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<JObject> LoadAppSettings()
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Newtonsoft.Json.Linq.JObject}
    content.vb: Public Function LoadAppSettings As RepositoryResponse(Of JObject)
  overload: Mix.Cms.Api.Controllers.v1.ApiPortalController.LoadAppSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettings(Newtonsoft.Json.Linq.JObject)
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettings(Newtonsoft.Json.Linq.JObject)
  id: SaveAppSettings(Newtonsoft.Json.Linq.JObject)
  parent: Mix.Cms.Api.Controllers.v1.ApiPortalController
  langs:
  - csharp
  - vb
  name: SaveAppSettings(JObject)
  nameWithType: ApiPortalController.SaveAppSettings(JObject)
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettings(Newtonsoft.Json.Linq.JObject)
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<JObject> SaveAppSettings(JObject model)
    parameters:
    - id: model
      type: Newtonsoft.Json.Linq.JObject
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Newtonsoft.Json.Linq.JObject}
    content.vb: Public Function SaveAppSettings(model As JObject) As RepositoryResponse(Of JObject)
  overload: Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettingsAsync(System.String,Mix.Cms.Lib.ViewModels.FileViewModel)
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettingsAsync(System.String,Mix.Cms.Lib.ViewModels.FileViewModel)
  id: SaveAppSettingsAsync(System.String,Mix.Cms.Lib.ViewModels.FileViewModel)
  parent: Mix.Cms.Api.Controllers.v1.ApiPortalController
  langs:
  - csharp
  - vb
  name: SaveAppSettingsAsync(String, FileViewModel)
  nameWithType: ApiPortalController.SaveAppSettingsAsync(String, FileViewModel)
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettingsAsync(System.String, Mix.Cms.Lib.ViewModels.FileViewModel)
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public Task<RepositoryResponse<bool>> SaveAppSettingsAsync(string type, FileViewModel model)
    parameters:
    - id: type
      type: System.String
    - id: model
      type: Mix.Cms.Lib.ViewModels.FileViewModel
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
    content.vb: Public Function SaveAppSettingsAsync(type As String, model As FileViewModel) As Task(Of RepositoryResponse(Of Boolean))
  overload: Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettingsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.Post(Mix.Cms.Lib.ViewModels.MixInit.InitCmsViewModel)
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiPortalController.Post(Mix.Cms.Lib.ViewModels.MixInit.InitCmsViewModel)
  id: Post(Mix.Cms.Lib.ViewModels.MixInit.InitCmsViewModel)
  parent: Mix.Cms.Api.Controllers.v1.ApiPortalController
  langs:
  - csharp
  - vb
  name: Post(InitCmsViewModel)
  nameWithType: ApiPortalController.Post(InitCmsViewModel)
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.Post(Mix.Cms.Lib.ViewModels.MixInit.InitCmsViewModel)
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public Task<RepositoryResponse<bool>> Post(InitCmsViewModel model)
    parameters:
    - id: model
      type: Mix.Cms.Lib.ViewModels.MixInit.InitCmsViewModel
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
    content.vb: Public Function Post(model As InitCmsViewModel) As Task(Of RepositoryResponse(Of Boolean))
  overload: Mix.Cms.Api.Controllers.v1.ApiPortalController.Post*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Api.Controllers.v1
  commentId: N:Mix.Cms.Api.Controllers.v1
  isExternal: true
  name: Mix.Cms.Api.Controllers.v1
  nameWithType: Mix.Cms.Api.Controllers.v1
  fullName: Mix.Cms.Api.Controllers.v1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController
  commentId: T:Mix.Cms.Api.Controllers.v1.BaseApiController
  parent: Mix.Cms.Api.Controllers.v1
  isExternal: true
  name: BaseApiController
  nameWithType: BaseApiController
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController._hubContext
  commentId: F:Mix.Cms.Api.Controllers.v1.BaseApiController._hubContext
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: _hubContext
  nameWithType: BaseApiController._hubContext
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController._hubContext
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController._memoryCache
  commentId: F:Mix.Cms.Api.Controllers.v1.BaseApiController._memoryCache
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: _memoryCache
  nameWithType: BaseApiController._memoryCache
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController._memoryCache
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController._lang
  commentId: F:Mix.Cms.Api.Controllers.v1.BaseApiController._lang
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: _lang
  nameWithType: BaseApiController._lang
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController._lang
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController._domain
  commentId: F:Mix.Cms.Api.Controllers.v1.BaseApiController._domain
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: _domain
  nameWithType: BaseApiController._domain
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController._domain
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController.OnActionExecuting(ActionExecutingContext)
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController.OnActionExecuting
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController.OnActionExecuting
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String,System.Int32,System.String)
  commentId: M:Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String,System.Int32,System.String)
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: AlertAsync(String, Int32, String)
  nameWithType: BaseApiController.AlertAsync(String, Int32, String)
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String, System.Int32, System.String)
  spec.csharp:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String,System.Int32,System.String)
    name: AlertAsync
    nameWithType: BaseApiController.AlertAsync
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String,System.Int32,System.String)
    name: AlertAsync
    nameWithType: BaseApiController.AlertAsync
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
  commentId: M:Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: ParseRequestPagingDate(RequestPaging)
  nameWithType: BaseApiController.ParseRequestPagingDate(RequestPaging)
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
  spec.csharp:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
    name: ParseRequestPagingDate
    nameWithType: BaseApiController.ParseRequestPagingDate
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Domain.Core.ViewModels.RequestPaging
    name: RequestPaging
    nameWithType: RequestPaging
    fullName: Mix.Domain.Core.ViewModels.RequestPaging
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
    name: ParseRequestPagingDate
    nameWithType: BaseApiController.ParseRequestPagingDate
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Domain.Core.ViewModels.RequestPaging
    name: RequestPaging
    nameWithType: RequestPaging
    fullName: Mix.Domain.Core.ViewModels.RequestPaging
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
  commentId: M:Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: GetLanguage()
  nameWithType: BaseApiController.GetLanguage()
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage()
  spec.csharp:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController.GetLanguage
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController.GetLanguage
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.#ctor*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiPortalController.#ctor
  isExternal: true
  name: ApiPortalController
  nameWithType: ApiPortalController.ApiPortalController
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.ApiPortalController
- uid: Microsoft.AspNetCore.Identity.UserManager{Mix.Identity.Models.ApplicationUser}
  commentId: '!:Microsoft.AspNetCore.Identity.UserManager{Mix.Identity.Models.ApplicationUser}'
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  name: UserManager<ApplicationUser>
  nameWithType: UserManager<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<Mix.Identity.Models.ApplicationUser>
  nameWithType.vb: UserManager(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of Mix.Identity.Models.ApplicationUser)
  name.vb: UserManager(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Mix.Identity.Models.ApplicationUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Mix.Identity.Models.ApplicationUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{Mix.Identity.Models.ApplicationUser}
  commentId: '!:Microsoft.AspNetCore.Identity.SignInManager{Mix.Identity.Models.ApplicationUser}'
  definition: Microsoft.AspNetCore.Identity.SignInManager`1
  name: SignInManager<ApplicationUser>
  nameWithType: SignInManager<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.SignInManager<Mix.Identity.Models.ApplicationUser>
  nameWithType.vb: SignInManager(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of Mix.Identity.Models.ApplicationUser)
  name.vb: SignInManager(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Mix.Identity.Models.ApplicationUser
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Identity.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: Mix.Identity.Models.ApplicationUser
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole}
  commentId: '!:Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole}'
  definition: Microsoft.AspNetCore.Identity.RoleManager`1
  name: RoleManager<IdentityRole>
  nameWithType: RoleManager<IdentityRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>
  nameWithType.vb: RoleManager(Of IdentityRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole)
  name.vb: RoleManager(Of IdentityRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.IdentityRole
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.IdentityRole
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub}
  commentId: '!:Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub}'
  definition: Microsoft.AspNetCore.SignalR.IHubContext`1
  name: IHubContext<PortalHub>
  nameWithType: IHubContext<PortalHub>
  fullName: Microsoft.AspNetCore.SignalR.IHubContext<Mix.Cms.Hub.PortalHub>
  nameWithType.vb: IHubContext(Of PortalHub)
  fullName.vb: Microsoft.AspNetCore.SignalR.IHubContext(Of Mix.Cms.Hub.PortalHub)
  name.vb: IHubContext(Of PortalHub)
  spec.csharp:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Hub.PortalHub
    name: PortalHub
    nameWithType: PortalHub
    fullName: Mix.Cms.Hub.PortalHub
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Hub.PortalHub
    name: PortalHub
    nameWithType: PortalHub
    fullName: Mix.Cms.Hub.PortalHub
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: true
  name: UserManager<>
  nameWithType: UserManager<>
  fullName: Microsoft.AspNetCore.Identity.UserManager<>
  nameWithType.vb: UserManager(Of )
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of )
  name.vb: UserManager(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1
  isExternal: true
  name: SignInManager<>
  nameWithType: SignInManager<>
  fullName: Microsoft.AspNetCore.Identity.SignInManager<>
  nameWithType.vb: SignInManager(Of )
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of )
  name.vb: SignInManager(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.RoleManager`1
  isExternal: true
  name: RoleManager<>
  nameWithType: RoleManager<>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<>
  nameWithType.vb: RoleManager(Of )
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of )
  name.vb: RoleManager(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.SignalR.IHubContext`1
  isExternal: true
  name: IHubContext<>
  nameWithType: IHubContext<>
  fullName: Microsoft.AspNetCore.SignalR.IHubContext<>
  nameWithType.vb: IHubContext(Of )
  fullName.vb: Microsoft.AspNetCore.SignalR.IHubContext(Of )
  name.vb: IHubContext(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.Settings*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiPortalController.Settings
  isExternal: true
  name: Settings
  nameWithType: ApiPortalController.Settings
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.Settings
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<GlobalSettingsViewModel>
  nameWithType: RepositoryResponse<GlobalSettingsViewModel>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel>
  nameWithType.vb: RepositoryResponse(Of GlobalSettingsViewModel)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel)
  name.vb: RepositoryResponse(Of GlobalSettingsViewModel)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
    name: GlobalSettingsViewModel
    nameWithType: GlobalSettingsViewModel
    fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
    name: GlobalSettingsViewModel
    nameWithType: GlobalSettingsViewModel
    fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse`1
  isExternal: true
  name: RepositoryResponse<TResult>
  nameWithType: RepositoryResponse<TResult>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<TResult>
  nameWithType.vb: RepositoryResponse(Of TResult)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of TResult)
  name.vb: RepositoryResponse(Of TResult)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels
  commentId: N:Mix.Domain.Core.ViewModels
  isExternal: true
  name: Mix.Domain.Core.ViewModels
  nameWithType: Mix.Domain.Core.ViewModels
  fullName: Mix.Domain.Core.ViewModels
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.AllSettingsAsync*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiPortalController.AllSettingsAsync
  isExternal: true
  name: AllSettingsAsync
  nameWithType: ApiPortalController.AllSettingsAsync
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.AllSettingsAsync
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{Newtonsoft.Json.Linq.JObject}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{Newtonsoft.Json.Linq.JObject}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<JObject>
  nameWithType: RepositoryResponse<JObject>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<Newtonsoft.Json.Linq.JObject>
  nameWithType.vb: RepositoryResponse(Of JObject)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of Newtonsoft.Json.Linq.JObject)
  name.vb: RepositoryResponse(Of JObject)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.Languages*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiPortalController.Languages
  isExternal: true
  name: Languages
  nameWithType: ApiPortalController.Languages
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.Languages
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.GetGlobalSettings*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiPortalController.GetGlobalSettings
  isExternal: true
  name: GetGlobalSettings
  nameWithType: ApiPortalController.GetGlobalSettings
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.GetGlobalSettings
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.Dashboard*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiPortalController.Dashboard
  isExternal: true
  name: Dashboard
  nameWithType: ApiPortalController.Dashboard
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.Dashboard
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.DashboardViewModel}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.DashboardViewModel}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<DashboardViewModel>
  nameWithType: RepositoryResponse<DashboardViewModel>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Cms.Lib.ViewModels.DashboardViewModel>
  nameWithType.vb: RepositoryResponse(Of DashboardViewModel)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Cms.Lib.ViewModels.DashboardViewModel)
  name.vb: RepositoryResponse(Of DashboardViewModel)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.DashboardViewModel
    name: DashboardViewModel
    nameWithType: DashboardViewModel
    fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.DashboardViewModel
    name: DashboardViewModel
    nameWithType: DashboardViewModel
    fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.LoadAppSettings*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiPortalController.LoadAppSettings
  isExternal: true
  name: LoadAppSettings
  nameWithType: ApiPortalController.LoadAppSettings
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.LoadAppSettings
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettings*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettings
  isExternal: true
  name: SaveAppSettings
  nameWithType: ApiPortalController.SaveAppSettings
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettings
- uid: Newtonsoft.Json.Linq.JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettingsAsync*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettingsAsync
  isExternal: true
  name: SaveAppSettingsAsync
  nameWithType: ApiPortalController.SaveAppSettingsAsync
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.SaveAppSettingsAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.ViewModels.FileViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.FileViewModel
  parent: Mix.Cms.Lib.ViewModels
  isExternal: true
  name: FileViewModel
  nameWithType: FileViewModel
  fullName: Mix.Cms.Lib.ViewModels.FileViewModel
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
  commentId: '!:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<Boolean>>
  nameWithType: Task<RepositoryResponse<Boolean>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<System.Boolean>>
  nameWithType.vb: Task(Of RepositoryResponse(Of Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of System.Boolean))
  name.vb: Task(Of RepositoryResponse(Of Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels
  commentId: N:Mix.Cms.Lib.ViewModels
  isExternal: true
  name: Mix.Cms.Lib.ViewModels
  nameWithType: Mix.Cms.Lib.ViewModels
  fullName: Mix.Cms.Lib.ViewModels
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.ApiPortalController.Post*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiPortalController.Post
  isExternal: true
  name: Post
  nameWithType: ApiPortalController.Post
  fullName: Mix.Cms.Api.Controllers.v1.ApiPortalController.Post
- uid: Mix.Cms.Lib.ViewModels.MixInit.InitCmsViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixInit.InitCmsViewModel
  parent: Mix.Cms.Lib.ViewModels.MixInit
  isExternal: true
  name: InitCmsViewModel
  nameWithType: InitCmsViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixInit.InitCmsViewModel
- uid: Mix.Cms.Lib.ViewModels.MixInit
  commentId: N:Mix.Cms.Lib.ViewModels.MixInit
  isExternal: true
  name: Mix.Cms.Lib.ViewModels.MixInit
  nameWithType: Mix.Cms.Lib.ViewModels.MixInit
  fullName: Mix.Cms.Lib.ViewModels.MixInit
