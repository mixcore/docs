### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles
  commentId: T:Mix.Cms.Lib.Models.Account.AspNetRoles
  id: AspNetRoles
  parent: Mix.Cms.Lib.Models.Account
  children:
  - Mix.Cms.Lib.Models.Account.AspNetRoles.#ctor
  - Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetRoleClaims
  - Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetUserRoles
  - Mix.Cms.Lib.Models.Account.AspNetRoles.ConcurrencyStamp
  - Mix.Cms.Lib.Models.Account.AspNetRoles.Id
  - Mix.Cms.Lib.Models.Account.AspNetRoles.Name
  - Mix.Cms.Lib.Models.Account.AspNetRoles.NormalizedName
  langs:
  - csharp
  - vb
  name: AspNetRoles
  nameWithType: AspNetRoles
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles
  type: Class
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: 'public class AspNetRoles : Object'
    content.vb: >-
      Public Class AspNetRoles
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.#ctor
  commentId: M:Mix.Cms.Lib.Models.Account.AspNetRoles.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.Models.Account.AspNetRoles
  langs:
  - csharp
  - vb
  name: AspNetRoles()
  nameWithType: AspNetRoles.AspNetRoles()
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetRoles()
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public AspNetRoles()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.Models.Account.AspNetRoles.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.Id
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetRoles.Id
  id: Id
  parent: Mix.Cms.Lib.Models.Account.AspNetRoles
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: AspNetRoles.Id
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.Id
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Mix.Cms.Lib.Models.Account.AspNetRoles.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.ConcurrencyStamp
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetRoles.ConcurrencyStamp
  id: ConcurrencyStamp
  parent: Mix.Cms.Lib.Models.Account.AspNetRoles
  langs:
  - csharp
  - vb
  name: ConcurrencyStamp
  nameWithType: AspNetRoles.ConcurrencyStamp
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.ConcurrencyStamp
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string ConcurrencyStamp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConcurrencyStamp As String
  overload: Mix.Cms.Lib.Models.Account.AspNetRoles.ConcurrencyStamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.Name
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetRoles.Name
  id: Name
  parent: Mix.Cms.Lib.Models.Account.AspNetRoles
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AspNetRoles.Name
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.Name
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.Cms.Lib.Models.Account.AspNetRoles.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.NormalizedName
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetRoles.NormalizedName
  id: NormalizedName
  parent: Mix.Cms.Lib.Models.Account.AspNetRoles
  langs:
  - csharp
  - vb
  name: NormalizedName
  nameWithType: AspNetRoles.NormalizedName
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.NormalizedName
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string NormalizedName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NormalizedName As String
  overload: Mix.Cms.Lib.Models.Account.AspNetRoles.NormalizedName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetRoleClaims
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetRoleClaims
  id: AspNetRoleClaims
  parent: Mix.Cms.Lib.Models.Account.AspNetRoles
  langs:
  - csharp
  - vb
  name: AspNetRoleClaims
  nameWithType: AspNetRoles.AspNetRoleClaims
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetRoleClaims
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public ICollection<AspNetRoleClaims> AspNetRoleClaims { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Account.AspNetRoleClaims}
    content.vb: Public Property AspNetRoleClaims As ICollection(Of AspNetRoleClaims)
  overload: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetRoleClaims*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetUserRoles
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetUserRoles
  id: AspNetUserRoles
  parent: Mix.Cms.Lib.Models.Account.AspNetRoles
  langs:
  - csharp
  - vb
  name: AspNetUserRoles
  nameWithType: AspNetRoles.AspNetUserRoles
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetUserRoles
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public ICollection<AspNetUserRoles> AspNetUserRoles { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Account.AspNetUserRoles}
    content.vb: Public Property AspNetUserRoles As ICollection(Of AspNetUserRoles)
  overload: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetUserRoles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Lib.Models.Account
  commentId: N:Mix.Cms.Lib.Models.Account
  isExternal: true
  name: Mix.Cms.Lib.Models.Account
  nameWithType: Mix.Cms.Lib.Models.Account
  fullName: Mix.Cms.Lib.Models.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.#ctor*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetRoles.#ctor
  isExternal: true
  name: AspNetRoles
  nameWithType: AspNetRoles.AspNetRoles
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetRoles
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.Id*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetRoles.Id
  isExternal: true
  name: Id
  nameWithType: AspNetRoles.Id
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.ConcurrencyStamp*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetRoles.ConcurrencyStamp
  isExternal: true
  name: ConcurrencyStamp
  nameWithType: AspNetRoles.ConcurrencyStamp
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.ConcurrencyStamp
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.Name*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetRoles.Name
  isExternal: true
  name: Name
  nameWithType: AspNetRoles.Name
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.Name
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.NormalizedName*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetRoles.NormalizedName
  isExternal: true
  name: NormalizedName
  nameWithType: AspNetRoles.NormalizedName
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.NormalizedName
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetRoleClaims*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetRoleClaims
  isExternal: true
  name: AspNetRoleClaims
  nameWithType: AspNetRoles.AspNetRoleClaims
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetRoleClaims
- uid: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Account.AspNetRoleClaims}
  commentId: '!:System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Account.AspNetRoleClaims}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<AspNetRoleClaims>
  nameWithType: ICollection<AspNetRoleClaims>
  fullName: System.Collections.Generic.ICollection<Mix.Cms.Lib.Models.Account.AspNetRoleClaims>
  nameWithType.vb: ICollection(Of AspNetRoleClaims)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Cms.Lib.Models.Account.AspNetRoleClaims)
  name.vb: ICollection(Of AspNetRoleClaims)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Cms.Lib.Models.Account.AspNetRoleClaims
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Cms.Lib.Models.Account.AspNetRoleClaims
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: System.Collections.Generic.ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetUserRoles*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetUserRoles
  isExternal: true
  name: AspNetUserRoles
  nameWithType: AspNetRoles.AspNetUserRoles
  fullName: Mix.Cms.Lib.Models.Account.AspNetRoles.AspNetUserRoles
- uid: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Account.AspNetUserRoles}
  commentId: '!:System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Account.AspNetUserRoles}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<AspNetUserRoles>
  nameWithType: ICollection<AspNetUserRoles>
  fullName: System.Collections.Generic.ICollection<Mix.Cms.Lib.Models.Account.AspNetUserRoles>
  nameWithType.vb: ICollection(Of AspNetUserRoles)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Cms.Lib.Models.Account.AspNetUserRoles)
  name.vb: ICollection(Of AspNetUserRoles)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
