### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController
  commentId: T:Mix.Cms.Api.Controllers.v1.ApiFileController
  id: ApiFileController
  parent: Mix.Cms.Api.Controllers.v1
  children:
  - Mix.Cms.Api.Controllers.v1.ApiFileController.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub})
  - Mix.Cms.Api.Controllers.v1.ApiFileController.Delete(Mix.Domain.Core.ViewModels.RequestObject)
  - Mix.Cms.Api.Controllers.v1.ApiFileController.Details(System.String,System.String)
  - Mix.Cms.Api.Controllers.v1.ApiFileController.Edit(Mix.Cms.Lib.ViewModels.FileViewModel)
  - Mix.Cms.Api.Controllers.v1.ApiFileController.GetList(Mix.Domain.Core.ViewModels.RequestPaging)
  - Mix.Cms.Api.Controllers.v1.ApiFileController.Save(Mix.Cms.Lib.ViewModels.FileViewModel)
  langs:
  - csharp
  - vb
  name: ApiFileController
  nameWithType: ApiFileController
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController
  type: Class
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: 'public class ApiFileController : BaseApiController'
    content.vb: >-
      Public Class ApiFileController
          Inherits BaseApiController
  inheritance:
  - System.Object
  - Mix.Cms.Api.Controllers.v1.BaseApiController
  inheritedMembers:
  - Mix.Cms.Api.Controllers.v1.BaseApiController._hubContext
  - Mix.Cms.Api.Controllers.v1.BaseApiController._memoryCache
  - Mix.Cms.Api.Controllers.v1.BaseApiController._lang
  - Mix.Cms.Api.Controllers.v1.BaseApiController._domain
  - Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String,System.Int32,System.String)
  - Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
  - Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub})
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiFileController.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub})
  id: '#ctor(Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub})'
  parent: Mix.Cms.Api.Controllers.v1.ApiFileController
  langs:
  - csharp
  - vb
  name: ApiFileController(IHubContext<PortalHub>)
  nameWithType: ApiFileController.ApiFileController(IHubContext<PortalHub>)
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.ApiFileController(Microsoft.AspNetCore.SignalR.IHubContext<Mix.Cms.Hub.PortalHub>)
  type: Constructor
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public ApiFileController(IHubContext<PortalHub> hubContext)
    parameters:
    - id: hubContext
      type: Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub}
    content.vb: Public Sub New(hubContext As IHubContext(Of PortalHub))
  overload: Mix.Cms.Api.Controllers.v1.ApiFileController.#ctor*
  nameWithType.vb: ApiFileController.ApiFileController(IHubContext(Of PortalHub))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Api.Controllers.v1.ApiFileController.ApiFileController(Microsoft.AspNetCore.SignalR.IHubContext(Of Mix.Cms.Hub.PortalHub))
  name.vb: ApiFileController(IHubContext(Of PortalHub))
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.Details(System.String,System.String)
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiFileController.Details(System.String,System.String)
  id: Details(System.String,System.String)
  parent: Mix.Cms.Api.Controllers.v1.ApiFileController
  langs:
  - csharp
  - vb
  name: Details(String, String)
  nameWithType: ApiFileController.Details(String, String)
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.Details(System.String, System.String)
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<FileViewModel> Details(string folder, string filename)
    parameters:
    - id: folder
      type: System.String
    - id: filename
      type: System.String
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.FileViewModel}
    content.vb: Public Function Details(folder As String, filename As String) As RepositoryResponse(Of FileViewModel)
  overload: Mix.Cms.Api.Controllers.v1.ApiFileController.Details*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.Delete(Mix.Domain.Core.ViewModels.RequestObject)
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiFileController.Delete(Mix.Domain.Core.ViewModels.RequestObject)
  id: Delete(Mix.Domain.Core.ViewModels.RequestObject)
  parent: Mix.Cms.Api.Controllers.v1.ApiFileController
  langs:
  - csharp
  - vb
  name: Delete(RequestObject)
  nameWithType: ApiFileController.Delete(RequestObject)
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.Delete(Mix.Domain.Core.ViewModels.RequestObject)
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<bool> Delete(RequestObject request)
    parameters:
    - id: request
      type: Mix.Domain.Core.ViewModels.RequestObject
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
    content.vb: Public Function Delete(request As RequestObject) As RepositoryResponse(Of Boolean)
  overload: Mix.Cms.Api.Controllers.v1.ApiFileController.Delete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.Edit(Mix.Cms.Lib.ViewModels.FileViewModel)
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiFileController.Edit(Mix.Cms.Lib.ViewModels.FileViewModel)
  id: Edit(Mix.Cms.Lib.ViewModels.FileViewModel)
  parent: Mix.Cms.Api.Controllers.v1.ApiFileController
  langs:
  - csharp
  - vb
  name: Edit(FileViewModel)
  nameWithType: ApiFileController.Edit(FileViewModel)
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.Edit(Mix.Cms.Lib.ViewModels.FileViewModel)
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public IActionResult Edit(FileViewModel file)
    parameters:
    - id: file
      type: Mix.Cms.Lib.ViewModels.FileViewModel
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: Public Function Edit(file As FileViewModel) As IActionResult
  overload: Mix.Cms.Api.Controllers.v1.ApiFileController.Edit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.Save(Mix.Cms.Lib.ViewModels.FileViewModel)
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiFileController.Save(Mix.Cms.Lib.ViewModels.FileViewModel)
  id: Save(Mix.Cms.Lib.ViewModels.FileViewModel)
  parent: Mix.Cms.Api.Controllers.v1.ApiFileController
  langs:
  - csharp
  - vb
  name: Save(FileViewModel)
  nameWithType: ApiFileController.Save(FileViewModel)
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.Save(Mix.Cms.Lib.ViewModels.FileViewModel)
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<FileViewModel> Save(FileViewModel model)
    parameters:
    - id: model
      type: Mix.Cms.Lib.ViewModels.FileViewModel
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.FileViewModel}
    content.vb: Public Function Save(model As FileViewModel) As RepositoryResponse(Of FileViewModel)
  overload: Mix.Cms.Api.Controllers.v1.ApiFileController.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.GetList(Mix.Domain.Core.ViewModels.RequestPaging)
  commentId: M:Mix.Cms.Api.Controllers.v1.ApiFileController.GetList(Mix.Domain.Core.ViewModels.RequestPaging)
  id: GetList(Mix.Domain.Core.ViewModels.RequestPaging)
  parent: Mix.Cms.Api.Controllers.v1.ApiFileController
  langs:
  - csharp
  - vb
  name: GetList(RequestPaging)
  nameWithType: ApiFileController.GetList(RequestPaging)
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.GetList(Mix.Domain.Core.ViewModels.RequestPaging)
  type: Method
  source:
    path: Mix.Cms.Api
    isExternal: true
  assemblies:
  - Mix.Cms.Api
  namespace: Mix.Cms.Api.Controllers.v1
  syntax:
    content: public RepositoryResponse<FilePageViewModel> GetList(RequestPaging request)
    parameters:
    - id: request
      type: Mix.Domain.Core.ViewModels.RequestPaging
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.FilePageViewModel}
    content.vb: Public Function GetList(request As RequestPaging) As RepositoryResponse(Of FilePageViewModel)
  overload: Mix.Cms.Api.Controllers.v1.ApiFileController.GetList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Api.Controllers.v1
  commentId: N:Mix.Cms.Api.Controllers.v1
  isExternal: true
  name: Mix.Cms.Api.Controllers.v1
  nameWithType: Mix.Cms.Api.Controllers.v1
  fullName: Mix.Cms.Api.Controllers.v1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController
  commentId: T:Mix.Cms.Api.Controllers.v1.BaseApiController
  parent: Mix.Cms.Api.Controllers.v1
  isExternal: true
  name: BaseApiController
  nameWithType: BaseApiController
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController._hubContext
  commentId: F:Mix.Cms.Api.Controllers.v1.BaseApiController._hubContext
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: _hubContext
  nameWithType: BaseApiController._hubContext
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController._hubContext
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController._memoryCache
  commentId: F:Mix.Cms.Api.Controllers.v1.BaseApiController._memoryCache
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: _memoryCache
  nameWithType: BaseApiController._memoryCache
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController._memoryCache
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController._lang
  commentId: F:Mix.Cms.Api.Controllers.v1.BaseApiController._lang
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: _lang
  nameWithType: BaseApiController._lang
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController._lang
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController._domain
  commentId: F:Mix.Cms.Api.Controllers.v1.BaseApiController._domain
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: _domain
  nameWithType: BaseApiController._domain
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController._domain
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseApiController.OnActionExecuting(ActionExecutingContext)
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  spec.csharp:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController.OnActionExecuting
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
    name: OnActionExecuting
    nameWithType: BaseApiController.OnActionExecuting
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.OnActionExecuting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    name: ActionExecutingContext
    nameWithType: ActionExecutingContext
    fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String,System.Int32,System.String)
  commentId: M:Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String,System.Int32,System.String)
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: AlertAsync(String, Int32, String)
  nameWithType: BaseApiController.AlertAsync(String, Int32, String)
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String, System.Int32, System.String)
  spec.csharp:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String,System.Int32,System.String)
    name: AlertAsync
    nameWithType: BaseApiController.AlertAsync
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync(System.String,System.Int32,System.String)
    name: AlertAsync
    nameWithType: BaseApiController.AlertAsync
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.AlertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
  commentId: M:Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: ParseRequestPagingDate(RequestPaging)
  nameWithType: BaseApiController.ParseRequestPagingDate(RequestPaging)
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
  spec.csharp:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
    name: ParseRequestPagingDate
    nameWithType: BaseApiController.ParseRequestPagingDate
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Domain.Core.ViewModels.RequestPaging
    name: RequestPaging
    nameWithType: RequestPaging
    fullName: Mix.Domain.Core.ViewModels.RequestPaging
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate(Mix.Domain.Core.ViewModels.RequestPaging)
    name: ParseRequestPagingDate
    nameWithType: BaseApiController.ParseRequestPagingDate
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.ParseRequestPagingDate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Domain.Core.ViewModels.RequestPaging
    name: RequestPaging
    nameWithType: RequestPaging
    fullName: Mix.Domain.Core.ViewModels.RequestPaging
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
  commentId: M:Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
  parent: Mix.Cms.Api.Controllers.v1.BaseApiController
  isExternal: true
  name: GetLanguage()
  nameWithType: BaseApiController.GetLanguage()
  fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage()
  spec.csharp:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController.GetLanguage
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
    name: GetLanguage
    nameWithType: BaseApiController.GetLanguage
    fullName: Mix.Cms.Api.Controllers.v1.BaseApiController.GetLanguage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.#ctor*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiFileController.#ctor
  isExternal: true
  name: ApiFileController
  nameWithType: ApiFileController.ApiFileController
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.ApiFileController
- uid: Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub}
  commentId: '!:Microsoft.AspNetCore.SignalR.IHubContext{Mix.Cms.Hub.PortalHub}'
  definition: Microsoft.AspNetCore.SignalR.IHubContext`1
  name: IHubContext<PortalHub>
  nameWithType: IHubContext<PortalHub>
  fullName: Microsoft.AspNetCore.SignalR.IHubContext<Mix.Cms.Hub.PortalHub>
  nameWithType.vb: IHubContext(Of PortalHub)
  fullName.vb: Microsoft.AspNetCore.SignalR.IHubContext(Of Mix.Cms.Hub.PortalHub)
  name.vb: IHubContext(Of PortalHub)
  spec.csharp:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Hub.PortalHub
    name: PortalHub
    nameWithType: PortalHub
    fullName: Mix.Cms.Hub.PortalHub
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Hub.PortalHub
    name: PortalHub
    nameWithType: PortalHub
    fullName: Mix.Cms.Hub.PortalHub
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.SignalR.IHubContext`1
  isExternal: true
  name: IHubContext<>
  nameWithType: IHubContext<>
  fullName: Microsoft.AspNetCore.SignalR.IHubContext<>
  nameWithType.vb: IHubContext(Of )
  fullName.vb: Microsoft.AspNetCore.SignalR.IHubContext(Of )
  name.vb: IHubContext(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.SignalR.IHubContext`1
    name: IHubContext
    nameWithType: IHubContext
    fullName: Microsoft.AspNetCore.SignalR.IHubContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.Details*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiFileController.Details
  isExternal: true
  name: Details
  nameWithType: ApiFileController.Details
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.Details
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.FileViewModel}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.FileViewModel}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<FileViewModel>
  nameWithType: RepositoryResponse<FileViewModel>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Cms.Lib.ViewModels.FileViewModel>
  nameWithType.vb: RepositoryResponse(Of FileViewModel)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Cms.Lib.ViewModels.FileViewModel)
  name.vb: RepositoryResponse(Of FileViewModel)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.FileViewModel
    name: FileViewModel
    nameWithType: FileViewModel
    fullName: Mix.Cms.Lib.ViewModels.FileViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.FileViewModel
    name: FileViewModel
    nameWithType: FileViewModel
    fullName: Mix.Cms.Lib.ViewModels.FileViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse`1
  isExternal: true
  name: RepositoryResponse<TResult>
  nameWithType: RepositoryResponse<TResult>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<TResult>
  nameWithType.vb: RepositoryResponse(Of TResult)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of TResult)
  name.vb: RepositoryResponse(Of TResult)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels
  commentId: N:Mix.Domain.Core.ViewModels
  isExternal: true
  name: Mix.Domain.Core.ViewModels
  nameWithType: Mix.Domain.Core.ViewModels
  fullName: Mix.Domain.Core.ViewModels
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.Delete*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiFileController.Delete
  isExternal: true
  name: Delete
  nameWithType: ApiFileController.Delete
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.Delete
- uid: Mix.Domain.Core.ViewModels.RequestObject
  commentId: T:Mix.Domain.Core.ViewModels.RequestObject
  parent: Mix.Domain.Core.ViewModels
  isExternal: true
  name: RequestObject
  nameWithType: RequestObject
  fullName: Mix.Domain.Core.ViewModels.RequestObject
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<Boolean>
  nameWithType: RepositoryResponse<Boolean>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<System.Boolean>
  nameWithType.vb: RepositoryResponse(Of Boolean)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of System.Boolean)
  name.vb: RepositoryResponse(Of Boolean)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.Edit*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiFileController.Edit
  isExternal: true
  name: Edit
  nameWithType: ApiFileController.Edit
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.Edit
- uid: Mix.Cms.Lib.ViewModels.FileViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.FileViewModel
  parent: Mix.Cms.Lib.ViewModels
  isExternal: true
  name: FileViewModel
  nameWithType: FileViewModel
  fullName: Mix.Cms.Lib.ViewModels.FileViewModel
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  isExternal: true
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Mix.Cms.Lib.ViewModels
  commentId: N:Mix.Cms.Lib.ViewModels
  isExternal: true
  name: Mix.Cms.Lib.ViewModels
  nameWithType: Mix.Cms.Lib.ViewModels
  fullName: Mix.Cms.Lib.ViewModels
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.Save*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiFileController.Save
  isExternal: true
  name: Save
  nameWithType: ApiFileController.Save
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.Save
- uid: Mix.Cms.Api.Controllers.v1.ApiFileController.GetList*
  commentId: Overload:Mix.Cms.Api.Controllers.v1.ApiFileController.GetList
  isExternal: true
  name: GetList
  nameWithType: ApiFileController.GetList
  fullName: Mix.Cms.Api.Controllers.v1.ApiFileController.GetList
- uid: Mix.Domain.Core.ViewModels.RequestPaging
  commentId: T:Mix.Domain.Core.ViewModels.RequestPaging
  parent: Mix.Domain.Core.ViewModels
  isExternal: true
  name: RequestPaging
  nameWithType: RequestPaging
  fullName: Mix.Domain.Core.ViewModels.RequestPaging
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.FilePageViewModel}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.FilePageViewModel}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<FilePageViewModel>
  nameWithType: RepositoryResponse<FilePageViewModel>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Cms.Lib.ViewModels.FilePageViewModel>
  nameWithType.vb: RepositoryResponse(Of FilePageViewModel)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Cms.Lib.ViewModels.FilePageViewModel)
  name.vb: RepositoryResponse(Of FilePageViewModel)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.FilePageViewModel
    name: FilePageViewModel
    nameWithType: FilePageViewModel
    fullName: Mix.Cms.Lib.ViewModels.FilePageViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.FilePageViewModel
    name: FilePageViewModel
    nameWithType: FilePageViewModel
    fullName: Mix.Cms.Lib.ViewModels.FilePageViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
