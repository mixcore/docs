### YamlMime:ManagedReference
items:
- uid: Mix.UI.Core.SignalR.BaseSignalRHub
  commentId: T:Mix.UI.Core.SignalR.BaseSignalRHub
  id: BaseSignalRHub
  parent: Mix.UI.Core.SignalR
  children:
  - Mix.UI.Core.SignalR.BaseSignalRHub.#ctor
  - Mix.UI.Core.SignalR.BaseSignalRHub.OnConnectedAsync
  - Mix.UI.Core.SignalR.BaseSignalRHub.OnDisconnectedAsync(System.Exception)
  - Mix.UI.Core.SignalR.BaseSignalRHub.UpdateGroupConnection
  - Mix.UI.Core.SignalR.BaseSignalRHub.UpdatePlayerConnectionIdAsync(System.String)
  - Mix.UI.Core.SignalR.BaseSignalRHub.Users
  langs:
  - csharp
  - vb
  name: BaseSignalRHub
  nameWithType: BaseSignalRHub
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub
  type: Class
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.UI.Core.SignalR
  syntax:
    content: 'public abstract class BaseSignalRHub : Hub'
    content.vb: >-
      Public MustInherit Class BaseSignalRHub
          Inherits Hub
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Cms.Hub.PortalHub
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.Users
  commentId: F:Mix.UI.Core.SignalR.BaseSignalRHub.Users
  id: Users
  parent: Mix.UI.Core.SignalR.BaseSignalRHub
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: BaseSignalRHub.Users
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.Users
  type: Field
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.UI.Core.SignalR
  syntax:
    content: protected static readonly List<SignalRClient> Users
    return:
      type: System.Collections.Generic.List{Mix.Domain.Core.Models.SignalRClient}
    content.vb: Protected Shared ReadOnly Users As List(Of SignalRClient)
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.OnConnectedAsync
  commentId: M:Mix.UI.Core.SignalR.BaseSignalRHub.OnConnectedAsync
  id: OnConnectedAsync
  parent: Mix.UI.Core.SignalR.BaseSignalRHub
  langs:
  - csharp
  - vb
  name: OnConnectedAsync()
  nameWithType: BaseSignalRHub.OnConnectedAsync()
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.OnConnectedAsync()
  type: Method
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.UI.Core.SignalR
  syntax:
    content: public override Task OnConnectedAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function OnConnectedAsync As Task
  overload: Mix.UI.Core.SignalR.BaseSignalRHub.OnConnectedAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.OnDisconnectedAsync(System.Exception)
  commentId: M:Mix.UI.Core.SignalR.BaseSignalRHub.OnDisconnectedAsync(System.Exception)
  id: OnDisconnectedAsync(System.Exception)
  parent: Mix.UI.Core.SignalR.BaseSignalRHub
  langs:
  - csharp
  - vb
  name: OnDisconnectedAsync(Exception)
  nameWithType: BaseSignalRHub.OnDisconnectedAsync(Exception)
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.OnDisconnectedAsync(System.Exception)
  type: Method
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.UI.Core.SignalR
  syntax:
    content: public override Task OnDisconnectedAsync(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function OnDisconnectedAsync(exception As Exception) As Task
  overload: Mix.UI.Core.SignalR.BaseSignalRHub.OnDisconnectedAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.UpdateGroupConnection
  commentId: M:Mix.UI.Core.SignalR.BaseSignalRHub.UpdateGroupConnection
  id: UpdateGroupConnection
  parent: Mix.UI.Core.SignalR.BaseSignalRHub
  langs:
  - csharp
  - vb
  name: UpdateGroupConnection()
  nameWithType: BaseSignalRHub.UpdateGroupConnection()
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.UpdateGroupConnection()
  type: Method
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.UI.Core.SignalR
  syntax:
    content: public virtual void UpdateGroupConnection()
    content.vb: Public Overridable Sub UpdateGroupConnection
  overload: Mix.UI.Core.SignalR.BaseSignalRHub.UpdateGroupConnection*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.UpdatePlayerConnectionIdAsync(System.String)
  commentId: M:Mix.UI.Core.SignalR.BaseSignalRHub.UpdatePlayerConnectionIdAsync(System.String)
  id: UpdatePlayerConnectionIdAsync(System.String)
  parent: Mix.UI.Core.SignalR.BaseSignalRHub
  langs:
  - csharp
  - vb
  name: UpdatePlayerConnectionIdAsync(String)
  nameWithType: BaseSignalRHub.UpdatePlayerConnectionIdAsync(String)
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.UpdatePlayerConnectionIdAsync(System.String)
  type: Method
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.UI.Core.SignalR
  syntax:
    content: public virtual void UpdatePlayerConnectionIdAsync(string playerId)
    parameters:
    - id: playerId
      type: System.String
    content.vb: Public Overridable Sub UpdatePlayerConnectionIdAsync(playerId As String)
  overload: Mix.UI.Core.SignalR.BaseSignalRHub.UpdatePlayerConnectionIdAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.#ctor
  commentId: M:Mix.UI.Core.SignalR.BaseSignalRHub.#ctor
  id: '#ctor'
  parent: Mix.UI.Core.SignalR.BaseSignalRHub
  langs:
  - csharp
  - vb
  name: BaseSignalRHub()
  nameWithType: BaseSignalRHub.BaseSignalRHub()
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.BaseSignalRHub()
  type: Constructor
  source:
    path: Mix.Heart
    isExternal: true
  assemblies:
  - Mix.Heart
  namespace: Mix.UI.Core.SignalR
  syntax:
    content: protected BaseSignalRHub()
    content.vb: Protected Sub New
  overload: Mix.UI.Core.SignalR.BaseSignalRHub.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Mix.UI.Core.SignalR
  commentId: N:Mix.UI.Core.SignalR
  isExternal: true
  name: Mix.UI.Core.SignalR
  nameWithType: Mix.UI.Core.SignalR
  fullName: Mix.UI.Core.SignalR
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Mix.Domain.Core.Models.SignalRClient}
  commentId: '!:System.Collections.Generic.List{Mix.Domain.Core.Models.SignalRClient}'
  definition: System.Collections.Generic.List`1
  name: List<SignalRClient>
  nameWithType: List<SignalRClient>
  fullName: System.Collections.Generic.List<Mix.Domain.Core.Models.SignalRClient>
  nameWithType.vb: List(Of SignalRClient)
  fullName.vb: System.Collections.Generic.List(Of Mix.Domain.Core.Models.SignalRClient)
  name.vb: List(Of SignalRClient)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SignalRClient
    name: SignalRClient
    nameWithType: SignalRClient
    fullName: Mix.Domain.Core.Models.SignalRClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SignalRClient
    name: SignalRClient
    nameWithType: SignalRClient
    fullName: Mix.Domain.Core.Models.SignalRClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.OnConnectedAsync*
  commentId: Overload:Mix.UI.Core.SignalR.BaseSignalRHub.OnConnectedAsync
  isExternal: true
  name: OnConnectedAsync
  nameWithType: BaseSignalRHub.OnConnectedAsync
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.OnConnectedAsync
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.OnDisconnectedAsync*
  commentId: Overload:Mix.UI.Core.SignalR.BaseSignalRHub.OnDisconnectedAsync
  isExternal: true
  name: OnDisconnectedAsync
  nameWithType: BaseSignalRHub.OnDisconnectedAsync
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.OnDisconnectedAsync
- uid: System.Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.UpdateGroupConnection*
  commentId: Overload:Mix.UI.Core.SignalR.BaseSignalRHub.UpdateGroupConnection
  isExternal: true
  name: UpdateGroupConnection
  nameWithType: BaseSignalRHub.UpdateGroupConnection
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.UpdateGroupConnection
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.UpdatePlayerConnectionIdAsync*
  commentId: Overload:Mix.UI.Core.SignalR.BaseSignalRHub.UpdatePlayerConnectionIdAsync
  isExternal: true
  name: UpdatePlayerConnectionIdAsync
  nameWithType: BaseSignalRHub.UpdatePlayerConnectionIdAsync
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.UpdatePlayerConnectionIdAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.UI.Core.SignalR.BaseSignalRHub.#ctor*
  commentId: Overload:Mix.UI.Core.SignalR.BaseSignalRHub.#ctor
  isExternal: true
  name: BaseSignalRHub
  nameWithType: BaseSignalRHub.BaseSignalRHub
  fullName: Mix.UI.Core.SignalR.BaseSignalRHub.BaseSignalRHub
