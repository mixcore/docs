### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  commentId: T:Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  id: MixCmsAccountContext
  parent: Mix.Cms.Lib.Models.Account
  children:
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.#ctor
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext})
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoleClaims
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoles
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserClaims
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserLogins
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserRoles
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUsers
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserTokens
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.Clients
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Mix.Cms.Lib.Models.Account.MixCmsAccountContext.RefreshTokens
  langs:
  - csharp
  - vb
  name: MixCmsAccountContext
  nameWithType: MixCmsAccountContext
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  type: Class
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: 'public class MixCmsAccountContext : DbContext'
    content.vb: >-
      Public Class MixCmsAccountContext
          Inherits DbContext
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext})
  commentId: M:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext})
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext})'
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: MixCmsAccountContext(DbContextOptions<ApplicationDbContext>)
  nameWithType: MixCmsAccountContext.MixCmsAccountContext(DbContextOptions<ApplicationDbContext>)
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.MixCmsAccountContext(Microsoft.EntityFrameworkCore.DbContextOptions<Mix.Identity.Data.ApplicationDbContext>)
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public MixCmsAccountContext(DbContextOptions<ApplicationDbContext> options)
    parameters:
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext}
    content.vb: Public Sub New(options As DbContextOptions(Of ApplicationDbContext))
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.#ctor*
  nameWithType.vb: MixCmsAccountContext.MixCmsAccountContext(DbContextOptions(Of ApplicationDbContext))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.MixCmsAccountContext(Microsoft.EntityFrameworkCore.DbContextOptions(Of Mix.Identity.Data.ApplicationDbContext))
  name.vb: MixCmsAccountContext(DbContextOptions(Of ApplicationDbContext))
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.#ctor
  commentId: M:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: MixCmsAccountContext()
  nameWithType: MixCmsAccountContext.MixCmsAccountContext()
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.MixCmsAccountContext()
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public MixCmsAccountContext()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  id: OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: MixCmsAccountContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    content.vb: Protected Overrides Sub OnConfiguring(optionsBuilder As DbContextOptionsBuilder)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnConfiguring*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  id: OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: OnModelCreating(ModelBuilder)
  nameWithType: MixCmsAccountContext.OnModelCreating(ModelBuilder)
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: protected override void OnModelCreating(ModelBuilder modelBuilder)
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    content.vb: Protected Overrides Sub OnModelCreating(modelBuilder As ModelBuilder)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnModelCreating*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoleClaims
  commentId: P:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoleClaims
  id: AspNetRoleClaims
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetRoleClaims
  nameWithType: MixCmsAccountContext.AspNetRoleClaims
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoleClaims
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual DbSet<AspNetRoleClaims> AspNetRoleClaims { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetRoleClaims}
    content.vb: Public Overridable Property AspNetRoleClaims As DbSet(Of AspNetRoleClaims)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoleClaims*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoles
  commentId: P:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoles
  id: AspNetRoles
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetRoles
  nameWithType: MixCmsAccountContext.AspNetRoles
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoles
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetRoles}
    content.vb: Public Overridable Property AspNetRoles As DbSet(Of AspNetRoles)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoles*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserClaims
  commentId: P:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserClaims
  id: AspNetUserClaims
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetUserClaims
  nameWithType: MixCmsAccountContext.AspNetUserClaims
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserClaims
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserClaims}
    content.vb: Public Overridable Property AspNetUserClaims As DbSet(Of AspNetUserClaims)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserClaims*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserLogins
  commentId: P:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserLogins
  id: AspNetUserLogins
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetUserLogins
  nameWithType: MixCmsAccountContext.AspNetUserLogins
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserLogins
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserLogins}
    content.vb: Public Overridable Property AspNetUserLogins As DbSet(Of AspNetUserLogins)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserLogins*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserRoles
  commentId: P:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserRoles
  id: AspNetUserRoles
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetUserRoles
  nameWithType: MixCmsAccountContext.AspNetUserRoles
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserRoles
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual DbSet<AspNetUserRoles> AspNetUserRoles { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserRoles}
    content.vb: Public Overridable Property AspNetUserRoles As DbSet(Of AspNetUserRoles)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserRoles*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUsers
  commentId: P:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUsers
  id: AspNetUsers
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetUsers
  nameWithType: MixCmsAccountContext.AspNetUsers
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUsers
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUsers}
    content.vb: Public Overridable Property AspNetUsers As DbSet(Of AspNetUsers)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUsers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserTokens
  commentId: P:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserTokens
  id: AspNetUserTokens
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetUserTokens
  nameWithType: MixCmsAccountContext.AspNetUserTokens
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserTokens
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual DbSet<AspNetUserTokens> AspNetUserTokens { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserTokens}
    content.vb: Public Overridable Property AspNetUserTokens As DbSet(Of AspNetUserTokens)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserTokens*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.Clients
  commentId: P:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.Clients
  id: Clients
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: Clients
  nameWithType: MixCmsAccountContext.Clients
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.Clients
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual DbSet<Clients> Clients { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.Clients}
    content.vb: Public Overridable Property Clients As DbSet(Of Clients)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.Clients*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.RefreshTokens
  commentId: P:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.RefreshTokens
  id: RefreshTokens
  parent: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: RefreshTokens
  nameWithType: MixCmsAccountContext.RefreshTokens
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.RefreshTokens
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual DbSet<RefreshTokens> RefreshTokens { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.RefreshTokens}
    content.vb: Public Overridable Property RefreshTokens As DbSet(Of RefreshTokens)
  overload: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.RefreshTokens*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Cms.Lib.Models.Account
  commentId: N:Mix.Cms.Lib.Models.Account
  isExternal: true
  name: Mix.Cms.Lib.Models.Account
  nameWithType: Mix.Cms.Lib.Models.Account
  fullName: Mix.Cms.Lib.Models.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.#ctor*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.#ctor
  isExternal: true
  name: MixCmsAccountContext
  nameWithType: MixCmsAccountContext.MixCmsAccountContext
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.MixCmsAccountContext
- uid: Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext}
  commentId: '!:Microsoft.EntityFrameworkCore.DbContextOptions{Mix.Identity.Data.ApplicationDbContext}'
  definition: Microsoft.EntityFrameworkCore.DbContextOptions`1
  name: DbContextOptions<ApplicationDbContext>
  nameWithType: DbContextOptions<ApplicationDbContext>
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions<Mix.Identity.Data.ApplicationDbContext>
  nameWithType.vb: DbContextOptions(Of ApplicationDbContext)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContextOptions(Of Mix.Identity.Data.ApplicationDbContext)
  name.vb: DbContextOptions(Of ApplicationDbContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Identity.Data.ApplicationDbContext
    name: ApplicationDbContext
    nameWithType: ApplicationDbContext
    fullName: Mix.Identity.Data.ApplicationDbContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Identity.Data.ApplicationDbContext
    name: ApplicationDbContext
    nameWithType: ApplicationDbContext
    fullName: Mix.Identity.Data.ApplicationDbContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
  isExternal: true
  name: DbContextOptions<>
  nameWithType: DbContextOptions<>
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions<>
  nameWithType.vb: DbContextOptions(Of )
  fullName.vb: Microsoft.EntityFrameworkCore.DbContextOptions(Of )
  name.vb: DbContextOptions(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnConfiguring*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnConfiguring
  isExternal: true
  name: OnConfiguring
  nameWithType: MixCmsAccountContext.OnConfiguring
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnConfiguring
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  isExternal: true
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnModelCreating*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnModelCreating
  isExternal: true
  name: OnModelCreating
  nameWithType: MixCmsAccountContext.OnModelCreating
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.OnModelCreating
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  isExternal: true
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoleClaims*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoleClaims
  isExternal: true
  name: AspNetRoleClaims
  nameWithType: MixCmsAccountContext.AspNetRoleClaims
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoleClaims
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetRoleClaims}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetRoleClaims}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AspNetRoleClaims>
  nameWithType: DbSet<AspNetRoleClaims>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Cms.Lib.Models.Account.AspNetRoleClaims>
  nameWithType.vb: DbSet(Of AspNetRoleClaims)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Cms.Lib.Models.Account.AspNetRoleClaims)
  name.vb: DbSet(Of AspNetRoleClaims)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Cms.Lib.Models.Account.AspNetRoleClaims
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Cms.Lib.Models.Account.AspNetRoleClaims
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: true
  name: DbSet<>
  nameWithType: DbSet<>
  fullName: Microsoft.EntityFrameworkCore.DbSet<>
  nameWithType.vb: DbSet(Of )
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of )
  name.vb: DbSet(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoles*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoles
  isExternal: true
  name: AspNetRoles
  nameWithType: MixCmsAccountContext.AspNetRoles
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetRoles
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetRoles}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetRoles}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AspNetRoles>
  nameWithType: DbSet<AspNetRoles>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Cms.Lib.Models.Account.AspNetRoles>
  nameWithType.vb: DbSet(Of AspNetRoles)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Cms.Lib.Models.Account.AspNetRoles)
  name.vb: DbSet(Of AspNetRoles)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Mix.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Mix.Cms.Lib.Models.Account.AspNetRoles
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserClaims*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserClaims
  isExternal: true
  name: AspNetUserClaims
  nameWithType: MixCmsAccountContext.AspNetUserClaims
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserClaims
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserClaims}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserClaims}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AspNetUserClaims>
  nameWithType: DbSet<AspNetUserClaims>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Cms.Lib.Models.Account.AspNetUserClaims>
  nameWithType.vb: DbSet(Of AspNetUserClaims)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Cms.Lib.Models.Account.AspNetUserClaims)
  name.vb: DbSet(Of AspNetUserClaims)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserLogins*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserLogins
  isExternal: true
  name: AspNetUserLogins
  nameWithType: MixCmsAccountContext.AspNetUserLogins
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserLogins
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserLogins}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserLogins}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AspNetUserLogins>
  nameWithType: DbSet<AspNetUserLogins>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Cms.Lib.Models.Account.AspNetUserLogins>
  nameWithType.vb: DbSet(Of AspNetUserLogins)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Cms.Lib.Models.Account.AspNetUserLogins)
  name.vb: DbSet(Of AspNetUserLogins)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Cms.Lib.Models.Account.AspNetUserLogins
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Cms.Lib.Models.Account.AspNetUserLogins
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserRoles*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserRoles
  isExternal: true
  name: AspNetUserRoles
  nameWithType: MixCmsAccountContext.AspNetUserRoles
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserRoles
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserRoles}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserRoles}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AspNetUserRoles>
  nameWithType: DbSet<AspNetUserRoles>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Cms.Lib.Models.Account.AspNetUserRoles>
  nameWithType.vb: DbSet(Of AspNetUserRoles)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Cms.Lib.Models.Account.AspNetUserRoles)
  name.vb: DbSet(Of AspNetUserRoles)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUsers*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUsers
  isExternal: true
  name: AspNetUsers
  nameWithType: MixCmsAccountContext.AspNetUsers
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUsers
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUsers}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUsers}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AspNetUsers>
  nameWithType: DbSet<AspNetUsers>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Cms.Lib.Models.Account.AspNetUsers>
  nameWithType.vb: DbSet(Of AspNetUsers)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Cms.Lib.Models.Account.AspNetUsers)
  name.vb: DbSet(Of AspNetUsers)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Mix.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.AspNetUsers
    name: AspNetUsers
    nameWithType: AspNetUsers
    fullName: Mix.Cms.Lib.Models.Account.AspNetUsers
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserTokens*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserTokens
  isExternal: true
  name: AspNetUserTokens
  nameWithType: MixCmsAccountContext.AspNetUserTokens
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.AspNetUserTokens
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserTokens}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.AspNetUserTokens}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AspNetUserTokens>
  nameWithType: DbSet<AspNetUserTokens>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Cms.Lib.Models.Account.AspNetUserTokens>
  nameWithType.vb: DbSet(Of AspNetUserTokens)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Cms.Lib.Models.Account.AspNetUserTokens)
  name.vb: DbSet(Of AspNetUserTokens)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Cms.Lib.Models.Account.AspNetUserTokens
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Cms.Lib.Models.Account.AspNetUserTokens
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.Clients*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.Clients
  isExternal: true
  name: Clients
  nameWithType: MixCmsAccountContext.Clients
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.Clients
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.Clients}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.Clients}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Clients>
  nameWithType: DbSet<Clients>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Cms.Lib.Models.Account.Clients>
  nameWithType.vb: DbSet(Of Clients)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Cms.Lib.Models.Account.Clients)
  name.vb: DbSet(Of Clients)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.Clients
    name: Clients
    nameWithType: Clients
    fullName: Mix.Cms.Lib.Models.Account.Clients
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.Clients
    name: Clients
    nameWithType: Clients
    fullName: Mix.Cms.Lib.Models.Account.Clients
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.RefreshTokens*
  commentId: Overload:Mix.Cms.Lib.Models.Account.MixCmsAccountContext.RefreshTokens
  isExternal: true
  name: RefreshTokens
  nameWithType: MixCmsAccountContext.RefreshTokens
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext.RefreshTokens
- uid: Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.RefreshTokens}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Mix.Cms.Lib.Models.Account.RefreshTokens}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<RefreshTokens>
  nameWithType: DbSet<RefreshTokens>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mix.Cms.Lib.Models.Account.RefreshTokens>
  nameWithType.vb: DbSet(Of RefreshTokens)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mix.Cms.Lib.Models.Account.RefreshTokens)
  name.vb: DbSet(Of RefreshTokens)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Mix.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Mix.Cms.Lib.Models.Account.RefreshTokens
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
