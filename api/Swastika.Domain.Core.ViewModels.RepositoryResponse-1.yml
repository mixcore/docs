### YamlMime:ManagedReference
items:
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  commentId: T:Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  id: RepositoryResponse`1
  parent: Swastika.Domain.Core.ViewModels
  children:
  - Swastika.Domain.Core.ViewModels.RepositoryResponse`1.#ctor
  - Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Data
  - Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Errors
  - Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Exception
  - Swastika.Domain.Core.ViewModels.RepositoryResponse`1.IsSucceed
  - Swastika.Domain.Core.ViewModels.RepositoryResponse`1.ResponseKey
  - Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Status
  langs:
  - csharp
  - vb
  name: RepositoryResponse<TResult>
  nameWithType: RepositoryResponse<TResult>
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>
  type: Class
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: 'public class RepositoryResponse<TResult> : Object'
    typeParameters:
    - id: TResult
    content.vb: >-
      Public Class RepositoryResponse(Of TResult)
          Inherits Object
  inheritance:
  - System.Object
  nameWithType.vb: RepositoryResponse(Of TResult)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult)
  name.vb: RepositoryResponse(Of TResult)
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.#ctor
  commentId: M:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.#ctor
  id: '#ctor'
  parent: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  langs:
  - csharp
  - vb
  name: RepositoryResponse()
  nameWithType: RepositoryResponse<TResult>.RepositoryResponse()
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.RepositoryResponse()
  type: Constructor
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public RepositoryResponse()
    content.vb: Public Sub New
  overload: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.#ctor*
  nameWithType.vb: RepositoryResponse(Of TResult).RepositoryResponse()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).RepositoryResponse()
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.IsSucceed
  commentId: P:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.IsSucceed
  id: IsSucceed
  parent: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  langs:
  - csharp
  - vb
  name: IsSucceed
  nameWithType: RepositoryResponse<TResult>.IsSucceed
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.IsSucceed
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public bool IsSucceed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSucceed As Boolean
  overload: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.IsSucceed*
  nameWithType.vb: RepositoryResponse(Of TResult).IsSucceed
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).IsSucceed
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.ResponseKey
  commentId: P:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.ResponseKey
  id: ResponseKey
  parent: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  langs:
  - csharp
  - vb
  name: ResponseKey
  nameWithType: RepositoryResponse<TResult>.ResponseKey
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.ResponseKey
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public string ResponseKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ResponseKey As String
  overload: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.ResponseKey*
  nameWithType.vb: RepositoryResponse(Of TResult).ResponseKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).ResponseKey
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Status
  commentId: P:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Status
  id: Status
  parent: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: RepositoryResponse<TResult>.Status
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.Status
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public int Status { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Status As Integer
  overload: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Status*
  nameWithType.vb: RepositoryResponse(Of TResult).Status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).Status
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Errors
  commentId: P:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Errors
  id: Errors
  parent: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: RepositoryResponse<TResult>.Errors
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.Errors
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public List<string> Errors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property Errors As List(Of String)
  overload: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Errors*
  nameWithType.vb: RepositoryResponse(Of TResult).Errors
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).Errors
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Exception
  commentId: P:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Exception
  id: Exception
  parent: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: RepositoryResponse<TResult>.Exception
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.Exception
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public Exception Exception { get; set; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public Property Exception As Exception
  overload: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Exception*
  nameWithType.vb: RepositoryResponse(Of TResult).Exception
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).Exception
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Data
  commentId: P:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Data
  id: Data
  parent: Swastika.Domain.Core.ViewModels.RepositoryResponse`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: RepositoryResponse<TResult>.Data
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.Data
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public TResult Data { get; set; }
    parameters: []
    return:
      type: '{TResult}'
    content.vb: Public Property Data As TResult
  overload: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Data*
  nameWithType.vb: RepositoryResponse(Of TResult).Data
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).Data
references:
- uid: Swastika.Domain.Core.ViewModels
  commentId: N:Swastika.Domain.Core.ViewModels
  isExternal: true
  name: Swastika.Domain.Core.ViewModels
  nameWithType: Swastika.Domain.Core.ViewModels
  fullName: Swastika.Domain.Core.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.#ctor*
  commentId: Overload:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.#ctor
  isExternal: true
  name: RepositoryResponse
  nameWithType: RepositoryResponse<TResult>.RepositoryResponse
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.RepositoryResponse
  nameWithType.vb: RepositoryResponse(Of TResult).RepositoryResponse
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).RepositoryResponse
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.IsSucceed*
  commentId: Overload:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.IsSucceed
  isExternal: true
  name: IsSucceed
  nameWithType: RepositoryResponse<TResult>.IsSucceed
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.IsSucceed
  nameWithType.vb: RepositoryResponse(Of TResult).IsSucceed
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).IsSucceed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.ResponseKey*
  commentId: Overload:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.ResponseKey
  isExternal: true
  name: ResponseKey
  nameWithType: RepositoryResponse<TResult>.ResponseKey
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.ResponseKey
  nameWithType.vb: RepositoryResponse(Of TResult).ResponseKey
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).ResponseKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Status*
  commentId: Overload:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Status
  isExternal: true
  name: Status
  nameWithType: RepositoryResponse<TResult>.Status
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.Status
  nameWithType.vb: RepositoryResponse(Of TResult).Status
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).Status
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Errors*
  commentId: Overload:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Errors
  isExternal: true
  name: Errors
  nameWithType: RepositoryResponse<TResult>.Errors
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.Errors
  nameWithType.vb: RepositoryResponse(Of TResult).Errors
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).Errors
- uid: System.Collections.Generic.List{System.String}
  commentId: '!:System.Collections.Generic.List{System.String}'
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Exception*
  commentId: Overload:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Exception
  isExternal: true
  name: Exception
  nameWithType: RepositoryResponse<TResult>.Exception
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.Exception
  nameWithType.vb: RepositoryResponse(Of TResult).Exception
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).Exception
- uid: System.Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Data*
  commentId: Overload:Swastika.Domain.Core.ViewModels.RepositoryResponse`1.Data
  isExternal: true
  name: Data
  nameWithType: RepositoryResponse<TResult>.Data
  fullName: Swastika.Domain.Core.ViewModels.RepositoryResponse<TResult>.Data
  nameWithType.vb: RepositoryResponse(Of TResult).Data
  fullName.vb: Swastika.Domain.Core.ViewModels.RepositoryResponse(Of TResult).Data
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
