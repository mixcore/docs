### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Web.Controllers.BaseController
  commentId: T:Mix.Cms.Web.Controllers.BaseController
  id: BaseController
  parent: Mix.Cms.Web.Controllers
  children:
  - Mix.Cms.Web.Controllers.BaseController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,AutoMapper.Configuration.IConfiguration)
  - Mix.Cms.Web.Controllers.BaseController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache)
  - Mix.Cms.Web.Controllers.BaseController._configuration
  - Mix.Cms.Web.Controllers.BaseController._culture
  - Mix.Cms.Web.Controllers.BaseController._domain
  - Mix.Cms.Web.Controllers.BaseController._env
  - Mix.Cms.Web.Controllers.BaseController._memoryCache
  - Mix.Cms.Web.Controllers.BaseController.GetLanguage
  - Mix.Cms.Web.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  - Mix.Cms.Web.Controllers.BaseController.ViewContext
  langs:
  - csharp
  - vb
  name: BaseController
  nameWithType: BaseController
  fullName: Mix.Cms.Web.Controllers.BaseController
  type: Class
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: 'public class BaseController : Controller'
    content.vb: >-
      Public Class BaseController
          Inherits Controller
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Cms.Web.Controllers.HomeController
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Web.Controllers.BaseController._domain
  commentId: F:Mix.Cms.Web.Controllers.BaseController._domain
  id: _domain
  parent: Mix.Cms.Web.Controllers.BaseController
  langs:
  - csharp
  - vb
  name: _domain
  nameWithType: BaseController._domain
  fullName: Mix.Cms.Web.Controllers.BaseController._domain
  type: Field
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: protected string _domain
    return:
      type: System.String
    content.vb: Protected _domain As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mix.Cms.Web.Controllers.BaseController._configuration
  commentId: F:Mix.Cms.Web.Controllers.BaseController._configuration
  id: _configuration
  parent: Mix.Cms.Web.Controllers.BaseController
  langs:
  - csharp
  - vb
  name: _configuration
  nameWithType: BaseController._configuration
  fullName: Mix.Cms.Web.Controllers.BaseController._configuration
  type: Field
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: protected IConfiguration _configuration
    return:
      type: AutoMapper.Configuration.IConfiguration
    content.vb: Protected _configuration As IConfiguration
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mix.Cms.Web.Controllers.BaseController._env
  commentId: F:Mix.Cms.Web.Controllers.BaseController._env
  id: _env
  parent: Mix.Cms.Web.Controllers.BaseController
  langs:
  - csharp
  - vb
  name: _env
  nameWithType: BaseController._env
  fullName: Mix.Cms.Web.Controllers.BaseController._env
  type: Field
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: protected IHostingEnvironment _env
    return:
      type: Microsoft.AspNetCore.Hosting.IHostingEnvironment
    content.vb: Protected _env As IHostingEnvironment
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mix.Cms.Web.Controllers.BaseController._memoryCache
  commentId: F:Mix.Cms.Web.Controllers.BaseController._memoryCache
  id: _memoryCache
  parent: Mix.Cms.Web.Controllers.BaseController
  langs:
  - csharp
  - vb
  name: _memoryCache
  nameWithType: BaseController._memoryCache
  fullName: Mix.Cms.Web.Controllers.BaseController._memoryCache
  type: Field
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: protected readonly IMemoryCache _memoryCache
    return:
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
    content.vb: Protected ReadOnly _memoryCache As IMemoryCache
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Mix.Cms.Web.Controllers.BaseController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache)
  commentId: M:Mix.Cms.Web.Controllers.BaseController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache)
  id: '#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Caching.Memory.IMemoryCache)'
  parent: Mix.Cms.Web.Controllers.BaseController
  langs:
  - csharp
  - vb
  name: BaseController(IHostingEnvironment, IMemoryCache)
  nameWithType: BaseController.BaseController(IHostingEnvironment, IMemoryCache)
  fullName: Mix.Cms.Web.Controllers.BaseController.BaseController(Microsoft.AspNetCore.Hosting.IHostingEnvironment, Microsoft.Extensions.Caching.Memory.IMemoryCache)
  type: Constructor
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: public BaseController(IHostingEnvironment env, IMemoryCache memoryCache)
    parameters:
    - id: env
      type: Microsoft.AspNetCore.Hosting.IHostingEnvironment
    - id: memoryCache
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
    content.vb: Public Sub New(env As IHostingEnvironment, memoryCache As IMemoryCache)
  overload: Mix.Cms.Web.Controllers.BaseController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Web.Controllers.BaseController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,AutoMapper.Configuration.IConfiguration)
  commentId: M:Mix.Cms.Web.Controllers.BaseController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,AutoMapper.Configuration.IConfiguration)
  id: '#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,AutoMapper.Configuration.IConfiguration)'
  parent: Mix.Cms.Web.Controllers.BaseController
  langs:
  - csharp
  - vb
  name: BaseController(IHostingEnvironment, IConfiguration)
  nameWithType: BaseController.BaseController(IHostingEnvironment, IConfiguration)
  fullName: Mix.Cms.Web.Controllers.BaseController.BaseController(Microsoft.AspNetCore.Hosting.IHostingEnvironment, AutoMapper.Configuration.IConfiguration)
  type: Constructor
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: public BaseController(IHostingEnvironment env, IConfiguration configuration)
    parameters:
    - id: env
      type: Microsoft.AspNetCore.Hosting.IHostingEnvironment
    - id: configuration
      type: AutoMapper.Configuration.IConfiguration
    content.vb: Public Sub New(env As IHostingEnvironment, configuration As IConfiguration)
  overload: Mix.Cms.Web.Controllers.BaseController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Web.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  commentId: M:Mix.Cms.Web.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  id: OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  parent: Mix.Cms.Web.Controllers.BaseController
  langs:
  - csharp
  - vb
  name: OnActionExecuting(ActionExecutingContext)
  nameWithType: BaseController.OnActionExecuting(ActionExecutingContext)
  fullName: Mix.Cms.Web.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)
  type: Method
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: public override void OnActionExecuting(ActionExecutingContext context)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
    content.vb: Public Overrides Sub OnActionExecuting(context As ActionExecutingContext)
  overload: Mix.Cms.Web.Controllers.BaseController.OnActionExecuting*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Cms.Web.Controllers.BaseController.GetLanguage
  commentId: M:Mix.Cms.Web.Controllers.BaseController.GetLanguage
  id: GetLanguage
  parent: Mix.Cms.Web.Controllers.BaseController
  langs:
  - csharp
  - vb
  name: GetLanguage()
  nameWithType: BaseController.GetLanguage()
  fullName: Mix.Cms.Web.Controllers.BaseController.GetLanguage()
  type: Method
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: protected void GetLanguage()
    content.vb: Protected Sub GetLanguage
  overload: Mix.Cms.Web.Controllers.BaseController.GetLanguage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mix.Cms.Web.Controllers.BaseController.ViewContext
  commentId: P:Mix.Cms.Web.Controllers.BaseController.ViewContext
  id: ViewContext
  parent: Mix.Cms.Web.Controllers.BaseController
  langs:
  - csharp
  - vb
  name: ViewContext
  nameWithType: BaseController.ViewContext
  fullName: Mix.Cms.Web.Controllers.BaseController.ViewContext
  type: Property
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: public ViewContext ViewContext { get; set; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Mvc.Rendering.ViewContext
    content.vb: Public Property ViewContext As ViewContext
  overload: Mix.Cms.Web.Controllers.BaseController.ViewContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Web.Controllers.BaseController._culture
  commentId: P:Mix.Cms.Web.Controllers.BaseController._culture
  id: _culture
  parent: Mix.Cms.Web.Controllers.BaseController
  langs:
  - csharp
  - vb
  name: _culture
  nameWithType: BaseController._culture
  fullName: Mix.Cms.Web.Controllers.BaseController._culture
  type: Property
  source:
    path: Mix.Cms.Web
    isExternal: true
  assemblies:
  - Mix.Cms.Web
  namespace: Mix.Cms.Web.Controllers
  syntax:
    content: protected string _culture { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property _culture As String
  overload: Mix.Cms.Web.Controllers.BaseController._culture*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
references:
- uid: Mix.Cms.Web.Controllers
  commentId: N:Mix.Cms.Web.Controllers
  isExternal: true
  name: Mix.Cms.Web.Controllers
  nameWithType: Mix.Cms.Web.Controllers
  fullName: Mix.Cms.Web.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutoMapper.Configuration.IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: AutoMapper.Configuration.IConfiguration
- uid: Microsoft.AspNetCore.Hosting.IHostingEnvironment
  isExternal: true
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IHostingEnvironment
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  isExternal: true
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Mix.Cms.Web.Controllers.BaseController.#ctor*
  commentId: Overload:Mix.Cms.Web.Controllers.BaseController.#ctor
  isExternal: true
  name: BaseController
  nameWithType: BaseController.BaseController
  fullName: Mix.Cms.Web.Controllers.BaseController.BaseController
- uid: Mix.Cms.Web.Controllers.BaseController.OnActionExecuting*
  commentId: Overload:Mix.Cms.Web.Controllers.BaseController.OnActionExecuting
  isExternal: true
  name: OnActionExecuting
  nameWithType: BaseController.OnActionExecuting
  fullName: Mix.Cms.Web.Controllers.BaseController.OnActionExecuting
- uid: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
  isExternal: true
  name: ActionExecutingContext
  nameWithType: ActionExecutingContext
  fullName: Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
- uid: Mix.Cms.Web.Controllers.BaseController.GetLanguage*
  commentId: Overload:Mix.Cms.Web.Controllers.BaseController.GetLanguage
  isExternal: true
  name: GetLanguage
  nameWithType: BaseController.GetLanguage
  fullName: Mix.Cms.Web.Controllers.BaseController.GetLanguage
- uid: Mix.Cms.Web.Controllers.BaseController.ViewContext*
  commentId: Overload:Mix.Cms.Web.Controllers.BaseController.ViewContext
  isExternal: true
  name: ViewContext
  nameWithType: BaseController.ViewContext
  fullName: Mix.Cms.Web.Controllers.BaseController.ViewContext
- uid: Microsoft.AspNetCore.Mvc.Rendering.ViewContext
  commentId: '!:Microsoft.AspNetCore.Mvc.Rendering.ViewContext'
  isExternal: true
  name: ViewContext
  nameWithType: ViewContext
  fullName: Microsoft.AspNetCore.Mvc.Rendering.ViewContext
- uid: Mix.Cms.Web.Controllers.BaseController._culture*
  commentId: Overload:Mix.Cms.Web.Controllers.BaseController._culture
  isExternal: true
  name: _culture
  nameWithType: BaseController._culture
  fullName: Mix.Cms.Web.Controllers.BaseController._culture
