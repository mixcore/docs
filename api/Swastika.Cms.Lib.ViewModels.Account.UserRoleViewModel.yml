### YamlMime:ManagedReference
items:
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
  id: UserRoleViewModel
  parent: Swastika.Cms.Lib.ViewModels.Account
  children:
  - Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.#ctor
  - Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.#ctor(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ApplicationUserId
  - Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.Role
  - Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.RoleId
  - Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserId
  langs:
  - csharp
  - vb
  name: UserRoleViewModel
  nameWithType: UserRoleViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
  type: Class
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: 'public class UserRoleViewModel : ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>'
    content.vb: >-
      Public Class UserRoleViewModel
          Inherits ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel)
  inheritance:
  - System.Object
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  inheritedMembers:
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.IsValid
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.InitContext
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.InitModel
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.InitView(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Clone(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Repository
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Exception
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.IsClone
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.IsLazyLoad
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ListSupportedCulture
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Mapper
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Model
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ModelMapper
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.PageIndex
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.PageSize
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Priority
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Status
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Specificulture
  - Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Errors
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.#ctor
  commentId: M:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.#ctor
  id: '#ctor'
  parent: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
  langs:
  - csharp
  - vb
  name: UserRoleViewModel()
  nameWithType: UserRoleViewModel.UserRoleViewModel()
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserRoleViewModel()
  type: Constructor
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public UserRoleViewModel()
    content.vb: Public Sub New
  overload: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.#ctor(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.#ctor(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: '#ctor(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)'
  parent: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
  langs:
  - csharp
  - vb
  name: UserRoleViewModel(AspNetUserRoles, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: UserRoleViewModel.UserRoleViewModel(AspNetUserRoles, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserRoleViewModel(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Constructor
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public UserRoleViewModel(AspNetUserRoles model, SiocCmsAccountContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: model
      type: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    - id: _context
      type: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Sub New(model As AspNetUserRoles, _context As SiocCmsAccountContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
  langs:
  - csharp
  - vb
  name: ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: UserRoleViewModel.ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public override void ExpandView(SiocCmsAccountContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: _context
      type: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Overrides Sub ExpandView(_context As SiocCmsAccountContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserId
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserId
  id: UserId
  parent: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: UserRoleViewModel.UserId
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserId
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public string UserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserId As String
  overload: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.RoleId
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.RoleId
  id: RoleId
  parent: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
  langs:
  - csharp
  - vb
  name: RoleId
  nameWithType: UserRoleViewModel.RoleId
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.RoleId
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public string RoleId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RoleId As String
  overload: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.RoleId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ApplicationUserId
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ApplicationUserId
  id: ApplicationUserId
  parent: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
  langs:
  - csharp
  - vb
  name: ApplicationUserId
  nameWithType: UserRoleViewModel.ApplicationUserId
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ApplicationUserId
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public string ApplicationUserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplicationUserId As String
  overload: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ApplicationUserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.Role
  commentId: P:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.Role
  id: Role
  parent: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: UserRoleViewModel.Role
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.Role
  type: Property
  source:
    path: Swastika.Cms.Lib
    isExternal: true
  assemblies:
  - Swastika.Cms.Lib
  namespace: Swastika.Cms.Lib.ViewModels.Account
  syntax:
    content: public RoleViewModel Role { get; set; }
    parameters: []
    return:
      type: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
    content.vb: Public Property Role As RoleViewModel
  overload: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.Role*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Swastika.Cms.Lib.ViewModels.Account
  commentId: N:Swastika.Cms.Lib.ViewModels.Account
  isExternal: true
  name: Swastika.Cms.Lib.ViewModels.Account
  nameWithType: Swastika.Cms.Lib.ViewModels.Account
  fullName: Swastika.Cms.Lib.ViewModels.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  commentId: T:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  parent: Swastika.Domain.Data.ViewModels
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3
  name: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel)
  name.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    name: UserRoleViewModel
    nameWithType: UserRoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    name: UserRoleViewModel
    nameWithType: UserRoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.IsValid
  commentId: F:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.IsValid
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  name: IsValid
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.IsValid
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.IsValid
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).IsValid
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).IsValid
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).ExpandView(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).ExpandView(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.InitContext
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.InitContext
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  name: InitContext()
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.InitContext()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.InitContext()
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).InitContext()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).InitContext()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.InitModel
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.InitModel
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  name: InitModel()
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.InitModel()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.InitModel()
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).InitModel()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).InitModel()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.InitView(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.InitView(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitView(AspNetUserRoles, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.InitView(AspNetUserRoles, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.InitView(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).InitView(AspNetUserRoles, Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).InitView(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).ParseModel(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).ParseModel(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ParseView(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.ParseView(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).ParseView(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).ParseView(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Validate(SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Validate(SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Validate(SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Validate(Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneAsync(AspNetUserRoles, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.CloneAsync(AspNetUserRoles, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).CloneAsync(AspNetUserRoles, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).CloneAsync(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(AspNetUserRoles, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModelsAsync(UserRoleViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.CloneSubModelsAsync(UserRoleViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).CloneSubModelsAsync(UserRoleViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).CloneSubModelsAsync(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(UserRoleViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    name: UserRoleViewModel
    nameWithType: UserRoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    name: UserRoleViewModel
    nameWithType: UserRoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.RemoveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).RemoveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).RemoveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModelsAsync(UserRoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.RemoveRelatedModelsAsync(UserRoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).RemoveRelatedModelsAsync(UserRoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).RemoveRelatedModelsAsync(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    name: UserRoleViewModel
    nameWithType: UserRoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    name: UserRoleViewModel
    nameWithType: UserRoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveModelAsync(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.SaveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).SaveModelAsync(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).SaveModelAsync(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModelsAsync(AspNetUserRoles, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.SaveSubModelsAsync(AspNetUserRoles, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).SaveSubModelsAsync(AspNetUserRoles, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).SaveSubModelsAsync(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Clone(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Clone(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Clone(AspNetUserRoles, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Clone(AspNetUserRoles, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Clone(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Clone(AspNetUserRoles, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Clone(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(AspNetUserRoles, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModels(UserRoleViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.CloneSubModels(UserRoleViewModel, List<SupportedCulture>, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).CloneSubModels(UserRoleViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).CloneSubModels(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(UserRoleViewModel, List(Of SupportedCulture), SiocCmsAccountContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    name: UserRoleViewModel
    nameWithType: UserRoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    name: UserRoleViewModel
    nameWithType: UserRoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.RemoveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).RemoveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).RemoveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModels(UserRoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.RemoveRelatedModels(UserRoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).RemoveRelatedModels(UserRoleViewModel, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).RemoveRelatedModels(Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    name: UserRoleViewModel
    nameWithType: UserRoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    name: UserRoleViewModel
    nameWithType: UserRoleViewModel
    fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveModel(System.Boolean,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.SaveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).SaveModel(Boolean, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).SaveModel(System.Boolean, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModels(AspNetUserRoles, SiocCmsAccountContext, IDbContextTransaction)
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.SaveSubModels(AspNetUserRoles, SiocCmsAccountContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).SaveSubModels(AspNetUserRoles, SiocCmsAccountContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).SaveSubModels(Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    name: SiocCmsAccountContext
    nameWithType: SiocCmsAccountContext
    fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Repository
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Repository
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  name: Repository
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Repository
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Repository
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Repository
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Repository
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Exception
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Exception
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  name: Exception
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Exception
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Exception
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Exception
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Exception
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.IsClone
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.IsClone
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  name: IsClone
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.IsClone
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.IsClone
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).IsClone
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).IsClone
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.IsLazyLoad
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.IsLazyLoad
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  name: IsLazyLoad
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.IsLazyLoad
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).IsLazyLoad
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).IsLazyLoad
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ListSupportedCulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ListSupportedCulture
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  name: ListSupportedCulture
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.ListSupportedCulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.ListSupportedCulture
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).ListSupportedCulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).ListSupportedCulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Mapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Mapper
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  name: Mapper
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Mapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Mapper
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Mapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Mapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Model
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Model
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  name: Model
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Model
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Model
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Model
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Model
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ModelMapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.ModelMapper
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  name: ModelMapper
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.ModelMapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.ModelMapper
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).ModelMapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).ModelMapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.PageIndex
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.PageIndex
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  name: PageIndex
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.PageIndex
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.PageIndex
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).PageIndex
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).PageIndex
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.PageSize
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.PageSize
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  name: PageSize
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.PageSize
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.PageSize
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).PageSize
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).PageSize
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Priority
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Priority
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  name: Priority
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Priority
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Priority
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Priority
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Priority
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Status
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Status
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  name: Status
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Status
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Status
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Status
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Status
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Specificulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Specificulture
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  name: Specificulture
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Specificulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Specificulture
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Specificulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Specificulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Errors
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}.Errors
  parent: Swastika.Domain.Data.ViewModels.ViewModelBase{Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext,Swastika.Cms.Lib.Models.Account.AspNetUserRoles,Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel}
  definition: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  name: Errors
  nameWithType: ViewModelBase<SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel>.Errors
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel>.Errors
  nameWithType.vb: ViewModelBase(Of SiocCmsAccountContext, AspNetUserRoles, UserRoleViewModel).Errors
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext, Swastika.Cms.Lib.Models.Account.AspNetUserRoles, Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel).Errors
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
  commentId: T:Swastika.Domain.Data.ViewModels.ViewModelBase`3
  isExternal: true
  name: ViewModelBase<TDbContext, TModel, TView>
  nameWithType: ViewModelBase<TDbContext, TModel, TView>
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView)
  name.vb: ViewModelBase(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels
  commentId: N:Swastika.Domain.Data.ViewModels
  isExternal: true
  name: Swastika.Domain.Data.ViewModels
  nameWithType: Swastika.Domain.Data.ViewModels
  fullName: Swastika.Domain.Data.ViewModels
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  commentId: F:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsValid
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsValid
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsValid
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsValid
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandView(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  isExternal: true
  name: InitContext()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitContext
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  isExternal: true
  name: InitModel()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel()
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseModel(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseView(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseView
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Validate(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Validate
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TView, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TView, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Clone
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TView, System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TView, System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(TView, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`2,System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    fullName: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Repository
  isExternal: true
  name: Repository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Repository
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Repository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Repository
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Repository
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Exception
  isExternal: true
  name: Exception
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Exception
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Exception
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Exception
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Exception
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsClone
  isExternal: true
  name: IsClone
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsClone
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsClone
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsClone
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsClone
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.IsLazyLoad
  isExternal: true
  name: IsLazyLoad
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsLazyLoad
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsLazyLoad
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ListSupportedCulture
  isExternal: true
  name: ListSupportedCulture
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ListSupportedCulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ListSupportedCulture
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ListSupportedCulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ListSupportedCulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Mapper
  isExternal: true
  name: Mapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Mapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Mapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Mapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Mapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Model
  isExternal: true
  name: Model
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Model
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Model
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Model
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Model
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.ModelMapper
  isExternal: true
  name: ModelMapper
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ModelMapper
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ModelMapper
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageIndex
  isExternal: true
  name: PageIndex
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.PageIndex
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.PageIndex
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).PageIndex
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).PageIndex
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.PageSize
  isExternal: true
  name: PageSize
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.PageSize
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.PageSize
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).PageSize
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).PageSize
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Priority
  isExternal: true
  name: Priority
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Priority
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Priority
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Priority
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Priority
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Status
  isExternal: true
  name: Status
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Status
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Status
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Status
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Status
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Specificulture
  isExternal: true
  name: Specificulture
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Specificulture
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Specificulture
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Specificulture
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Specificulture
- uid: Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  commentId: P:Swastika.Domain.Data.ViewModels.ViewModelBase`3.Errors
  isExternal: true
  name: Errors
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Errors
  fullName: Swastika.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Errors
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Errors
  fullName.vb: Swastika.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Errors
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.#ctor*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.#ctor
  isExternal: true
  name: UserRoleViewModel
  nameWithType: UserRoleViewModel.UserRoleViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserRoleViewModel
- uid: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
  commentId: T:Swastika.Cms.Lib.Models.Account.AspNetUserRoles
  parent: Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: AspNetUserRoles
  nameWithType: AspNetUserRoles
  fullName: Swastika.Cms.Lib.Models.Account.AspNetUserRoles
- uid: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
  commentId: T:Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
  parent: Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: SiocCmsAccountContext
  nameWithType: SiocCmsAccountContext
  fullName: Swastika.Cms.Lib.Models.Account.SiocCmsAccountContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Swastika.Cms.Lib.Models.Account
  commentId: N:Swastika.Cms.Lib.Models.Account
  isExternal: true
  name: Swastika.Cms.Lib.Models.Account
  nameWithType: Swastika.Cms.Lib.Models.Account
  fullName: Swastika.Cms.Lib.Models.Account
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ExpandView*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ExpandView
  isExternal: true
  name: ExpandView
  nameWithType: UserRoleViewModel.ExpandView
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ExpandView
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserId*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserId
  isExternal: true
  name: UserId
  nameWithType: UserRoleViewModel.UserId
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.UserId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.RoleId*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.RoleId
  isExternal: true
  name: RoleId
  nameWithType: UserRoleViewModel.RoleId
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.RoleId
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ApplicationUserId*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ApplicationUserId
  isExternal: true
  name: ApplicationUserId
  nameWithType: UserRoleViewModel.ApplicationUserId
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.ApplicationUserId
- uid: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.Role*
  commentId: Overload:Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.Role
  isExternal: true
  name: Role
  nameWithType: UserRoleViewModel.Role
  fullName: Swastika.Cms.Lib.ViewModels.Account.UserRoleViewModel.Role
- uid: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  commentId: T:Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
  parent: Swastika.Cms.Lib.ViewModels.Account
  isExternal: true
  name: RoleViewModel
  nameWithType: RoleViewModel
  fullName: Swastika.Cms.Lib.ViewModels.Account.RoleViewModel
