### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  id: ApiModuleDataValueViewModel
  parent: Mix.Cms.Lib.ViewModels
  children:
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.#ctor
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.DataType
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsDisplay
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsGroupBy
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsRequired
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsSelect
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsUnique
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Name
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Options
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Title
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Validate``1(System.IConvertible,System.String,Newtonsoft.Json.Linq.JObject,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Value
  langs:
  - csharp
  - vb
  name: ApiModuleDataValueViewModel
  nameWithType: ApiModuleDataValueViewModel
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  type: Class
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: 'public class ApiModuleDataValueViewModel : Object'
    content.vb: >-
      Public Class ApiModuleDataValueViewModel
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Validate``1(System.IConvertible,System.String,Newtonsoft.Json.Linq.JObject,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Validate``1(System.IConvertible,System.String,Newtonsoft.Json.Linq.JObject,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: Validate``1(System.IConvertible,System.String,Newtonsoft.Json.Linq.JObject,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: Validate<T>(IConvertible, String, JObject, MixCmsContext, IDbContextTransaction)
  nameWithType: ApiModuleDataValueViewModel.Validate<T>(IConvertible, String, JObject, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Validate<T>(System.IConvertible, System.String, Newtonsoft.Json.Linq.JObject, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      public RepositoryResponse<bool> Validate<T>(IConvertible id, string specificulture, JObject jItem, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
          where T : class
    parameters:
    - id: id
      type: System.IConvertible
    - id: specificulture
      type: System.String
    - id: jItem
      type: Newtonsoft.Json.Linq.JObject
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: T
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
    content.vb: Public Function Validate(Of T As Class)(id As IConvertible, specificulture As String, jItem As JObject, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As RepositoryResponse(Of Boolean)
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Validate*
  nameWithType.vb: ApiModuleDataValueViewModel.Validate(Of T)(IConvertible, String, JObject, MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Validate(Of T)(System.IConvertible, System.String, Newtonsoft.Json.Linq.JObject, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Validate(Of T)(IConvertible, String, JObject, MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.#ctor
  commentId: M:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: ApiModuleDataValueViewModel()
  nameWithType: ApiModuleDataValueViewModel.ApiModuleDataValueViewModel()
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.ApiModuleDataValueViewModel()
  type: Constructor
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public ApiModuleDataValueViewModel()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Name
  commentId: P:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Name
  id: Name
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ApiModuleDataValueViewModel.Name
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Name
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Title
  commentId: P:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Title
  id: Title
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ApiModuleDataValueViewModel.Title
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Title
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsUnique
  commentId: P:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsUnique
  id: IsUnique
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: IsUnique
  nameWithType: ApiModuleDataValueViewModel.IsUnique
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsUnique
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public bool IsUnique { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsUnique As Boolean
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsUnique*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsRequired
  commentId: P:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsRequired
  id: IsRequired
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: IsRequired
  nameWithType: ApiModuleDataValueViewModel.IsRequired
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsRequired
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public bool IsRequired { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRequired As Boolean
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsRequired*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.DataType
  commentId: P:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.DataType
  id: DataType
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: ApiModuleDataValueViewModel.DataType
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.DataType
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public MixEnums.MixDataType DataType { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.MixEnums.MixDataType
    content.vb: Public Property DataType As MixEnums.MixDataType
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.DataType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Value
  commentId: P:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Value
  id: Value
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ApiModuleDataValueViewModel.Value
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Value
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsDisplay
  commentId: P:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsDisplay
  id: IsDisplay
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: IsDisplay
  nameWithType: ApiModuleDataValueViewModel.IsDisplay
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsDisplay
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public bool IsDisplay { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDisplay As Boolean
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsDisplay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsSelect
  commentId: P:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsSelect
  id: IsSelect
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: IsSelect
  nameWithType: ApiModuleDataValueViewModel.IsSelect
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsSelect
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public bool IsSelect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSelect As Boolean
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsSelect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsGroupBy
  commentId: P:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsGroupBy
  id: IsGroupBy
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: IsGroupBy
  nameWithType: ApiModuleDataValueViewModel.IsGroupBy
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsGroupBy
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public bool IsGroupBy { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsGroupBy As Boolean
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsGroupBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Options
  commentId: P:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Options
  id: Options
  parent: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ApiModuleDataValueViewModel.Options
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Options
  type: Property
  source:
    path: Mix.Cms.Lib
    isExternal: true
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public JArray Options { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JArray
    content.vb: Public Property Options As JArray
  overload: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Options*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Lib.ViewModels
  commentId: N:Mix.Cms.Lib.ViewModels
  isExternal: true
  name: Mix.Cms.Lib.ViewModels
  nameWithType: Mix.Cms.Lib.ViewModels
  fullName: Mix.Cms.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Validate*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Validate
  isExternal: true
  name: Validate
  nameWithType: ApiModuleDataValueViewModel.Validate
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Validate
- uid: System.IConvertible
  commentId: '!:System.IConvertible'
  isExternal: true
  name: IConvertible
  nameWithType: IConvertible
  fullName: System.IConvertible
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Newtonsoft.Json.Linq.JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  isExternal: true
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<Boolean>
  nameWithType: RepositoryResponse<Boolean>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<System.Boolean>
  nameWithType.vb: RepositoryResponse(Of Boolean)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of System.Boolean)
  name.vb: RepositoryResponse(Of Boolean)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  isExternal: true
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse`1
  isExternal: true
  name: RepositoryResponse<TResult>
  nameWithType: RepositoryResponse<TResult>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<TResult>
  nameWithType.vb: RepositoryResponse(Of TResult)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of TResult)
  name.vb: RepositoryResponse(Of TResult)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels
  commentId: N:Mix.Domain.Core.ViewModels
  isExternal: true
  name: Mix.Domain.Core.ViewModels
  nameWithType: Mix.Domain.Core.ViewModels
  fullName: Mix.Domain.Core.ViewModels
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.#ctor*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.#ctor
  isExternal: true
  name: ApiModuleDataValueViewModel
  nameWithType: ApiModuleDataValueViewModel.ApiModuleDataValueViewModel
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.ApiModuleDataValueViewModel
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Name*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Name
  isExternal: true
  name: Name
  nameWithType: ApiModuleDataValueViewModel.Name
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Name
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Title*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Title
  isExternal: true
  name: Title
  nameWithType: ApiModuleDataValueViewModel.Title
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Title
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsUnique*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsUnique
  isExternal: true
  name: IsUnique
  nameWithType: ApiModuleDataValueViewModel.IsUnique
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsUnique
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsRequired*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsRequired
  isExternal: true
  name: IsRequired
  nameWithType: ApiModuleDataValueViewModel.IsRequired
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsRequired
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.DataType*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.DataType
  isExternal: true
  name: DataType
  nameWithType: ApiModuleDataValueViewModel.DataType
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.DataType
- uid: Mix.Cms.Lib.MixEnums.MixDataType
  commentId: T:Mix.Cms.Lib.MixEnums.MixDataType
  parent: Mix.Cms.Lib
  isExternal: true
  name: MixEnums.MixDataType
  nameWithType: MixEnums.MixDataType
  fullName: Mix.Cms.Lib.MixEnums.MixDataType
- uid: Mix.Cms.Lib
  commentId: N:Mix.Cms.Lib
  isExternal: true
  name: Mix.Cms.Lib
  nameWithType: Mix.Cms.Lib
  fullName: Mix.Cms.Lib
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Value*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Value
  isExternal: true
  name: Value
  nameWithType: ApiModuleDataValueViewModel.Value
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Value
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsDisplay*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsDisplay
  isExternal: true
  name: IsDisplay
  nameWithType: ApiModuleDataValueViewModel.IsDisplay
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsDisplay
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsSelect*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsSelect
  isExternal: true
  name: IsSelect
  nameWithType: ApiModuleDataValueViewModel.IsSelect
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsSelect
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsGroupBy*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsGroupBy
  isExternal: true
  name: IsGroupBy
  nameWithType: ApiModuleDataValueViewModel.IsGroupBy
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.IsGroupBy
- uid: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Options*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Options
  isExternal: true
  name: Options
  nameWithType: ApiModuleDataValueViewModel.Options
  fullName: Mix.Cms.Lib.ViewModels.ApiModuleDataValueViewModel.Options
- uid: Newtonsoft.Json.Linq.JArray
  isExternal: true
  name: JArray
  nameWithType: JArray
  fullName: Newtonsoft.Json.Linq.JArray
