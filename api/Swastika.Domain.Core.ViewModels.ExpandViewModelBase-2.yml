### YamlMime:ManagedReference
items:
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  commentId: T:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  id: ExpandViewModelBase`2
  parent: Swastika.Domain.Core.ViewModels
  children:
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.#ctor
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.errors
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandModel(`1)
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.IsValid
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ListSupportedCulture
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Model
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.RemoveModelAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ResponseKey
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Validate
  langs:
  - csharp
  - vb
  name: ExpandViewModelBase<TDbContext, TModel>
  nameWithType: ExpandViewModelBase<TDbContext, TModel>
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>
  type: Class
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: 'public abstract class ExpandViewModelBase<TDbContext, TModel> : Object where TDbContext : DbContext where TModel : class'
    typeParameters:
    - id: TDbContext
    - id: TModel
    content.vb: >-
      Public MustInherit Class ExpandViewModelBase(Of TDbContext As DbContext, TModel As Class)
          Inherits Object
  inheritance:
  - System.Object
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel)
  name.vb: ExpandViewModelBase(Of TDbContext, TModel)
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.errors
  commentId: F:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.errors
  id: errors
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: errors
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.errors
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.errors
  type: Field
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public List<string> errors
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public errors As List(Of String)
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).errors
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).errors
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.IsValid
  commentId: F:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.IsValid
  id: IsValid
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.IsValid
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.IsValid
  type: Field
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public bool IsValid
    return:
      type: System.Boolean
    content.vb: Public IsValid As Boolean
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).IsValid
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).IsValid
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandModel(`1)
  commentId: M:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandModel(`1)
  id: ExpandModel(`1)
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: ExpandModel(TModel)
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.ExpandModel(TModel)
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.ExpandModel(TModel)
  type: Method
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public virtual void ExpandModel(TModel model)
    parameters:
    - id: model
      type: '{TModel}'
    content.vb: Public Overridable Sub ExpandModel(model As TModel)
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandModel*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).ExpandModel(TModel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).ExpandModel(TModel)
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: ExpandView(TDbContext, IDbContextTransaction)
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.ExpandView(TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public virtual void ExpandView(TDbContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: _context
      type: '{TDbContext}'
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Overridable Sub ExpandView(_context As TDbContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandView*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).ExpandView(TDbContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.RemoveModelAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.RemoveModelAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: RemoveModelAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: RemoveModelAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.RemoveModelAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.RemoveModelAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public virtual Task<bool> RemoveModelAsync(TModel model, TDbContext _context, IDbContextTransaction _transaction)
    parameters:
    - id: model
      type: '{TModel}'
    - id: _context
      type: '{TDbContext}'
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Overridable Function RemoveModelAsync(model As TModel, _context As TDbContext, _transaction As IDbContextTransaction) As Task(Of Boolean)
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.RemoveModelAsync*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).RemoveModelAsync(TModel, TDbContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).RemoveModelAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: SaveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public abstract bool SaveModel(bool isSaveSubModels = false, TDbContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: isSaveSubModels
      type: System.Boolean
    - id: _context
      type: '{TDbContext}'
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function SaveModel(isSaveSubModels As Boolean = False, _context As TDbContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Boolean
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModel*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).SaveModel(Boolean, TDbContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public abstract Task<bool> SaveModelAsync(bool isSaveSubModels = false, TDbContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: isSaveSubModels
      type: System.Boolean
    - id: _context
      type: '{TDbContext}'
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public MustOverride Function SaveModelAsync(isSaveSubModels As Boolean = False, _context As TDbContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of Boolean)
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModelAsync*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public virtual bool SaveSubModels(TModel parent, TDbContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: parent
      type: '{TModel}'
    - id: _context
      type: '{TDbContext}'
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Boolean
    content.vb: Public Overridable Function SaveSubModels(parent As TModel, _context As TDbContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Boolean
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModels*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public virtual Task<bool> SaveSubModelsAsync(TModel parent, TDbContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: parent
      type: '{TModel}'
    - id: _context
      type: '{TDbContext}'
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Overridable Function SaveSubModelsAsync(parent As TModel, _context As TDbContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of Boolean)
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModelsAsync*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Validate
  commentId: M:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Validate
  id: Validate
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.Validate()
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.Validate()
  type: Method
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Validate*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).Validate()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).Validate()
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.#ctor
  commentId: M:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.#ctor
  id: '#ctor'
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: ExpandViewModelBase()
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.ExpandViewModelBase()
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.ExpandViewModelBase()
  type: Constructor
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: protected ExpandViewModelBase()
    content.vb: Protected Sub New
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.#ctor*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).ExpandViewModelBase()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).ExpandViewModelBase()
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ListSupportedCulture
  commentId: P:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ListSupportedCulture
  id: ListSupportedCulture
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: ListSupportedCulture
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.ListSupportedCulture
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.ListSupportedCulture
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public List<SupportedCulture> ListSupportedCulture { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture}
    content.vb: Public Property ListSupportedCulture As List(Of SupportedCulture)
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ListSupportedCulture*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).ListSupportedCulture
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).ListSupportedCulture
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Model
  commentId: P:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Model
  id: Model
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.Model
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.Model
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public TModel Model { get; set; }
    parameters: []
    return:
      type: '{TModel}'
    content.vb: Public Property Model As TModel
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Model*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).Model
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).Model
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ResponseKey
  commentId: P:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ResponseKey
  id: ResponseKey
  parent: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2
  langs:
  - csharp
  - vb
  name: ResponseKey
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.ResponseKey
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.ResponseKey
  type: Property
  source:
    path: Swastika
    isExternal: true
  assemblies:
  - Swastika
  namespace: Swastika.Domain.Core.ViewModels
  syntax:
    content: public string ResponseKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ResponseKey As String
  overload: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ResponseKey*
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).ResponseKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).ResponseKey
references:
- uid: Swastika.Domain.Core.ViewModels
  commentId: N:Swastika.Domain.Core.ViewModels
  isExternal: true
  name: Swastika.Domain.Core.ViewModels
  nameWithType: Swastika.Domain.Core.ViewModels
  fullName: Swastika.Domain.Core.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.String}
  commentId: '!:System.Collections.Generic.List{System.String}'
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandModel*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandModel
  isExternal: true
  name: ExpandModel
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.ExpandModel
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.ExpandModel
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).ExpandModel
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).ExpandModel
- uid: '{TModel}'
  commentId: '!:TModel'
  definition: TModel
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: TModel
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandView*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ExpandView
  isExternal: true
  name: ExpandView
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.ExpandView
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.ExpandView
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).ExpandView
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).ExpandView
- uid: '{TDbContext}'
  commentId: '!:TDbContext'
  definition: TDbContext
  name: TDbContext
  nameWithType: TDbContext
  fullName: TDbContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: TDbContext
  name: TDbContext
  nameWithType: TDbContext
  fullName: TDbContext
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.RemoveModelAsync*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.RemoveModelAsync
  isExternal: true
  name: RemoveModelAsync
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.RemoveModelAsync
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.RemoveModelAsync
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).RemoveModelAsync
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).RemoveModelAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModel*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModel
  isExternal: true
  name: SaveModel
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.SaveModel
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.SaveModel
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).SaveModel
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).SaveModel
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModelAsync*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveModelAsync
  isExternal: true
  name: SaveModelAsync
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.SaveModelAsync
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.SaveModelAsync
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).SaveModelAsync
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).SaveModelAsync
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModels*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModels
  isExternal: true
  name: SaveSubModels
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.SaveSubModels
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.SaveSubModels
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).SaveSubModels
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).SaveSubModels
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModelsAsync*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.SaveSubModelsAsync
  isExternal: true
  name: SaveSubModelsAsync
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.SaveSubModelsAsync
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.SaveSubModelsAsync
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).SaveSubModelsAsync
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).SaveSubModelsAsync
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Validate*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Validate
  isExternal: true
  name: Validate
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.Validate
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.Validate
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).Validate
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).Validate
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.#ctor*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.#ctor
  isExternal: true
  name: ExpandViewModelBase
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.ExpandViewModelBase
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.ExpandViewModelBase
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).ExpandViewModelBase
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).ExpandViewModelBase
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ListSupportedCulture*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ListSupportedCulture
  isExternal: true
  name: ListSupportedCulture
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.ListSupportedCulture
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.ListSupportedCulture
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).ListSupportedCulture
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).ListSupportedCulture
- uid: System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture}
  commentId: '!:System.Collections.Generic.List{Swastika.Domain.Core.Models.SupportedCulture}'
  definition: System.Collections.Generic.List`1
  name: List<SupportedCulture>
  nameWithType: List<SupportedCulture>
  fullName: System.Collections.Generic.List<Swastika.Domain.Core.Models.SupportedCulture>
  nameWithType.vb: List(Of SupportedCulture)
  fullName.vb: System.Collections.Generic.List(Of Swastika.Domain.Core.Models.SupportedCulture)
  name.vb: List(Of SupportedCulture)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Swastika.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Swastika.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Model*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.Model
  isExternal: true
  name: Model
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.Model
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.Model
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).Model
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).Model
- uid: Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ResponseKey*
  commentId: Overload:Swastika.Domain.Core.ViewModels.ExpandViewModelBase`2.ResponseKey
  isExternal: true
  name: ResponseKey
  nameWithType: ExpandViewModelBase<TDbContext, TModel>.ResponseKey
  fullName: Swastika.Domain.Core.ViewModels.ExpandViewModelBase<TDbContext, TModel>.ResponseKey
  nameWithType.vb: ExpandViewModelBase(Of TDbContext, TModel).ResponseKey
  fullName.vb: Swastika.Domain.Core.ViewModels.ExpandViewModelBase(Of TDbContext, TModel).ResponseKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
